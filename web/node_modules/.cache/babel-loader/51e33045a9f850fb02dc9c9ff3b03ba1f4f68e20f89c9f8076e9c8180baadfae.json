{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [encoders, setEncoders] = useState({\n    rivers: [],\n    locations: []\n  });\n  const [river, setRiver] = useState('');\n  const [location, setLocation] = useState('');\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [predictions, setPredictions] = useState(null);\n  useEffect(() => {\n    fetch(`${API_BASE}/encoders`).then(r => r.json()).then(data => {\n      setEncoders(data);\n      setRiver(data.rivers[0] || '');\n      setLocation(data.locations[0] || '');\n    }).catch(() => {});\n  }, []);\n  const handlePredict = async () => {\n    const res = await fetch(`${API_BASE}/predict`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        river,\n        location,\n        month: Number(month),\n        year: Number(year)\n      })\n    });\n    const body = await res.json();\n    setPredictions(body.predictions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Water Quality Predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simple web interface for the prediction model.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"River\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: river,\n            onChange: e => setRiver(e.target.value),\n            children: encoders.rivers.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: r\n            }, r, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Location\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            children: encoders.locations.map(l => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: l\n            }, l, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 44\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"12\",\n            value: month,\n            onChange: e => setMonth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2020\",\n            max: \"2040\",\n            value: year,\n            onChange: e => setYear(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePredict,\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), predictions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(predictions, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j6rhIzEszf1L6YopCeuQ4rvXp4E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","App","_s","encoders","setEncoders","rivers","locations","river","setRiver","location","setLocation","month","setMonth","Date","getMonth","year","setYear","getFullYear","predictions","setPredictions","fetch","then","r","json","data","catch","handlePredict","res","method","headers","body","JSON","stringify","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","l","type","min","max","onClick","_c","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\nfunction App() {\r\n  const [encoders, setEncoders] = useState({ rivers: [], locations: [] });\r\n  const [river, setRiver] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [predictions, setPredictions] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_BASE}/encoders`).then(r => r.json()).then(data => {\r\n      setEncoders(data);\r\n      setRiver(data.rivers[0] || '');\r\n      setLocation(data.locations[0] || '');\r\n    }).catch(() => {});\r\n  }, []);\r\n\r\n  const handlePredict = async () => {\r\n    const res = await fetch(`${API_BASE}/predict`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ river, location, month: Number(month), year: Number(year) })\r\n    });\r\n    const body = await res.json();\r\n    setPredictions(body.predictions);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Water Quality Predictor</h1>\r\n        <p>Simple web interface for the prediction model.</p>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"controls\">\r\n          <label>\r\n            River\r\n            <select value={river} onChange={e => setRiver(e.target.value)}>\r\n              {encoders.rivers.map(r => <option key={r}>{r}</option>)}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Location\r\n            <select value={location} onChange={e => setLocation(e.target.value)}>\r\n              {encoders.locations.map(l => <option key={l}>{l}</option>)}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Month\r\n            <input type=\"number\" min=\"1\" max=\"12\" value={month} onChange={e => setMonth(e.target.value)} />\r\n          </label>\r\n\r\n          <label>\r\n            Year\r\n            <input type=\"number\" min=\"2020\" max=\"2040\" value={year} onChange={e => setYear(e.target.value)} />\r\n          </label>\r\n\r\n          <button onClick={handlePredict}>Predict</button>\r\n        </div>\r\n\r\n        {predictions && (\r\n          <div className=\"results\">\r\n            <h2>Predictions</h2>\r\n            <pre>{JSON.stringify(predictions, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}