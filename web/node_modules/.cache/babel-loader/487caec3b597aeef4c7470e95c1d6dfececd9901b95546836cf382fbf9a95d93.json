{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// ensure leaflet marker icons load correctly when not using bundled images\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction formatValue(key, value) {\n  if (value === null || value === undefined) return '—';\n  const n = Number(value);\n  if (!Number.isNaN(n)) {\n    if (/pH/i.test(key)) return n.toFixed(3);\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\n    return String(n);\n  }\n  return String(value);\n}\nfunction cleanQualityString(quality) {\n  if (quality === null || quality === undefined) return quality;\n  let s = String(quality).trim();\n  if (!s) return s;\n  // normalize whitespace\n  s = s.replace(/\\s+/g, ' ');\n  // remove duplicated trailing punctuation and normalize\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\n  if (m && m[1]) return m[1].trim();\n  // fallback: if full-string repeated twice (older regex)\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\n  return m2 ? m2[1].trim() : s;\n}\nfunction canonicalizePredictionEntries(pred) {\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\n  if (!pred || typeof pred !== 'object') return [];\n  const map = new Map();\n  for (const [k, v] of Object.entries(pred)) {\n    const key = String(k).trim();\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\n    // map some common aliases\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\n    map.set(canonical, {\n      key: key,\n      value: v\n    });\n  }\n  // return in insertion order but using original key casing for display\n  return Array.from(map.values()).map(x => [x.key, x.value]);\n}\n\n// small helper component to forward map click events into lat/lon objects\nfunction MapClickHandler({\n  onMapClick\n}) {\n  _s();\n  useMapEvents({\n    click: e => {\n      onMapClick && onMapClick({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n    }\n  });\n  return null;\n}\n\n// basic parameter status mapping used by badges in the UI\n_s(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = MapClickHandler;\nfunction getParameterStatus(param, value) {\n  if (value === null || value === undefined) return {\n    cls: 'status-na',\n    label: 'N/A'\n  };\n  const key = String(param || '').toLowerCase();\n  const v = Number(value);\n  if (key.includes('water quality')) {\n    const s = String(value || '').toLowerCase();\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (s.includes('moderate') || s.includes('borderline')) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: String(value),\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('pH')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 6.5 && v <= 8.5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 6 && v < 6.5) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('do')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 3) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('bod')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 3) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 6) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('fc mpn/100ml')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 500) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 1000) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('tc mpn/100ml')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 1000) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 2000) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  return {\n    label: String(value),\n    cls: 'status-na'\n  };\n}\nexport default function App() {\n  _s2();\n  const [route, setRoute] = useState('home');\n  const [mapInst, setMapInst] = useState(null);\n  const [selectMode, setSelectMode] = useState(null);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]);\n  const [interpLoading, setInterpLoading] = useState(false);\n  const [sampleCount, setSampleCount] = useState(5);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [startInput, setStartInput] = useState('');\n  const [endInput, setEndInput] = useState('');\n  const [startRiver, setStartRiver] = useState(null);\n  const [endRiver, setEndRiver] = useState(null);\n  const [startStationName, setStartStationName] = useState(null);\n  const [endStationName, setEndStationName] = useState(null);\n  // Add missing state for forceIndexMedians\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = currentDate.getMonth() + 1;\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n  const handleMapClick = useCallback(pt => {\n    if (selectMode === 'start') setStartPoint(pt);else if (selectMode === 'end') setEndPoint(pt);\n  }, [selectMode]);\n  const handleMarkerClick = loc => {\n    // In interpolate route, if user is picking start or end, set them from known station\n    if (route === 'interpolate' && selectMode === 'start') {\n      const coord = loc.coordinate || loc;\n      setStartPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setStartRiver(loc.river || null);\n      setStartStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    if (route === 'interpolate' && selectMode === 'end') {\n      // guard: do not allow picking end on a different river than start\n      if (startRiver && loc.river && startRiver !== loc.river) {\n        alert('Please pick an end station on the same river as the start station.');\n        setSelectMode(null);\n        return;\n      }\n      const coord = loc.coordinate || loc;\n      setEndPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setEndRiver(loc.river || null);\n      setEndStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    // default behaviour: open details\n    setSelected(loc);\n    // attach available prediction\n    const pred = predictions[loc.id] || null;\n    setSelected(prev => ({\n      ...loc,\n      prediction: pred\n    }));\n  };\n  const performInterpolation = async () => {\n    if (!startPoint || !endPoint) return alert('Pick start and end');\n    setInterpLoading(true);\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\n    const nearestIndex = pt => {\n      let best = 0,\n        bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPoint),\n      ei = nearestIndex(endPoint);\n    const a = Math.min(si, ei),\n      b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true,\n      blend: 'river'\n    };\n    // include explicit station-name override only when user forces index medians\n    if (forceIndexMedians && startStationName && endStationName) {\n      body.start_station_name = startStationName;\n      body.end_station_name = endStationName;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) return alert('Server: ' + jb.error);\n      const pts = jb.predictions || [];\n      setInterpPoints(pts);\n      // fit map to interpolated points if we have a map instance\n      try {\n        if (mapInst && pts && pts.length > 0) {\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\n          mapInst.fitBounds(latlngs, {\n            padding: [40, 40]\n          });\n        }\n      } catch (e) {}\n    } catch (err) {\n      alert('Request failed');\n    } finally {\n      setInterpLoading(false);\n    }\n  };\n  function haversineKm(a, b) {\n    if (!a || !b) return 0;\n    const toRad = v => v * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(b.latitude - a.latitude);\n    const dLon = toRad(b.longitude - a.longitude);\n    const lat1 = toRad(a.latitude);\n    const lat2 = toRad(b.latitude);\n    const sinDlat = Math.sin(dLat / 2),\n      sinDlon = Math.sin(dLon / 2);\n    const aa = sinDlat * sinDlat + sinDlon * sinDlon * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1 - aa));\n    return R * c;\n  }\n  const copyCoord = pt => {\n    if (!pt) return;\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\n    try {\n      navigator.clipboard && navigator.clipboard.writeText(s);\n    } catch (e) {}\n  };\n  const clearStart = () => {\n    setStartPoint(null);\n    setInterpPoints([]);\n  };\n  const clearEnd = () => {\n    setEndPoint(null);\n    setInterpPoints([]);\n  };\n\n  // Fetch predictions for all stations when app loads or selectedDate changes\n  useEffect(() => {\n    async function fetchPredictions() {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${selectedMonth}&year=${selectedYear}`);\n        const jb = await res.json();\n        if (jb && jb.predictions) {\n          // Map predictions to station id\n          const preds = {};\n          jb.predictions.forEach(pred => {\n            // Find location by name\n            const loc = puneLocations.find(l => l.name === pred.location);\n            if (loc && loc.id) preds[loc.id] = pred;\n          });\n          setPredictions(preds);\n        }\n      } catch (err) {\n        // Optionally handle error\n      }\n    }\n    fetchPredictions();\n  }, [selectedMonth, selectedYear]);\n\n  // On initial load, show predictions for current date\n  useEffect(() => {\n    setSelectedMonth(currentMonth);\n    setSelectedYear(currentYear);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-hero\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo\",\n                children: /*#__PURE__*/_jsxDEV(FaWater, {\n                  size: 28,\n                  color: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"RiverWatch \\u2014 Pune Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"muted\",\n                  children: \"Water quality predictions for Pune rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col rivers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula\",\n                    children: \"Mula\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mutha\",\n                    children: \"Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula-mutha\",\n                    children: \"Mula-Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula-Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col params\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-names\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"DO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"BOD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"FC/TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 50\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-cta\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setRoute('predict'),\n                children: \"Go to Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"secondary\",\n                onClick: () => setRoute('interpolate'),\n                children: \"Go to Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          style: {\n            height: 'calc(100vh - 36px)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 16,\n              marginBottom: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 600\n              },\n              children: \"Month:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth,\n              onChange: e => {\n                setSelectedMonth(Number(e.target.value));\n              },\n              children: Array.from({\n                length: 12\n              }, (_, i) => i + 1).map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: m,\n                children: m\n              }, m, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 64\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 600\n              },\n              children: \"Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedYear,\n              onChange: e => {\n                setSelectedYear(Number(e.target.value));\n              },\n              children: Array.from({\n                length: 8\n              }, (_, i) => currentYear - 4 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: y,\n                children: y\n              }, y, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 75\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [puneCenter.latitude, puneCenter.longitude],\n            zoom: puneCenter.zoom,\n            className: \"map\",\n            whenCreated: m => setMapInst(m),\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n              onMapClick: handleMapClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), puneLocations.map(loc => {\n              const pred = predictions[loc.id] || null;\n              const entries = pred ? canonicalizePredictionEntries(pred) : [];\n              const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n              const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\n              const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\n              return /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [loc.coordinate.latitude, loc.coordinate.longitude],\n                pathOptions: {\n                  color: getRiverColor(loc.river),\n                  fillColor: getRiverColor(loc.river),\n                  fillOpacity: 0.9\n                },\n                radius: 8,\n                eventHandlers: {\n                  click: () => handleMarkerClick(loc)\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-card\",\n                    style: {\n                      minWidth: 260\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-title\",\n                          children: cleanQualityString(loc.name)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-sub muted\",\n                          style: {\n                            display: 'flex',\n                            gap: 8,\n                            alignItems: 'center',\n                            marginTop: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                            children: cleanQualityString(loc.river)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 355,\n                            columnNumber: 33\n                          }, this), overallValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${overallStatus ? overallStatus.cls : 'status-na'}`,\n                            children: overallValue\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 356,\n                            columnNumber: 49\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 27\n                    }, this), pred ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-grid\",\n                      children: entries.filter(([k]) => {\n                        const key = String(k).toLowerCase();\n                        return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n                      }).map(([k, v]) => {\n                        const value = formatValue(k, v);\n                        const s = getParameterStatus(k, v);\n                        // For pH, show value and status side by side\n                        if (String(k).toLowerCase() === 'pH') {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-row\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"param-name\",\n                              children: k\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"param-value\",\n                              style: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: 8\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"val-text\",\n                                children: value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 377,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: `badge ${s.cls}`,\n                                children: s.label\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 378,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 376,\n                              columnNumber: 41\n                            }, this)]\n                          }, k, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 374,\n                            columnNumber: 39\n                          }, this);\n                        }\n                        // For other parameters, show value and status as before\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"param-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-name\",\n                            children: k\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 386,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-value\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"val-text\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 388,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: `badge ${s.cls}`,\n                              style: {\n                                marginLeft: 8\n                              },\n                              children: s.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 389,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 39\n                          }, this)]\n                        }, k, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this)\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this);\n            }), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [startPoint.latitude, startPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 58\n            }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [endPoint.latitude, endPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 56\n            }, this) : null, route === 'interpolate' && interpPoints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                positions: interpPoints.map(p => [p.latitude, p.longitude]),\n                pathOptions: {\n                  color: '#0077b6',\n                  weight: 3,\n                  opacity: 0.7\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), interpPoints.map((pt, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [pt.latitude, pt.longitude],\n                radius: 6,\n                pathOptions: {\n                  color: '#0077b6',\n                  fillColor: '#00b4d8',\n                  fillOpacity: 0.9\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minWidth: 220\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Interpolated\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 36\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`,\n                        children: cleanQualityString(pt['Water Quality'])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 29\n                    }, this), ['pH', 'DO (mg/L)', 'BOD (mg/L)'].map((param, idx) => {\n                      const val = pt[param];\n                      const valStr = val === null || val === undefined ? '—' : Number(val).toFixed(3);\n                      const status = getParameterStatus(param, val);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          marginTop: idx === 0 ? 8 : 4,\n                          borderTop: idx === 0 ? '1px solid #edf2f7' : 'none',\n                          paddingTop: idx === 0 ? 8 : 0\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 13,\n                            color: '#334155',\n                            fontWeight: 700\n                          },\n                          children: param\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 421,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 18,\n                              fontWeight: 800,\n                              color: '#0b3b52'\n                            },\n                            children: valStr\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 423,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${status.cls}`,\n                            children: status.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 424,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 422,\n                          columnNumber: 35\n                        }, this)]\n                      }, param, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 33\n                      }, this);\n                    }), ['FC MPN/100ml', 'TC MPN/100ml'].map(param => {\n                      if (pt[param] !== undefined && pt[param] !== null) {\n                        const val = pt[param];\n                        const valStr = val === null || val === undefined ? '—' : Number(val).toFixed(2);\n                        const status = getParameterStatus(param, val);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            marginTop: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 13,\n                              color: '#334155',\n                              fontWeight: 700\n                            },\n                            children: param\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 437,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: 8\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                fontSize: 15,\n                                fontWeight: 700,\n                                color: '#0b3b52'\n                              },\n                              children: valStr\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 439,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: `badge ${status.cls}`,\n                              children: status.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 440,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 438,\n                            columnNumber: 37\n                          }, this)]\n                        }, param, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 436,\n                          columnNumber: 35\n                        }, this);\n                      }\n                      return null;\n                    }), pt && pt.t_frac !== undefined && pt.t_frac !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8,\n                        fontSize: 12,\n                        color: '#64748b'\n                      },\n                      children: [\"Blend t: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: Number(pt.t_frac).toFixed(3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 31\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 25\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"detail-panel\",\n        style: {\n          width: 360\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8,\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('home'),\n            className: \"small\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('interpolate'),\n            className: \"small primary\",\n            children: \"Interpolate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), route === 'interpolate' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls-row\",\n              style: {\n                marginBottom: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n                className: selectMode === 'start' ? 'active small primary' : '',\n                children: \"Pick Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n                className: selectMode === 'end' ? 'active small primary' : '',\n                children: \"Pick End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectMode(null);\n                  setInterpPoints([]);\n                  setStartPoint(null);\n                  setEndPoint(null);\n                  setStartInput('');\n                  setEndInput('');\n                  setStartRiver(null);\n                  setEndRiver(null);\n                  setStartStationName(null);\n                  setEndStationName(null);\n                },\n                className: \"small\",\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 8,\n                color: '#0b3b52',\n                fontSize: 13\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick stations only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 75\n              }, this), \" \\u2014 interpolation will use river-linear blending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 12,\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 0,\n                  fontSize: 13,\n                  color: '#475569'\n                },\n                children: \"Points k:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-box\",\n                type: \"number\",\n                min: 1,\n                max: 50,\n                value: sampleCount,\n                onChange: e => setSampleCount(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.min(50, (sampleCount || 1) + 1));\n                  },\n                  children: \"+1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.max(1, (sampleCount || 1) - 1));\n                  },\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: \"-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: startInput || (startPoint ? `${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setStartInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(startPoint);\n                  },\n                  disabled: !startPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setStartInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 435\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearStart();\n                    setStartInput('');\n                    setStartRiver(null);\n                    setStartStationName(null);\n                  },\n                  disabled: !startPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 194\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: endInput || (endPoint ? `${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setEndInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(endPoint);\n                  },\n                  disabled: !endPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setEndInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 431\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearEnd();\n                    setEndInput('');\n                    setEndRiver(null);\n                    setEndStationName(null);\n                  },\n                  disabled: !endPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 184\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Distance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#233249'\n                  },\n                  children: startPoint && endPoint ? `${haversineKm(startPoint, endPoint).toFixed(2)} km` : '—'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 8,\n                  marginLeft: 12\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12,\n                    color: '#475569'\n                  },\n                  children: forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-primary\",\n                  onClick: performInterpolation,\n                  disabled: !startPoint || !endPoint || interpLoading,\n                  children: interpLoading ? 'Interpolating…' : 'Interpolate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(selectedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cleanQualityString(selected.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                  children: cleanQualityString(selected.river)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 24\n                }, this), \" \\u2022 \", selected.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), selected.prediction ? (() => {\n                const entries = canonicalizePredictionEntries(selected.prediction);\n                const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n                if (overall) {\n                  const s = getParameterStatus('Water Quality', overall[1]);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `badge ${s ? s.cls : 'status-na'}`,\n                    children: cleanQualityString(String(overall[1]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 30\n                  }, this);\n                }\n                return null;\n              })() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: canonicalizePredictionEntries(selected.prediction).filter(([k]) => {\n                const key = String(k).toLowerCase();\n                return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n              }).map(([k, v]) => {\n                const value = formatValue(k, v);\n                const s = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"value\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"val-text\",\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `badge ${s.cls}`,\n                      children: s.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 29\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            style: {\n              marginTop: 12\n            },\n            children: \"Select a location on the map to see details here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"P0x4LTr2J8lK0SoD8UzQ3MOq2eA=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapClickHandler\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MapContainer","TileLayer","Marker","Popup","CircleMarker","Polyline","useMapEvents","L","FaWater","FaCopy","FaTrash","FaPaste","puneLocations","puneCenter","getRiverColor","preSampledRiver","riverDescriptions","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","formatValue","key","value","undefined","n","Number","isNaN","test","toFixed","String","cleanQualityString","quality","s","trim","replace","m","match","m2","canonicalizePredictionEntries","pred","map","Map","k","v","Object","entries","norm","toLowerCase","canonical","set","Array","from","values","x","MapClickHandler","onMapClick","_s","click","e","latitude","latlng","lat","longitude","lng","_c","getParameterStatus","param","cls","label","includes","App","_s2","route","setRoute","mapInst","setMapInst","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","interpPoints","setInterpPoints","interpLoading","setInterpLoading","sampleCount","setSampleCount","selectedDate","setSelectedDate","predictions","setPredictions","selected","setSelected","startInput","setStartInput","endInput","setEndInput","startRiver","setStartRiver","endRiver","setEndRiver","startStationName","setStartStationName","endStationName","setEndStationName","forceIndexMedians","setForceIndexMedians","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","handleMapClick","pt","handleMarkerClick","loc","coord","coordinate","river","name","alert","id","prev","prediction","performInterpolation","nearestIndex","best","bestD","Infinity","i","length","dlat","dlng","d2","si","ei","a","Math","min","b","max","sub","slice","d","body","locations","points","month","year","pick_from_input","blend","start_station_name","end_station_name","res","fetch","method","headers","JSON","stringify","jb","json","error","pts","latlngs","p","fitBounds","padding","err","haversineKm","toRad","PI","R","dLat","dLon","lat1","lat2","sinDlat","sin","sinDlon","aa","cos","c","atan2","sqrt","copyCoord","navigator","clipboard","writeText","clearStart","clearEnd","fetchPredictions","preds","forEach","find","l","location","className","children","style","display","gap","flex","size","color","fileName","_jsxFileName","lineNumber","columnNumber","split","onClick","height","alignItems","marginBottom","fontWeight","onChange","target","_","y","center","zoom","whenCreated","url","overallEntry","overallValue","overallStatus","pathOptions","fillColor","fillOpacity","radius","eventHandlers","minWidth","marginTop","filter","marginLeft","position","positions","weight","opacity","justifyContent","idx","val","valStr","status","borderTop","paddingTop","fontSize","t_frac","width","margin","type","readOnly","onBlur","parts","Boolean","lon","onKeyDown","blur","placeholder","disabled","t","readText","title","toLocaleDateString","description","overall","_c2","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\n// ensure leaflet marker icons load correctly when not using bundled images\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction formatValue(key, value) {\r\n  if (value === null || value === undefined) return '—';\r\n  const n = Number(value);\r\n  if (!Number.isNaN(n)) {\r\n  if (/pH/i.test(key)) return n.toFixed(3);\r\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\r\n    return String(n);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nfunction cleanQualityString(quality) {\r\n  if (quality === null || quality === undefined) return quality;\r\n  let s = String(quality).trim();\r\n  if (!s) return s;\r\n  // normalize whitespace\r\n  s = s.replace(/\\s+/g, ' ');\r\n  // remove duplicated trailing punctuation and normalize\r\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\r\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\r\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\r\n  if (m && m[1]) return m[1].trim();\r\n  // fallback: if full-string repeated twice (older regex)\r\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\r\n  return m2 ? m2[1].trim() : s;\r\n}\r\n\r\nfunction canonicalizePredictionEntries(pred) {\r\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\r\n  if (!pred || typeof pred !== 'object') return [];\r\n  const map = new Map();\r\n  for (const [k, v] of Object.entries(pred)) {\r\n    const key = String(k).trim();\r\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\r\n    // map some common aliases\r\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\r\n    map.set(canonical, { key: key, value: v });\r\n  }\r\n  // return in insertion order but using original key casing for display\r\n  return Array.from(map.values()).map(x => [x.key, x.value]);\r\n}\r\n\r\n// small helper component to forward map click events into lat/lon objects\r\nfunction MapClickHandler({ onMapClick }) {\r\n  useMapEvents({ click: (e) => { onMapClick && onMapClick({ latitude: e.latlng.lat, longitude: e.latlng.lng }); } });\r\n  return null;\r\n}\r\n\r\n// basic parameter status mapping used by badges in the UI\r\nfunction getParameterStatus(param, value) {\r\n  if (value === null || value === undefined) return { cls: 'status-na', label: 'N/A' };\r\n  const key = String(param || '').toLowerCase();\r\n  const v = Number(value);\r\n  if (key.includes('water quality')) {\r\n    const s = String(value || '').toLowerCase();\r\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return { label: 'Good', cls: 'status-good' };\r\n    if (s.includes('moderate') || s.includes('borderline')) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: String(value), cls: 'status-poor' };\r\n  }\r\n  if (key.includes('pH')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 6 && v < 6.5) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('do')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 3) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('bod')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 3) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 6) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('fc mpn/100ml')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 500) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('tc mpn/100ml')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 1000) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 2000) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  return { label: String(value), cls: 'status-na' };\r\n}\r\n\r\nexport default function App() {\r\n  const [route, setRoute] = useState('home');\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectMode, setSelectMode] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]);\r\n  const [interpLoading, setInterpLoading] = useState(false);\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [startInput, setStartInput] = useState('');\r\n  const [endInput, setEndInput] = useState('');\r\n  const [startRiver, setStartRiver] = useState(null);\r\n  const [endRiver, setEndRiver] = useState(null);\r\n  const [startStationName, setStartStationName] = useState(null);\r\n  const [endStationName, setEndStationName] = useState(null);\r\n  // Add missing state for forceIndexMedians\r\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\r\n\r\n  const currentDate = new Date();\r\n  const currentYear = currentDate.getFullYear();\r\n  const currentMonth = currentDate.getMonth() + 1;\r\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\r\n  const [selectedYear, setSelectedYear] = useState(currentYear);\r\n\r\n  const handleMapClick = useCallback((pt) => {\r\n    if (selectMode === 'start') setStartPoint(pt);\r\n    else if (selectMode === 'end') setEndPoint(pt);\r\n  }, [selectMode]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    // In interpolate route, if user is picking start or end, set them from known station\r\n    if (route === 'interpolate' && selectMode === 'start') {\r\n      const coord = loc.coordinate || loc;\r\n      setStartPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setStartRiver(loc.river || null);\r\n  setStartStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    if (route === 'interpolate' && selectMode === 'end') {\r\n      // guard: do not allow picking end on a different river than start\r\n      if (startRiver && loc.river && startRiver !== loc.river) {\r\n        alert('Please pick an end station on the same river as the start station.');\r\n        setSelectMode(null);\r\n        return;\r\n      }\r\n      const coord = loc.coordinate || loc;\r\n      setEndPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setEndRiver(loc.river || null);\r\n  setEndStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    // default behaviour: open details\r\n    setSelected(loc);\r\n    // attach available prediction\r\n    const pred = predictions[loc.id] || null;\r\n    setSelected(prev => ({...loc, prediction: pred}));\r\n  };\r\n\r\n  const performInterpolation = async () => {\r\n  if (!startPoint || !endPoint) return alert('Pick start and end');\r\n  setInterpLoading(true);\r\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\r\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\r\n    const nearestIndex = (pt) => {\r\n      let best = 0, bestD = Infinity;\r\n      for (let i=0;i<preSampledRiver.length;i++){\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat*dlat + dlng*dlng;\r\n        if (d2 < bestD){ bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPoint), ei = nearestIndex(endPoint);\r\n    const a = Math.min(si, ei), b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b+1);\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true, blend: 'river' };\r\n    // include explicit station-name override only when user forces index medians\r\n    if (forceIndexMedians && startStationName && endStationName) {\r\n      body.start_station_name = startStationName;\r\n      body.end_station_name = endStationName;\r\n    }\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) return alert('Server: '+jb.error);\r\n      const pts = jb.predictions || [];\r\n      setInterpPoints(pts);\r\n      // fit map to interpolated points if we have a map instance\r\n      try{\r\n        if (mapInst && pts && pts.length > 0){\r\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\r\n          mapInst.fitBounds(latlngs, { padding: [40,40] });\r\n        }\r\n      }catch(e){}\r\n    } catch (err) { alert('Request failed'); }\r\n    finally { setInterpLoading(false); }\r\n  };\r\n\r\n  function haversineKm(a, b) {\r\n    if (!a || !b) return 0;\r\n    const toRad = v => v * Math.PI / 180;\r\n    const R = 6371;\r\n    const dLat = toRad(b.latitude - a.latitude);\r\n    const dLon = toRad(b.longitude - a.longitude);\r\n    const lat1 = toRad(a.latitude);\r\n    const lat2 = toRad(b.latitude);\r\n    const sinDlat = Math.sin(dLat/2), sinDlon = Math.sin(dLon/2);\r\n    const aa = sinDlat*sinDlat + sinDlon*sinDlon * Math.cos(lat1)*Math.cos(lat2);\r\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1-aa));\r\n    return R * c;\r\n  }\r\n\r\n  const copyCoord = (pt) => {\r\n    if (!pt) return;\r\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\r\n    try { navigator.clipboard && navigator.clipboard.writeText(s); } catch(e) {}\r\n  };\r\n\r\n  const clearStart = () => { setStartPoint(null); setInterpPoints([]); };\r\n  const clearEnd = () => { setEndPoint(null); setInterpPoints([]); };\r\n\r\n  // Fetch predictions for all stations when app loads or selectedDate changes\r\n  useEffect(() => {\r\n    async function fetchPredictions() {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${selectedMonth}&year=${selectedYear}`);\r\n        const jb = await res.json();\r\n        if (jb && jb.predictions) {\r\n          // Map predictions to station id\r\n          const preds = {};\r\n          jb.predictions.forEach((pred) => {\r\n            // Find location by name\r\n            const loc = puneLocations.find(l => l.name === pred.location);\r\n            if (loc && loc.id) preds[loc.id] = pred;\r\n          });\r\n          setPredictions(preds);\r\n        }\r\n      } catch (err) {\r\n        // Optionally handle error\r\n      }\r\n    }\r\n    fetchPredictions();\r\n  }, [selectedMonth, selectedYear]);\r\n\r\n  // On initial load, show predictions for current date\r\n  useEffect(() => {\r\n    setSelectedMonth(currentMonth);\r\n    setSelectedYear(currentYear);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <main className=\"main\" style={{display:'flex', gap:20}}>\r\n        <div style={{flex:1}}>\r\n          {route === 'home' ? (\r\n            <div className=\"home-page\">\r\n              <div className=\"home-card\">\r\n                <div className=\"home-hero\">\r\n                  <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                  <div>\r\n                    <h1>RiverWatch — Pune Rivers</h1>\r\n                    <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                  </div>\r\n                </div>\r\n                <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.</p>\r\n                <div className=\"columns\">\r\n                  <div className=\"col rivers\">\r\n                    <h3>Rivers</h3>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula\">Mula</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mutha\">Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula-mutha\">Mula-Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula-Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col center\">\r\n                    <h3>About</h3>\r\n                    <p>This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.</p>\r\n                  </div>\r\n                  <div className=\"col params\">\r\n                    <h3>Parameters</h3>\r\n                    <ul className=\"param-names\">\r\n                      <li><strong>pH</strong> <div className=\"desc\">Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.</div></li>\r\n                      <li><strong>DO</strong> <div className=\"desc\">Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.</div></li>\r\n                      <li><strong>BOD</strong> <div className=\"desc\">Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.</div></li>\r\n                      <li><strong>FC/TC</strong> <div className=\"desc\">Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.</div></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"home-cta\">\r\n                  <button onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                  <button className=\"secondary\" onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-content\" style={{height: 'calc(100vh - 36px)'}}>\r\n              {/* Month/Year controls */}\r\n              <div style={{display:'flex',alignItems:'center',gap:16,marginBottom:16}}>\r\n                <label style={{fontWeight:600}}>Month:</label>\r\n                <select value={selectedMonth} onChange={e => { setSelectedMonth(Number(e.target.value)); }}>\r\n                  {Array.from({length:12},(_,i)=>i+1).map(m => <option key={m} value={m}>{m}</option>)}\r\n                </select>\r\n                <label style={{fontWeight:600}}>Year:</label>\r\n                <select value={selectedYear} onChange={e => { setSelectedYear(Number(e.target.value)); }}>\r\n                  {Array.from({length:8},(_,i)=>currentYear-4+i).map(y => <option key={y} value={y}>{y}</option>)}\r\n                </select>\r\n              </div>\r\n\r\n              <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m=>setMapInst(m)} style={{height:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MapClickHandler onMapClick={handleMapClick} />\r\n                {puneLocations.map(loc => {\r\n                  const pred = predictions[loc.id] || null;\r\n                  const entries = pred ? canonicalizePredictionEntries(pred) : [];\r\n                  const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                  const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\r\n                  const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\r\n\r\n                  return (\r\n                    <CircleMarker key={loc.id} center={[loc.coordinate.latitude, loc.coordinate.longitude]} pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity:0.9 }} radius={8} eventHandlers={{ click: () => handleMarkerClick(loc) }}>\r\n                      <Popup>\r\n                        <div className=\"popup-card\" style={{minWidth:260}}>\r\n                          <div className=\"popup-header\">\r\n                            <div>\r\n                              <div className=\"popup-title\">{cleanQualityString(loc.name)}</div>\r\n                              <div className=\"popup-sub muted\" style={{display:'flex',gap:8,alignItems:'center',marginTop:8}}>\r\n                                <span className={`river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(loc.river)}</span>\r\n                                {overallValue ? <div className={`badge ${overallStatus ? overallStatus.cls : 'status-na'}`}>{overallValue}</div> : null}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {pred ? (\r\n                            <div className=\"popup-grid\">\r\n                              {entries\r\n                                .filter(([k]) => {\r\n                                  const key = String(k).toLowerCase();\r\n                                  return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                                })\r\n                                .map(([k,v]) => {\r\n                                  const value = formatValue(k, v);\r\n                                  const s = getParameterStatus(k, v);\r\n                                  // For pH, show value and status side by side\r\n                                  if (String(k).toLowerCase() === 'pH') {\r\n                                    return (\r\n                                      <div className=\"param-row\" key={k}>\r\n                                        <div className=\"param-name\">{k}</div>\r\n                                        <div className=\"param-value\" style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                          <span className=\"val-text\">{value}</span>\r\n                                          <span className={`badge ${s.cls}`}>{s.label}</span>\r\n                                        </div>\r\n                                      </div>\r\n                                    );\r\n                                  }\r\n                                  // For other parameters, show value and status as before\r\n                                  return (\r\n                                    <div className=\"param-row\" key={k}>\r\n                                      <div className=\"param-name\">{k}</div>\r\n                                      <div className=\"param-value\">\r\n                                        <span className=\"val-text\">{value}</span>\r\n                                        <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          ) : <div style={{marginTop:8}}>Loading...</div>}\r\n                        </div>\r\n                      </Popup>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n                {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n                {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n                {route === 'interpolate' && interpPoints.length > 0 && (\r\n                  <>\r\n                    <Polyline positions={interpPoints.map(p => [p.latitude, p.longitude])} pathOptions={{color:'#0077b6', weight:3, opacity:0.7}} />\r\n                    {interpPoints.map((pt, i) => (\r\n                      <CircleMarker key={i} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{color:'#0077b6', fillColor:'#00b4d8', fillOpacity:0.9}}>\r\n                        <Popup>\r\n                          <div style={{minWidth:220}}>\r\n                            <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n                              <div><strong>Interpolated</strong></div>\r\n                              <div className={`badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`}>{cleanQualityString(pt['Water Quality'])}</div>\r\n                            </div>\r\n                            {/* Show pH, DO, BOD rows prominently */}\r\n                            {['pH', 'DO (mg/L)', 'BOD (mg/L)'].map((param, idx) => {\r\n                              const val = pt[param];\r\n                              const valStr = (val === null || val === undefined) ? '—' : Number(val).toFixed(3);\r\n                              const status = getParameterStatus(param, val);\r\n                              return (\r\n                                <div key={param} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:idx===0?8:4,borderTop:idx===0?'1px solid #edf2f7':'none',paddingTop:idx===0?8:0}}>\r\n                                  <div style={{fontSize:13,color:'#334155',fontWeight:700}}>{param}</div>\r\n                                  <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                    <div style={{fontSize:18,fontWeight:800,color:'#0b3b52'}}>{valStr}</div>\r\n                                    <div className={`badge ${status.cls}`}>{status.label}</div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                            {/* Optionally show FC/TC if present */}\r\n                            {['FC MPN/100ml', 'TC MPN/100ml'].map((param) => {\r\n                              if (pt[param] !== undefined && pt[param] !== null) {\r\n                                const val = pt[param];\r\n                                const valStr = (val === null || val === undefined) ? '—' : Number(val).toFixed(2);\r\n                                const status = getParameterStatus(param, val);\r\n                                return (\r\n                                  <div key={param} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:4}}>\r\n                                    <div style={{fontSize:13,color:'#334155',fontWeight:700}}>{param}</div>\r\n                                    <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                      <div style={{fontSize:15,fontWeight:700,color:'#0b3b52'}}>{valStr}</div>\r\n                                      <div className={`badge ${status.cls}`}>{status.label}</div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            })}\r\n                            {/* show t_frac if returned by server */}\r\n                            {pt && (pt.t_frac !== undefined && pt.t_frac !== null) ? (\r\n                              <div style={{marginTop:8,fontSize:12,color:'#64748b'}}>Blend t: <strong>{Number(pt.t_frac).toFixed(3)}</strong></div>\r\n                            ) : null}\r\n                          </div>\r\n                        </Popup>\r\n                      </CircleMarker>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </MapContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* right sidebar: show only on inner pages (not on Home) */}\r\n        {route !== 'home' && (\r\n          <aside className=\"detail-panel\" style={{width:360}}>\r\n          <div style={{display:'flex', justifyContent:'flex-end', gap:8, padding:8}}>\r\n            <button onClick={()=>setRoute('home')} className=\"small\">Home</button>\r\n            <button onClick={()=>setRoute('interpolate')} className=\"small primary\">Interpolate</button>\r\n          </div>\r\n\r\n          {route === 'interpolate' && (\r\n            <div style={{marginTop:12}}>\r\n              <div className=\"control-card\">\r\n                <div className=\"controls-row\" style={{marginBottom:8}}>\r\n                  <button onClick={()=>setSelectMode(selectMode==='start'?null:'start')} className={selectMode==='start'?'active small primary':''}>Pick Start</button>\r\n                  <button onClick={()=>setSelectMode(selectMode==='end'?null:'end')} className={selectMode==='end'?'active small primary':''}>Pick End</button>\r\n                  <button onClick={()=>{ setSelectMode(null); setInterpPoints([]); setStartPoint(null); setEndPoint(null); setStartInput(''); setEndInput(''); setStartRiver(null); setEndRiver(null); setStartStationName(null); setEndStationName(null); }} className=\"small\">Reset</button>\r\n                </div>\r\n                <div style={{marginBottom:8,color:'#0b3b52',fontSize:13}}><strong>Pick stations only</strong> — interpolation will use river-linear blending</div>\r\n\r\n                <div style={{display:'flex',gap:12,alignItems:'center',marginBottom:10}}>\r\n                  <label style={{margin:0,fontSize:13,color:'#475569'}}>Points k:</label>\r\n                  <input className=\"input-box\" type=\"number\" min={1} max={50} value={sampleCount} onChange={e=>setSampleCount(Number(e.target.value))} />\r\n                  <div style={{marginLeft:'auto'}}>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.min(50, (sampleCount||1)+1) ); }}>+1</button>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.max(1, (sampleCount||1)-1) ); }} style={{marginLeft:6}}>-1</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">Start</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={startInput || (startPoint?`${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}`:'')} onChange={e=>setStartInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(startPoint); }} disabled={!startPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setStartInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearStart(); setStartInput(''); setStartRiver(null); setStartStationName(null); }} disabled={!startPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">End</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={endInput || (endPoint?`${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}`:'')} onChange={e=>setEndInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(endPoint); }} disabled={!endPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setEndInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearEnd(); setEndInput(''); setEndRiver(null); setEndStationName(null); }} disabled={!endPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{marginTop:8,display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n                  <div className=\"muted\">Distance: <strong style={{color:'#233249'}}>{(startPoint && endPoint)?`${haversineKm(startPoint,endPoint).toFixed(2)} km`:'—'}</strong></div>\r\n                  <div style={{display:'flex',alignItems:'center',gap:8,marginLeft:12}}>\r\n                    <div style={{fontSize:12,color:'#475569'}}>{forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'}</div>\r\n                    <button className=\"btn-primary\" onClick={performInterpolation} disabled={!startPoint || !endPoint || interpLoading}>{interpLoading ? 'Interpolating…' : 'Interpolate'}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{marginTop:16}}>\r\n            <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n                {selected ? (\r\n              <div style={{marginTop:12}}>\r\n                <h3>{cleanQualityString(selected.name)}</h3>\r\n                <div className=\"muted\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n                  <div><span className={`river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(selected.river)}</span> • {selected.description}</div>\r\n                  {selected.prediction ? (() => {\r\n                    const entries = canonicalizePredictionEntries(selected.prediction);\r\n                    const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                    if (overall) {\r\n                      const s = getParameterStatus('Water Quality', overall[1]);\r\n                      return <div className={`badge ${s ? s.cls : 'status-na'}`}>{cleanQualityString(String(overall[1]))}</div>;\r\n                    }\r\n                    return null;\r\n                  })() : null}\r\n                </div>\r\n                <h4 style={{marginTop:8}}>Prediction</h4>\r\n                {selected.prediction ? (\r\n                  <div>\r\n                    {canonicalizePredictionEntries(selected.prediction)\r\n                      .filter(([k]) => {\r\n                        const key = String(k).toLowerCase();\r\n                        return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                      })\r\n                      .map(([k,v])=>{\r\n                        const value = formatValue(k, v);\r\n                        const s = getParameterStatus(k,v);\r\n                        return (\r\n                          <div key={k} className=\"inline-param-row\">\r\n                            <div className=\"label\">{k}</div>\r\n                            <div className=\"value\"><div className=\"val-text\">{value}</div><div className={`badge ${s.cls}`}>{s.label}</div></div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : <div>Loading...</div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"placeholder\" style={{marginTop:12}}>Select a location on the map to see details here.</div>\r\n            )}\r\n          </div>\r\n          </aside>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAC5G,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,SAASC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,QAAQ,gBAAgB;AAElE,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3G,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;;AAE1E;AACA,OAAOjB,CAAC,CAACkB,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CrB,CAAC,CAACkB,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gEAAgE;EAC/EC,OAAO,EAAE,6DAA6D;EACtEC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,SAASC,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC/B,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE,OAAO,GAAG;EACrD,MAAMC,CAAC,GAAGC,MAAM,CAACH,KAAK,CAAC;EACvB,IAAI,CAACG,MAAM,CAACC,KAAK,CAACF,CAAC,CAAC,EAAE;IACtB,IAAI,KAAK,CAACG,IAAI,CAACN,GAAG,CAAC,EAAE,OAAOG,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;IACtC,IAAI,mBAAmB,CAACD,IAAI,CAACN,GAAG,CAAC,EAAE,OAAOG,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;IACtD,OAAOC,MAAM,CAACL,CAAC,CAAC;EAClB;EACA,OAAOK,MAAM,CAACP,KAAK,CAAC;AACtB;AAEA,SAASQ,kBAAkBA,CAACC,OAAO,EAAE;EACnC,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKR,SAAS,EAAE,OAAOQ,OAAO;EAC7D,IAAIC,CAAC,GAAGH,MAAM,CAACE,OAAO,CAAC,CAACE,IAAI,CAAC,CAAC;EAC9B,IAAI,CAACD,CAAC,EAAE,OAAOA,CAAC;EAChB;EACAA,CAAC,GAAGA,CAAC,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAC1B;EACAF,CAAC,GAAGA,CAAC,CAACE,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACD,IAAI,CAAC,CAAC;EAC3C;EACA,MAAME,CAAC,GAAGH,CAAC,CAACI,KAAK,CAAC,yBAAyB,CAAC;EAC5C,IAAID,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,EAAE,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;EACjC;EACA,MAAMI,EAAE,GAAGL,CAAC,CAACI,KAAK,CAAC,cAAc,CAAC;EAClC,OAAOC,EAAE,GAAGA,EAAE,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC,GAAGD,CAAC;AAC9B;AAEA,SAASM,6BAA6BA,CAACC,IAAI,EAAE;EAC3C;EACA,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;EAChD,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;EACrB,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE;IACzC,MAAMlB,GAAG,GAAGQ,MAAM,CAACa,CAAC,CAAC,CAACT,IAAI,CAAC,CAAC;IAC5B,MAAMa,IAAI,GAAGzB,GAAG,CAAC0B,WAAW,CAAC,CAAC,CAACb,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACnD;IACA,MAAMc,SAAS,GAAGF,IAAI,KAAK,eAAe,GAAG,eAAe,GAAGA,IAAI;IACnEN,GAAG,CAACS,GAAG,CAACD,SAAS,EAAE;MAAE3B,GAAG,EAAEA,GAAG;MAAEC,KAAK,EAAEqB;IAAE,CAAC,CAAC;EAC5C;EACA;EACA,OAAOO,KAAK,CAACC,IAAI,CAACX,GAAG,CAACY,MAAM,CAAC,CAAC,CAAC,CAACZ,GAAG,CAACa,CAAC,IAAI,CAACA,CAAC,CAAChC,GAAG,EAAEgC,CAAC,CAAC/B,KAAK,CAAC,CAAC;AAC5D;;AAEA;AACA,SAASgC,eAAeA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACvC/D,YAAY,CAAC;IAAEgE,KAAK,EAAGC,CAAC,IAAK;MAAEH,UAAU,IAAIA,UAAU,CAAC;QAAEI,QAAQ,EAAED,CAAC,CAACE,MAAM,CAACC,GAAG;QAAEC,SAAS,EAAEJ,CAAC,CAACE,MAAM,CAACG;MAAI,CAAC,CAAC;IAAE;EAAE,CAAC,CAAC;EAClH,OAAO,IAAI;AACb;;AAEA;AAAAP,EAAA,CALSF,eAAe;EAAA,QACtB7D,YAAY;AAAA;AAAAuE,EAAA,GADLV,eAAe;AAMxB,SAASW,kBAAkBA,CAACC,KAAK,EAAE5C,KAAK,EAAE;EACxC,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE,OAAO;IAAE4C,GAAG,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAM,CAAC;EACpF,MAAM/C,GAAG,GAAGQ,MAAM,CAACqC,KAAK,IAAI,EAAE,CAAC,CAACnB,WAAW,CAAC,CAAC;EAC7C,MAAMJ,CAAC,GAAGlB,MAAM,CAACH,KAAK,CAAC;EACvB,IAAID,GAAG,CAACgD,QAAQ,CAAC,eAAe,CAAC,EAAE;IACjC,MAAMrC,CAAC,GAAGH,MAAM,CAACP,KAAK,IAAI,EAAE,CAAC,CAACyB,WAAW,CAAC,CAAC;IAC3C,IAAIf,CAAC,CAACqC,QAAQ,CAAC,MAAM,CAAC,IAAIrC,CAAC,CAACqC,QAAQ,CAAC,IAAI,CAAC,IAAIrC,CAAC,CAACqC,QAAQ,CAAC,YAAY,CAAC,EAAE,OAAO;MAAED,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACpH,IAAInC,CAAC,CAACqC,QAAQ,CAAC,UAAU,CAAC,IAAIrC,CAAC,CAACqC,QAAQ,CAAC,YAAY,CAAC,EAAE,OAAO;MAAED,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAC5G,OAAO;MAAEC,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;MAAE6C,GAAG,EAAE;IAAc,CAAC;EACrD;EACA,IAAI9C,GAAG,CAACgD,QAAQ,CAAC,IAAI,CAAC,EAAE;IACtB,IAAI3C,KAAK,CAACiB,CAAC,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;MAAE6C,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAIxB,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAAE,OAAO;MAAEyB,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACtE,IAAIxB,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAG,GAAG,EAAE,OAAO;MAAEyB,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAC3E,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAI9C,GAAG,CAACgD,QAAQ,CAAC,IAAI,CAAC,EAAE;IACtB,IAAI3C,KAAK,CAACiB,CAAC,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;MAAE6C,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAIxB,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACxD,IAAIxB,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAChE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAI9C,GAAG,CAACgD,QAAQ,CAAC,KAAK,CAAC,EAAE;IACvB,IAAI3C,KAAK,CAACiB,CAAC,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;MAAE6C,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAIxB,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACxD,IAAIxB,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAChE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAI9C,GAAG,CAACgD,QAAQ,CAAC,cAAc,CAAC,EAAE;IAChC,IAAI3C,KAAK,CAACiB,CAAC,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;MAAE6C,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAIxB,CAAC,IAAI,GAAG,EAAE,OAAO;MAAEyB,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IAC1D,IAAIxB,CAAC,IAAI,IAAI,EAAE,OAAO;MAAEyB,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IACnE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAI9C,GAAG,CAACgD,QAAQ,CAAC,cAAc,CAAC,EAAE;IAChC,IAAI3C,KAAK,CAACiB,CAAC,CAAC,EAAE,OAAO;MAAEyB,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;MAAE6C,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAIxB,CAAC,IAAI,IAAI,EAAE,OAAO;MAAEyB,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IAC3D,IAAIxB,CAAC,IAAI,IAAI,EAAE,OAAO;MAAEyB,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IACnE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,OAAO;IAAEC,KAAK,EAAEvC,MAAM,CAACP,KAAK,CAAC;IAAE6C,GAAG,EAAE;EAAY,CAAC;AACnD;AAEA,eAAe,SAASG,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxF,QAAQ,CAAC,MAAM,CAAC;EAC1C,MAAM,CAACyF,OAAO,EAAEC,UAAU,CAAC,GAAG1F,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2F,UAAU,EAAEC,aAAa,CAAC,GAAG5F,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC6F,UAAU,EAAEC,aAAa,CAAC,GAAG9F,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC+F,QAAQ,EAAEC,WAAW,CAAC,GAAGhG,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiG,YAAY,EAAEC,eAAe,CAAC,GAAGlG,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmG,aAAa,EAAEC,gBAAgB,CAAC,GAAGpG,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqG,WAAW,EAAEC,cAAc,CAAC,GAAGtG,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuG,YAAY,EAAEC,eAAe,CAAC,GAAGxG,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyG,WAAW,EAAEC,cAAc,CAAC,GAAG1G,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC2G,QAAQ,EAAEC,WAAW,CAAC,GAAG5G,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC6G,UAAU,EAAEC,aAAa,CAAC,GAAG9G,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+G,QAAQ,EAAEC,WAAW,CAAC,GAAGhH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiH,UAAU,EAAEC,aAAa,CAAC,GAAGlH,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACmH,QAAQ,EAAEC,WAAW,CAAC,GAAGpH,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACqH,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtH,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACuH,cAAc,EAAEC,iBAAiB,CAAC,GAAGxH,QAAQ,CAAC,IAAI,CAAC;EAC1D;EACA,MAAM,CAACyH,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1H,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAM2H,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,WAAW,CAAC,CAAC;EAC7C,MAAMC,YAAY,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlI,QAAQ,CAAC+H,YAAY,CAAC;EAChE,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGpI,QAAQ,CAAC6H,WAAW,CAAC;EAE7D,MAAMQ,cAAc,GAAGpI,WAAW,CAAEqI,EAAE,IAAK;IACzC,IAAI3C,UAAU,KAAK,OAAO,EAAEG,aAAa,CAACwC,EAAE,CAAC,CAAC,KACzC,IAAI3C,UAAU,KAAK,KAAK,EAAEK,WAAW,CAACsC,EAAE,CAAC;EAChD,CAAC,EAAE,CAAC3C,UAAU,CAAC,CAAC;EAEhB,MAAM4C,iBAAiB,GAAIC,GAAG,IAAK;IACjC;IACA,IAAIjD,KAAK,KAAK,aAAa,IAAII,UAAU,KAAK,OAAO,EAAE;MACrD,MAAM8C,KAAK,GAAGD,GAAG,CAACE,UAAU,IAAIF,GAAG;MACnC1C,aAAa,CAAC;QAAEpB,QAAQ,EAAE+D,KAAK,CAAC/D,QAAQ;QAAEG,SAAS,EAAE4D,KAAK,CAAC5D;MAAU,CAAC,CAAC;MACvEiC,aAAa,CAAC,GAAG2B,KAAK,CAAC/D,QAAQ,CAAC/B,OAAO,CAAC,CAAC,CAAC,KAAK8F,KAAK,CAAC5D,SAAS,CAAClC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MAC5EuE,aAAa,CAACsB,GAAG,CAACG,KAAK,IAAI,IAAI,CAAC;MACpCrB,mBAAmB,CAACkB,GAAG,CAACI,IAAI,IAAI,IAAI,CAAC;MACjChD,aAAa,CAAC,IAAI,CAAC;MACnBM,eAAe,CAAC,EAAE,CAAC;MACnB;IACF;IACA,IAAIX,KAAK,KAAK,aAAa,IAAII,UAAU,KAAK,KAAK,EAAE;MACnD;MACA,IAAIsB,UAAU,IAAIuB,GAAG,CAACG,KAAK,IAAI1B,UAAU,KAAKuB,GAAG,CAACG,KAAK,EAAE;QACvDE,KAAK,CAAC,oEAAoE,CAAC;QAC3EjD,aAAa,CAAC,IAAI,CAAC;QACnB;MACF;MACA,MAAM6C,KAAK,GAAGD,GAAG,CAACE,UAAU,IAAIF,GAAG;MACnCxC,WAAW,CAAC;QAAEtB,QAAQ,EAAE+D,KAAK,CAAC/D,QAAQ;QAAEG,SAAS,EAAE4D,KAAK,CAAC5D;MAAU,CAAC,CAAC;MACrEmC,WAAW,CAAC,GAAGyB,KAAK,CAAC/D,QAAQ,CAAC/B,OAAO,CAAC,CAAC,CAAC,KAAK8F,KAAK,CAAC5D,SAAS,CAAClC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MAC1EyE,WAAW,CAACoB,GAAG,CAACG,KAAK,IAAI,IAAI,CAAC;MAClCnB,iBAAiB,CAACgB,GAAG,CAACI,IAAI,IAAI,IAAI,CAAC;MAC/BhD,aAAa,CAAC,IAAI,CAAC;MACnBM,eAAe,CAAC,EAAE,CAAC;MACnB;IACF;IACA;IACAU,WAAW,CAAC4B,GAAG,CAAC;IAChB;IACA,MAAMlF,IAAI,GAAGmD,WAAW,CAAC+B,GAAG,CAACM,EAAE,CAAC,IAAI,IAAI;IACxClC,WAAW,CAACmC,IAAI,KAAK;MAAC,GAAGP,GAAG;MAAEQ,UAAU,EAAE1F;IAAI,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAM2F,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAACpD,UAAU,IAAI,CAACE,QAAQ,EAAE,OAAO8C,KAAK,CAAC,oBAAoB,CAAC;IAChEzC,gBAAgB,CAAC,IAAI,CAAC;IACpB;IACA;IACA,MAAM8C,YAAY,GAAIZ,EAAE,IAAK;MAC3B,IAAIa,IAAI,GAAG,CAAC;QAAEC,KAAK,GAAGC,QAAQ;MAC9B,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACrI,eAAe,CAACsI,MAAM,EAACD,CAAC,EAAE,EAAC;QACxC,MAAME,IAAI,GAAGvI,eAAe,CAACqI,CAAC,CAAC,CAAC5E,QAAQ,GAAG4D,EAAE,CAAC5D,QAAQ;QACtD,MAAM+E,IAAI,GAAGxI,eAAe,CAACqI,CAAC,CAAC,CAACzE,SAAS,GAAGyD,EAAE,CAACzD,SAAS;QACxD,MAAM6E,EAAE,GAAGF,IAAI,GAACA,IAAI,GAAGC,IAAI,GAACA,IAAI;QAChC,IAAIC,EAAE,GAAGN,KAAK,EAAC;UAAEA,KAAK,GAAGM,EAAE;UAAEP,IAAI,GAAGG,CAAC;QAAE;MACzC;MACA,OAAOH,IAAI;IACb,CAAC;IACD,MAAMQ,EAAE,GAAGT,YAAY,CAACrD,UAAU,CAAC;MAAE+D,EAAE,GAAGV,YAAY,CAACnD,QAAQ,CAAC;IAChE,MAAM8D,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACJ,EAAE,EAAEC,EAAE,CAAC;MAAEI,CAAC,GAAGF,IAAI,CAACG,GAAG,CAACN,EAAE,EAAEC,EAAE,CAAC;IAChD,MAAMM,GAAG,GAAGjJ,eAAe,CAACkJ,KAAK,CAACN,CAAC,EAAEG,CAAC,GAAC,CAAC,CAAC;IACzC,MAAMI,CAAC,GAAG,IAAIxC,IAAI,CAACrB,YAAY,CAAC;IAChC,MAAM8D,IAAI,GAAG;MAAEC,SAAS,EAAEJ,GAAG;MAAEK,MAAM,EAAElE,WAAW;MAAEmE,KAAK,EAAEJ,CAAC,CAACpC,QAAQ,CAAC,CAAC,GAAC,CAAC;MAAEyC,IAAI,EAAEL,CAAC,CAACtC,WAAW,CAAC,CAAC;MAAE4C,eAAe,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACzI;IACA,IAAIlD,iBAAiB,IAAIJ,gBAAgB,IAAIE,cAAc,EAAE;MAC3D8C,IAAI,CAACO,kBAAkB,GAAGvD,gBAAgB;MAC1CgD,IAAI,CAACQ,gBAAgB,GAAGtD,cAAc;IACxC;IACA,IAAI;MACF,MAAMuD,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGxJ,QAAQ,sBAAsB,EAAE;QAAEyJ,MAAM,EAAC,MAAM;QAAEC,OAAO,EAAC;UAAC,cAAc,EAAC;QAAkB,CAAC;QAAEZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAACd,IAAI;MAAE,CAAC,CAAC;MACtJ,MAAMe,EAAE,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MAC3B,IAAID,EAAE,CAACE,KAAK,EAAE,OAAOzC,KAAK,CAAC,UAAU,GAACuC,EAAE,CAACE,KAAK,CAAC;MAC/C,MAAMC,GAAG,GAAGH,EAAE,CAAC3E,WAAW,IAAI,EAAE;MAChCP,eAAe,CAACqF,GAAG,CAAC;MACpB;MACA,IAAG;QACD,IAAI9F,OAAO,IAAI8F,GAAG,IAAIA,GAAG,CAAChC,MAAM,GAAG,CAAC,EAAC;UACnC,MAAMiC,OAAO,GAAGD,GAAG,CAAChI,GAAG,CAACkI,CAAC,IAAI,CAACA,CAAC,CAAC/G,QAAQ,EAAE+G,CAAC,CAAC5G,SAAS,CAAC,CAAC;UACvDY,OAAO,CAACiG,SAAS,CAACF,OAAO,EAAE;YAAEG,OAAO,EAAE,CAAC,EAAE,EAAC,EAAE;UAAE,CAAC,CAAC;QAClD;MACF,CAAC,QAAMlH,CAAC,EAAC,CAAC;IACZ,CAAC,CAAC,OAAOmH,GAAG,EAAE;MAAE/C,KAAK,CAAC,gBAAgB,CAAC;IAAE,CAAC,SAClC;MAAEzC,gBAAgB,CAAC,KAAK,CAAC;IAAE;EACrC,CAAC;EAED,SAASyF,WAAWA,CAAChC,CAAC,EAAEG,CAAC,EAAE;IACzB,IAAI,CAACH,CAAC,IAAI,CAACG,CAAC,EAAE,OAAO,CAAC;IACtB,MAAM8B,KAAK,GAAGpI,CAAC,IAAIA,CAAC,GAAGoG,IAAI,CAACiC,EAAE,GAAG,GAAG;IACpC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,IAAI,GAAGH,KAAK,CAAC9B,CAAC,CAACtF,QAAQ,GAAGmF,CAAC,CAACnF,QAAQ,CAAC;IAC3C,MAAMwH,IAAI,GAAGJ,KAAK,CAAC9B,CAAC,CAACnF,SAAS,GAAGgF,CAAC,CAAChF,SAAS,CAAC;IAC7C,MAAMsH,IAAI,GAAGL,KAAK,CAACjC,CAAC,CAACnF,QAAQ,CAAC;IAC9B,MAAM0H,IAAI,GAAGN,KAAK,CAAC9B,CAAC,CAACtF,QAAQ,CAAC;IAC9B,MAAM2H,OAAO,GAAGvC,IAAI,CAACwC,GAAG,CAACL,IAAI,GAAC,CAAC,CAAC;MAAEM,OAAO,GAAGzC,IAAI,CAACwC,GAAG,CAACJ,IAAI,GAAC,CAAC,CAAC;IAC5D,MAAMM,EAAE,GAAGH,OAAO,GAACA,OAAO,GAAGE,OAAO,GAACA,OAAO,GAAGzC,IAAI,CAAC2C,GAAG,CAACN,IAAI,CAAC,GAACrC,IAAI,CAAC2C,GAAG,CAACL,IAAI,CAAC;IAC5E,MAAMM,CAAC,GAAG,CAAC,GAAG5C,IAAI,CAAC6C,KAAK,CAAC7C,IAAI,CAAC8C,IAAI,CAACJ,EAAE,CAAC,EAAE1C,IAAI,CAAC8C,IAAI,CAAC,CAAC,GAACJ,EAAE,CAAC,CAAC;IACxD,OAAOR,CAAC,GAAGU,CAAC;EACd;EAEA,MAAMG,SAAS,GAAIvE,EAAE,IAAK;IACxB,IAAI,CAACA,EAAE,EAAE;IACT,MAAMvF,CAAC,GAAG,GAAGuF,EAAE,CAAC5D,QAAQ,CAAC/B,OAAO,CAAC,CAAC,CAAC,KAAK2F,EAAE,CAACzD,SAAS,CAAClC,OAAO,CAAC,CAAC,CAAC,EAAE;IACjE,IAAI;MAAEmK,SAAS,CAACC,SAAS,IAAID,SAAS,CAACC,SAAS,CAACC,SAAS,CAACjK,CAAC,CAAC;IAAE,CAAC,CAAC,OAAM0B,CAAC,EAAE,CAAC;EAC7E,CAAC;EAED,MAAMwI,UAAU,GAAGA,CAAA,KAAM;IAAEnH,aAAa,CAAC,IAAI,CAAC;IAAEI,eAAe,CAAC,EAAE,CAAC;EAAE,CAAC;EACtE,MAAMgH,QAAQ,GAAGA,CAAA,KAAM;IAAElH,WAAW,CAAC,IAAI,CAAC;IAAEE,eAAe,CAAC,EAAE,CAAC;EAAE,CAAC;;EAElE;EACAnG,SAAS,CAAC,MAAM;IACd,eAAeoN,gBAAgBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAMrC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGxJ,QAAQ,sBAAsB0G,aAAa,SAASE,YAAY,EAAE,CAAC;QAC9F,MAAMiD,EAAE,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;QAC3B,IAAID,EAAE,IAAIA,EAAE,CAAC3E,WAAW,EAAE;UACxB;UACA,MAAM2G,KAAK,GAAG,CAAC,CAAC;UAChBhC,EAAE,CAAC3E,WAAW,CAAC4G,OAAO,CAAE/J,IAAI,IAAK;YAC/B;YACA,MAAMkF,GAAG,GAAG1H,aAAa,CAACwM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3E,IAAI,KAAKtF,IAAI,CAACkK,QAAQ,CAAC;YAC7D,IAAIhF,GAAG,IAAIA,GAAG,CAACM,EAAE,EAAEsE,KAAK,CAAC5E,GAAG,CAACM,EAAE,CAAC,GAAGxF,IAAI;UACzC,CAAC,CAAC;UACFoD,cAAc,CAAC0G,KAAK,CAAC;QACvB;MACF,CAAC,CAAC,OAAOxB,GAAG,EAAE;QACZ;MAAA;IAEJ;IACAuB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAAClF,aAAa,EAAEE,YAAY,CAAC,CAAC;;EAEjC;EACApI,SAAS,CAAC,MAAM;IACdmI,gBAAgB,CAACH,YAAY,CAAC;IAC9BK,eAAe,CAACP,WAAW,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzG,OAAA;IAAKqM,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBtM,OAAA;MAAMqM,SAAS,EAAC,MAAM;MAACE,KAAK,EAAE;QAACC,OAAO,EAAC,MAAM;QAAEC,GAAG,EAAC;MAAE,CAAE;MAAAH,QAAA,gBACrDtM,OAAA;QAAKuM,KAAK,EAAE;UAACG,IAAI,EAAC;QAAC,CAAE;QAAAJ,QAAA,EAClBnI,KAAK,KAAK,MAAM,gBACfnE,OAAA;UAAKqM,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBtM,OAAA;YAAKqM,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBtM,OAAA;cAAKqM,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBtM,OAAA;gBAAKqM,SAAS,EAAC,MAAM;gBAAAC,QAAA,eAACtM,OAAA,CAACV,OAAO;kBAACqN,IAAI,EAAE,EAAG;kBAACC,KAAK,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9DhN,OAAA;gBAAAsM,QAAA,gBACEtM,OAAA;kBAAAsM,QAAA,EAAI;gBAAwB;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjChN,OAAA;kBAAGqM,SAAS,EAAC,OAAO;kBAAAC,QAAA,EAAC;gBAAyC;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhN,OAAA;cAAAsM,QAAA,EAAG;YAAgK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvKhN,OAAA;cAAKqM,SAAS,EAAC,SAAS;cAAAC,QAAA,gBACtBtM,OAAA;gBAAKqM,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBtM,OAAA;kBAAAsM,QAAA,EAAI;gBAAM;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACfhN,OAAA;kBAAKqM,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACzBtM,OAAA;oBAAMqM,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAC;kBAAI;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACnDhN,OAAA;oBAAKqM,SAAS,EAAC,YAAY;oBAAAC,QAAA,GAAE,CAACxM,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,EAAEmN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClF,CAAC,eACNhN,OAAA;kBAAKqM,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACzBtM,OAAA;oBAAMqM,SAAS,EAAC,wBAAwB;oBAAAC,QAAA,EAAC;kBAAK;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACrDhN,OAAA;oBAAKqM,SAAS,EAAC,YAAY;oBAAAC,QAAA,GAAE,CAACxM,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAEmN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnF,CAAC,eACNhN,OAAA;kBAAKqM,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACzBtM,OAAA;oBAAMqM,SAAS,EAAC,6BAA6B;oBAAAC,QAAA,EAAC;kBAAU;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC/DhN,OAAA;oBAAKqM,SAAS,EAAC,YAAY;oBAAAC,QAAA,GAAE,CAACxM,iBAAiB,CAAC,YAAY,CAAC,IAAI,EAAE,EAAEmN,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNhN,OAAA;gBAAKqM,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBtM,OAAA;kBAAAsM,QAAA,EAAI;gBAAK;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdhN,OAAA;kBAAAsM,QAAA,EAAG;gBAA0d;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9d,CAAC,eACNhN,OAAA;gBAAKqM,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBtM,OAAA;kBAAAsM,QAAA,EAAI;gBAAU;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnBhN,OAAA;kBAAIqM,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBACzBtM,OAAA;oBAAAsM,QAAA,gBAAItM,OAAA;sBAAAsM,QAAA,EAAQ;oBAAE;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhN,OAAA;sBAAKqM,SAAS,EAAC,MAAM;sBAAAC,QAAA,EAAC;oBAAwL;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjPhN,OAAA;oBAAAsM,QAAA,gBAAItM,OAAA;sBAAAsM,QAAA,EAAQ;oBAAE;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhN,OAAA;sBAAKqM,SAAS,EAAC,MAAM;sBAAAC,QAAA,EAAC;oBAAwL;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjPhN,OAAA;oBAAAsM,QAAA,gBAAItM,OAAA;sBAAAsM,QAAA,EAAQ;oBAAG;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhN,OAAA;sBAAKqM,SAAS,EAAC,MAAM;sBAAAC,QAAA,EAAC;oBAAwL;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClPhN,OAAA;oBAAAsM,QAAA,gBAAItM,OAAA;sBAAAsM,QAAA,EAAQ;oBAAK;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhN,OAAA;sBAAKqM,SAAS,EAAC,MAAM;sBAAAC,QAAA,EAAC;oBAA4M;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhN,OAAA;cAAKqM,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACvBtM,OAAA;gBAAQkN,OAAO,EAAEA,CAAA,KAAM9I,QAAQ,CAAC,SAAS,CAAE;gBAAAkI,QAAA,EAAC;cAAa;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClEhN,OAAA;gBAAQqM,SAAS,EAAC,WAAW;gBAACa,OAAO,EAAEA,CAAA,KAAM9I,QAAQ,CAAC,aAAa,CAAE;gBAAAkI,QAAA,EAAC;cAAiB;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENhN,OAAA;UAAKqM,SAAS,EAAC,cAAc;UAACE,KAAK,EAAE;YAACY,MAAM,EAAE;UAAoB,CAAE;UAAAb,QAAA,gBAElEtM,OAAA;YAAKuM,KAAK,EAAE;cAACC,OAAO,EAAC,MAAM;cAACY,UAAU,EAAC,QAAQ;cAACX,GAAG,EAAC,EAAE;cAACY,YAAY,EAAC;YAAE,CAAE;YAAAf,QAAA,gBACtEtM,OAAA;cAAOuM,KAAK,EAAE;gBAACe,UAAU,EAAC;cAAG,CAAE;cAAAhB,QAAA,EAAC;YAAM;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9ChN,OAAA;cAAQiB,KAAK,EAAE4F,aAAc;cAAC0G,QAAQ,EAAElK,CAAC,IAAI;gBAAEyD,gBAAgB,CAAC1F,MAAM,CAACiC,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAAC,CAAC;cAAE,CAAE;cAAAqL,QAAA,EACxFzJ,KAAK,CAACC,IAAI,CAAC;gBAACqF,MAAM,EAAC;cAAE,CAAC,EAAC,CAACsF,CAAC,EAACvF,CAAC,KAAGA,CAAC,GAAC,CAAC,CAAC,CAAC/F,GAAG,CAACL,CAAC,iBAAI9B,OAAA;gBAAgBiB,KAAK,EAAEa,CAAE;gBAAAwK,QAAA,EAAExK;cAAC,GAAfA,CAAC;gBAAA+K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuB,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9E,CAAC,eACThN,OAAA;cAAOuM,KAAK,EAAE;gBAACe,UAAU,EAAC;cAAG,CAAE;cAAAhB,QAAA,EAAC;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7ChN,OAAA;cAAQiB,KAAK,EAAE8F,YAAa;cAACwG,QAAQ,EAAElK,CAAC,IAAI;gBAAE2D,eAAe,CAAC5F,MAAM,CAACiC,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAAC,CAAC;cAAE,CAAE;cAAAqL,QAAA,EACtFzJ,KAAK,CAACC,IAAI,CAAC;gBAACqF,MAAM,EAAC;cAAC,CAAC,EAAC,CAACsF,CAAC,EAACvF,CAAC,KAAGzB,WAAW,GAAC,CAAC,GAACyB,CAAC,CAAC,CAAC/F,GAAG,CAACuL,CAAC,iBAAI1N,OAAA;gBAAgBiB,KAAK,EAAEyM,CAAE;gBAAApB,QAAA,EAAEoB;cAAC,GAAfA,CAAC;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuB,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENhN,OAAA,CAAClB,YAAY;YAAC6O,MAAM,EAAE,CAAChO,UAAU,CAAC2D,QAAQ,EAAE3D,UAAU,CAAC8D,SAAS,CAAE;YAACmK,IAAI,EAAEjO,UAAU,CAACiO,IAAK;YAACvB,SAAS,EAAC,KAAK;YAACwB,WAAW,EAAE/L,CAAC,IAAEwC,UAAU,CAACxC,CAAC,CAAE;YAACyK,KAAK,EAAE;cAACY,MAAM,EAAC;YAAM,CAAE;YAAAb,QAAA,gBAC9JtM,OAAA,CAACjB,SAAS;cAAC+O,GAAG,EAAC;YAAoD;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtEhN,OAAA,CAACiD,eAAe;cAACC,UAAU,EAAE+D;YAAe;cAAA4F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC9CtN,aAAa,CAACyC,GAAG,CAACiF,GAAG,IAAI;cACxB,MAAMlF,IAAI,GAAGmD,WAAW,CAAC+B,GAAG,CAACM,EAAE,CAAC,IAAI,IAAI;cACxC,MAAMlF,OAAO,GAAGN,IAAI,GAAGD,6BAA6B,CAACC,IAAI,CAAC,GAAG,EAAE;cAC/D,MAAM6L,YAAY,GAAGvL,OAAO,CAAC0J,IAAI,CAAC,CAAC,CAAC7J,CAAC,CAAC,KAAKb,MAAM,CAACa,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,KAAK,eAAe,CAAC;cACvF,MAAMsL,YAAY,GAAGD,YAAY,GAAGtM,kBAAkB,CAACD,MAAM,CAACuM,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cACtF,MAAME,aAAa,GAAGF,YAAY,GAAGnK,kBAAkB,CAAC,eAAe,EAAEmK,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cAEhG,oBACE/N,OAAA,CAACd,YAAY;gBAAcyO,MAAM,EAAE,CAACvG,GAAG,CAACE,UAAU,CAAChE,QAAQ,EAAE8D,GAAG,CAACE,UAAU,CAAC7D,SAAS,CAAE;gBAACyK,WAAW,EAAE;kBAAEtB,KAAK,EAAEhN,aAAa,CAACwH,GAAG,CAACG,KAAK,CAAC;kBAAE4G,SAAS,EAAEvO,aAAa,CAACwH,GAAG,CAACG,KAAK,CAAC;kBAAE6G,WAAW,EAAC;gBAAI,CAAE;gBAACC,MAAM,EAAE,CAAE;gBAACC,aAAa,EAAE;kBAAElL,KAAK,EAAEA,CAAA,KAAM+D,iBAAiB,CAACC,GAAG;gBAAE,CAAE;gBAAAkF,QAAA,eAChQtM,OAAA,CAACf,KAAK;kBAAAqN,QAAA,eACJtM,OAAA;oBAAKqM,SAAS,EAAC,YAAY;oBAACE,KAAK,EAAE;sBAACgC,QAAQ,EAAC;oBAAG,CAAE;oBAAAjC,QAAA,gBAChDtM,OAAA;sBAAKqM,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3BtM,OAAA;wBAAAsM,QAAA,gBACEtM,OAAA;0BAAKqM,SAAS,EAAC,aAAa;0BAAAC,QAAA,EAAE7K,kBAAkB,CAAC2F,GAAG,CAACI,IAAI;wBAAC;0BAAAqF,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eACjEhN,OAAA;0BAAKqM,SAAS,EAAC,iBAAiB;0BAACE,KAAK,EAAE;4BAACC,OAAO,EAAC,MAAM;4BAACC,GAAG,EAAC,CAAC;4BAACW,UAAU,EAAC,QAAQ;4BAACoB,SAAS,EAAC;0BAAC,CAAE;0BAAAlC,QAAA,gBAC7FtM,OAAA;4BAAMqM,SAAS,EAAE,aAAa5K,kBAAkB,CAAC2F,GAAG,CAACG,KAAK,CAAC,CAAC1F,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACa,WAAW,CAAC,CAAC,EAAG;4BAAA4J,QAAA,EAAE7K,kBAAkB,CAAC2F,GAAG,CAACG,KAAK;0BAAC;4BAAAsF,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAO,CAAC,EACvIgB,YAAY,gBAAGhO,OAAA;4BAAKqM,SAAS,EAAE,SAAS4B,aAAa,GAAGA,aAAa,CAACnK,GAAG,GAAG,WAAW,EAAG;4BAAAwI,QAAA,EAAE0B;0BAAY;4BAAAnB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,GAAG,IAAI;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpH,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EAEL9K,IAAI,gBACHlC,OAAA;sBAAKqM,SAAS,EAAC,YAAY;sBAAAC,QAAA,EACxB9J,OAAO,CACLiM,MAAM,CAAC,CAAC,CAACpM,CAAC,CAAC,KAAK;wBACf,MAAMrB,GAAG,GAAGQ,MAAM,CAACa,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;wBACnC,OAAO,CAAC,CAAC,UAAU,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,CAAC,CAACsB,QAAQ,CAAChD,GAAG,CAAC;sBAChG,CAAC,CAAC,CACDmB,GAAG,CAAC,CAAC,CAACE,CAAC,EAACC,CAAC,CAAC,KAAK;wBACd,MAAMrB,KAAK,GAAGF,WAAW,CAACsB,CAAC,EAAEC,CAAC,CAAC;wBAC/B,MAAMX,CAAC,GAAGiC,kBAAkB,CAACvB,CAAC,EAAEC,CAAC,CAAC;wBAClC;wBACA,IAAId,MAAM,CAACa,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;0BACpC,oBACE1C,OAAA;4BAAKqM,SAAS,EAAC,WAAW;4BAAAC,QAAA,gBACxBtM,OAAA;8BAAKqM,SAAS,EAAC,YAAY;8BAAAC,QAAA,EAAEjK;4BAAC;8BAAAwK,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC,eACrChN,OAAA;8BAAKqM,SAAS,EAAC,aAAa;8BAACE,KAAK,EAAE;gCAACC,OAAO,EAAC,MAAM;gCAACY,UAAU,EAAC,QAAQ;gCAACX,GAAG,EAAC;8BAAC,CAAE;8BAAAH,QAAA,gBAC7EtM,OAAA;gCAAMqM,SAAS,EAAC,UAAU;gCAAAC,QAAA,EAAErL;8BAAK;gCAAA4L,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAO,CAAC,eACzChN,OAAA;gCAAMqM,SAAS,EAAE,SAAS1K,CAAC,CAACmC,GAAG,EAAG;gCAAAwI,QAAA,EAAE3K,CAAC,CAACoC;8BAAK;gCAAA8I,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAO,CAAC;4BAAA;8BAAAH,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAChD,CAAC;0BAAA,GALwB3K,CAAC;4BAAAwK,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAM5B,CAAC;wBAEV;wBACA;wBACA,oBACEhN,OAAA;0BAAKqM,SAAS,EAAC,WAAW;0BAAAC,QAAA,gBACxBtM,OAAA;4BAAKqM,SAAS,EAAC,YAAY;4BAAAC,QAAA,EAAEjK;0BAAC;4BAAAwK,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACrChN,OAAA;4BAAKqM,SAAS,EAAC,aAAa;4BAAAC,QAAA,gBAC1BtM,OAAA;8BAAMqM,SAAS,EAAC,UAAU;8BAAAC,QAAA,EAAErL;4BAAK;8BAAA4L,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAO,CAAC,eACzChN,OAAA;8BAAMqM,SAAS,EAAE,SAAS1K,CAAC,CAACmC,GAAG,EAAG;8BAACyI,KAAK,EAAE;gCAACmC,UAAU,EAAC;8BAAC,CAAE;8BAAApC,QAAA,EAAE3K,CAAC,CAACoC;4BAAK;8BAAA8I,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAO,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACvE,CAAC;wBAAA,GALwB3K,CAAC;0BAAAwK,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAM5B,CAAC;sBAEV,CAAC;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,gBACJhN,OAAA;sBAAKuM,KAAK,EAAE;wBAACiC,SAAS,EAAC;sBAAC,CAAE;sBAAAlC,QAAA,EAAC;oBAAU;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC,GAjDS5F,GAAG,CAACM,EAAE;gBAAAmF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkDX,CAAC;YAEnB,CAAC,CAAC,EACD7I,KAAK,KAAK,aAAa,IAAIM,UAAU,gBAAGzE,OAAA,CAAChB,MAAM;cAAC2P,QAAQ,EAAE,CAAClK,UAAU,CAACnB,QAAQ,EAAEmB,UAAU,CAAChB,SAAS,CAAE;cAAA6I,QAAA,eAACtM,OAAA,CAACf,KAAK;gBAAAqN,QAAA,EAAC;cAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAAG,IAAI,EAC3I7I,KAAK,KAAK,aAAa,IAAIQ,QAAQ,gBAAG3E,OAAA,CAAChB,MAAM;cAAC2P,QAAQ,EAAE,CAAChK,QAAQ,CAACrB,QAAQ,EAAEqB,QAAQ,CAAClB,SAAS,CAAE;cAAA6I,QAAA,eAACtM,OAAA,CAACf,KAAK;gBAAAqN,QAAA,EAAC;cAAG;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAAG,IAAI,EACnI7I,KAAK,KAAK,aAAa,IAAIU,YAAY,CAACsD,MAAM,GAAG,CAAC,iBACjDnI,OAAA,CAAAE,SAAA;cAAAoM,QAAA,gBACEtM,OAAA,CAACb,QAAQ;gBAACyP,SAAS,EAAE/J,YAAY,CAAC1C,GAAG,CAACkI,CAAC,IAAI,CAACA,CAAC,CAAC/G,QAAQ,EAAE+G,CAAC,CAAC5G,SAAS,CAAC,CAAE;gBAACyK,WAAW,EAAE;kBAACtB,KAAK,EAAC,SAAS;kBAAEiC,MAAM,EAAC,CAAC;kBAAEC,OAAO,EAAC;gBAAG;cAAE;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAC/HnI,YAAY,CAAC1C,GAAG,CAAC,CAAC+E,EAAE,EAAEgB,CAAC,kBACtBlI,OAAA,CAACd,YAAY;gBAASyO,MAAM,EAAE,CAACzG,EAAE,CAAC5D,QAAQ,EAAE4D,EAAE,CAACzD,SAAS,CAAE;gBAAC4K,MAAM,EAAE,CAAE;gBAACH,WAAW,EAAE;kBAACtB,KAAK,EAAC,SAAS;kBAAEuB,SAAS,EAAC,SAAS;kBAAEC,WAAW,EAAC;gBAAG,CAAE;gBAAA9B,QAAA,eACzItM,OAAA,CAACf,KAAK;kBAAAqN,QAAA,eACJtM,OAAA;oBAAKuM,KAAK,EAAE;sBAACgC,QAAQ,EAAC;oBAAG,CAAE;oBAAAjC,QAAA,gBACzBtM,OAAA;sBAAKuM,KAAK,EAAE;wBAACC,OAAO,EAAC,MAAM;wBAACuC,cAAc,EAAC,eAAe;wBAAC3B,UAAU,EAAC;sBAAQ,CAAE;sBAAAd,QAAA,gBAC9EtM,OAAA;wBAAAsM,QAAA,eAAKtM,OAAA;0BAAAsM,QAAA,EAAQ;wBAAY;0BAAAO,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eACxChN,OAAA;wBAAKqM,SAAS,EAAE,SAASzI,kBAAkB,CAAC,eAAe,EAAEsD,EAAE,CAAC,eAAe,CAAC,CAAC,CAACpD,GAAG,EAAG;wBAAAwI,QAAA,EAAE7K,kBAAkB,CAACyF,EAAE,CAAC,eAAe,CAAC;sBAAC;wBAAA2F,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACrI,CAAC,EAEL,CAAC,IAAI,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC7K,GAAG,CAAC,CAAC0B,KAAK,EAAEmL,GAAG,KAAK;sBACrD,MAAMC,GAAG,GAAG/H,EAAE,CAACrD,KAAK,CAAC;sBACrB,MAAMqL,MAAM,GAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK/N,SAAS,GAAI,GAAG,GAAGE,MAAM,CAAC6N,GAAG,CAAC,CAAC1N,OAAO,CAAC,CAAC,CAAC;sBACjF,MAAM4N,MAAM,GAAGvL,kBAAkB,CAACC,KAAK,EAAEoL,GAAG,CAAC;sBAC7C,oBACEjP,OAAA;wBAAiBuM,KAAK,EAAE;0BAACC,OAAO,EAAC,MAAM;0BAACuC,cAAc,EAAC,eAAe;0BAAC3B,UAAU,EAAC,QAAQ;0BAACoB,SAAS,EAACQ,GAAG,KAAG,CAAC,GAAC,CAAC,GAAC,CAAC;0BAACI,SAAS,EAACJ,GAAG,KAAG,CAAC,GAAC,mBAAmB,GAAC,MAAM;0BAACK,UAAU,EAACL,GAAG,KAAG,CAAC,GAAC,CAAC,GAAC;wBAAC,CAAE;wBAAA1C,QAAA,gBACpLtM,OAAA;0BAAKuM,KAAK,EAAE;4BAAC+C,QAAQ,EAAC,EAAE;4BAAC1C,KAAK,EAAC,SAAS;4BAACU,UAAU,EAAC;0BAAG,CAAE;0BAAAhB,QAAA,EAAEzI;wBAAK;0BAAAgJ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eACvEhN,OAAA;0BAAKuM,KAAK,EAAE;4BAACC,OAAO,EAAC,MAAM;4BAACY,UAAU,EAAC,QAAQ;4BAACX,GAAG,EAAC;0BAAC,CAAE;0BAAAH,QAAA,gBACrDtM,OAAA;4BAAKuM,KAAK,EAAE;8BAAC+C,QAAQ,EAAC,EAAE;8BAAChC,UAAU,EAAC,GAAG;8BAACV,KAAK,EAAC;4BAAS,CAAE;4BAAAN,QAAA,EAAE4C;0BAAM;4BAAArC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACxEhN,OAAA;4BAAKqM,SAAS,EAAE,SAAS8C,MAAM,CAACrL,GAAG,EAAG;4BAAAwI,QAAA,EAAE6C,MAAM,CAACpL;0BAAK;4BAAA8I,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACxD,CAAC;sBAAA,GALEnJ,KAAK;wBAAAgJ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAMV,CAAC;oBAEV,CAAC,CAAC,EAED,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC7K,GAAG,CAAE0B,KAAK,IAAK;sBAC/C,IAAIqD,EAAE,CAACrD,KAAK,CAAC,KAAK3C,SAAS,IAAIgG,EAAE,CAACrD,KAAK,CAAC,KAAK,IAAI,EAAE;wBACjD,MAAMoL,GAAG,GAAG/H,EAAE,CAACrD,KAAK,CAAC;wBACrB,MAAMqL,MAAM,GAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK/N,SAAS,GAAI,GAAG,GAAGE,MAAM,CAAC6N,GAAG,CAAC,CAAC1N,OAAO,CAAC,CAAC,CAAC;wBACjF,MAAM4N,MAAM,GAAGvL,kBAAkB,CAACC,KAAK,EAAEoL,GAAG,CAAC;wBAC7C,oBACEjP,OAAA;0BAAiBuM,KAAK,EAAE;4BAACC,OAAO,EAAC,MAAM;4BAACuC,cAAc,EAAC,eAAe;4BAAC3B,UAAU,EAAC,QAAQ;4BAACoB,SAAS,EAAC;0BAAC,CAAE;0BAAAlC,QAAA,gBACtGtM,OAAA;4BAAKuM,KAAK,EAAE;8BAAC+C,QAAQ,EAAC,EAAE;8BAAC1C,KAAK,EAAC,SAAS;8BAACU,UAAU,EAAC;4BAAG,CAAE;4BAAAhB,QAAA,EAAEzI;0BAAK;4BAAAgJ,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACvEhN,OAAA;4BAAKuM,KAAK,EAAE;8BAACC,OAAO,EAAC,MAAM;8BAACY,UAAU,EAAC,QAAQ;8BAACX,GAAG,EAAC;4BAAC,CAAE;4BAAAH,QAAA,gBACrDtM,OAAA;8BAAKuM,KAAK,EAAE;gCAAC+C,QAAQ,EAAC,EAAE;gCAAChC,UAAU,EAAC,GAAG;gCAACV,KAAK,EAAC;8BAAS,CAAE;8BAAAN,QAAA,EAAE4C;4BAAM;8BAAArC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC,eACxEhN,OAAA;8BAAKqM,SAAS,EAAE,SAAS8C,MAAM,CAACrL,GAAG,EAAG;8BAAAwI,QAAA,EAAE6C,MAAM,CAACpL;4BAAK;8BAAA8I,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACxD,CAAC;wBAAA,GALEnJ,KAAK;0BAAAgJ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAMV,CAAC;sBAEV;sBACA,OAAO,IAAI;oBACb,CAAC,CAAC,EAED9F,EAAE,IAAKA,EAAE,CAACqI,MAAM,KAAKrO,SAAS,IAAIgG,EAAE,CAACqI,MAAM,KAAK,IAAK,gBACpDvP,OAAA;sBAAKuM,KAAK,EAAE;wBAACiC,SAAS,EAAC,CAAC;wBAACc,QAAQ,EAAC,EAAE;wBAAC1C,KAAK,EAAC;sBAAS,CAAE;sBAAAN,QAAA,GAAC,WAAS,eAAAtM,OAAA;wBAAAsM,QAAA,EAASlL,MAAM,CAAC8F,EAAE,CAACqI,MAAM,CAAC,CAAChO,OAAO,CAAC,CAAC;sBAAC;wBAAAsL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAS,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,GACnH,IAAI;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC,GA7CS9E,CAAC;gBAAA2E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA8CN,CACf,CAAC;YAAA,eACF,CACH;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGL7I,KAAK,KAAK,MAAM,iBACfnE,OAAA;QAAOqM,SAAS,EAAC,cAAc;QAACE,KAAK,EAAE;UAACiD,KAAK,EAAC;QAAG,CAAE;QAAAlD,QAAA,gBACnDtM,OAAA;UAAKuM,KAAK,EAAE;YAACC,OAAO,EAAC,MAAM;YAAEuC,cAAc,EAAC,UAAU;YAAEtC,GAAG,EAAC,CAAC;YAAElC,OAAO,EAAC;UAAC,CAAE;UAAA+B,QAAA,gBACxEtM,OAAA;YAAQkN,OAAO,EAAEA,CAAA,KAAI9I,QAAQ,CAAC,MAAM,CAAE;YAACiI,SAAS,EAAC,OAAO;YAAAC,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtEhN,OAAA;YAAQkN,OAAO,EAAEA,CAAA,KAAI9I,QAAQ,CAAC,aAAa,CAAE;YAACiI,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,EAEL7I,KAAK,KAAK,aAAa,iBACtBnE,OAAA;UAAKuM,KAAK,EAAE;YAACiC,SAAS,EAAC;UAAE,CAAE;UAAAlC,QAAA,eACzBtM,OAAA;YAAKqM,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BtM,OAAA;cAAKqM,SAAS,EAAC,cAAc;cAACE,KAAK,EAAE;gBAACc,YAAY,EAAC;cAAC,CAAE;cAAAf,QAAA,gBACpDtM,OAAA;gBAAQkN,OAAO,EAAEA,CAAA,KAAI1I,aAAa,CAACD,UAAU,KAAG,OAAO,GAAC,IAAI,GAAC,OAAO,CAAE;gBAAC8H,SAAS,EAAE9H,UAAU,KAAG,OAAO,GAAC,sBAAsB,GAAC,EAAG;gBAAA+H,QAAA,EAAC;cAAU;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrJhN,OAAA;gBAAQkN,OAAO,EAAEA,CAAA,KAAI1I,aAAa,CAACD,UAAU,KAAG,KAAK,GAAC,IAAI,GAAC,KAAK,CAAE;gBAAC8H,SAAS,EAAE9H,UAAU,KAAG,KAAK,GAAC,sBAAsB,GAAC,EAAG;gBAAA+H,QAAA,EAAC;cAAQ;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC7IhN,OAAA;gBAAQkN,OAAO,EAAEA,CAAA,KAAI;kBAAE1I,aAAa,CAAC,IAAI,CAAC;kBAAEM,eAAe,CAAC,EAAE,CAAC;kBAAEJ,aAAa,CAAC,IAAI,CAAC;kBAAEE,WAAW,CAAC,IAAI,CAAC;kBAAEc,aAAa,CAAC,EAAE,CAAC;kBAAEE,WAAW,CAAC,EAAE,CAAC;kBAAEE,aAAa,CAAC,IAAI,CAAC;kBAAEE,WAAW,CAAC,IAAI,CAAC;kBAAEE,mBAAmB,CAAC,IAAI,CAAC;kBAAEE,iBAAiB,CAAC,IAAI,CAAC;gBAAE,CAAE;gBAACiG,SAAS,EAAC,OAAO;gBAAAC,QAAA,EAAC;cAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzQ,CAAC,eACNhN,OAAA;cAAKuM,KAAK,EAAE;gBAACc,YAAY,EAAC,CAAC;gBAACT,KAAK,EAAC,SAAS;gBAAC0C,QAAQ,EAAC;cAAE,CAAE;cAAAhD,QAAA,gBAACtM,OAAA;gBAAAsM,QAAA,EAAQ;cAAkB;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,wDAA+C;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAElJhN,OAAA;cAAKuM,KAAK,EAAE;gBAACC,OAAO,EAAC,MAAM;gBAACC,GAAG,EAAC,EAAE;gBAACW,UAAU,EAAC,QAAQ;gBAACC,YAAY,EAAC;cAAE,CAAE;cAAAf,QAAA,gBACtEtM,OAAA;gBAAOuM,KAAK,EAAE;kBAACkD,MAAM,EAAC,CAAC;kBAACH,QAAQ,EAAC,EAAE;kBAAC1C,KAAK,EAAC;gBAAS,CAAE;gBAAAN,QAAA,EAAC;cAAS;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvEhN,OAAA;gBAAOqM,SAAS,EAAC,WAAW;gBAACqD,IAAI,EAAC,QAAQ;gBAAC/G,GAAG,EAAE,CAAE;gBAACE,GAAG,EAAE,EAAG;gBAAC5H,KAAK,EAAEgE,WAAY;gBAACsI,QAAQ,EAAElK,CAAC,IAAE6B,cAAc,CAAC9D,MAAM,CAACiC,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAAC;cAAE;gBAAA4L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvIhN,OAAA;gBAAKuM,KAAK,EAAE;kBAACmC,UAAU,EAAC;gBAAM,CAAE;gBAAApC,QAAA,gBAC9BtM,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAACa,OAAO,EAAEA,CAAA,KAAI;oBAAEhI,cAAc,CAAEwD,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE,CAAC1D,WAAW,IAAE,CAAC,IAAE,CAAC,CAAE,CAAC;kBAAE,CAAE;kBAAAqH,QAAA,EAAC;gBAAE;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC3GhN,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAACa,OAAO,EAAEA,CAAA,KAAI;oBAAEhI,cAAc,CAAEwD,IAAI,CAACG,GAAG,CAAC,CAAC,EAAE,CAAC5D,WAAW,IAAE,CAAC,IAAE,CAAC,CAAE,CAAC;kBAAE,CAAE;kBAACsH,KAAK,EAAE;oBAACmC,UAAU,EAAC;kBAAC,CAAE;kBAAApC,QAAA,EAAC;gBAAE;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENhN,OAAA;cAAKqM,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBtM,OAAA;gBAAKqM,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACtBtM,OAAA;kBAAKqM,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAK;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxChN,OAAA;kBAAOqM,SAAS,EAAC,aAAa;kBAACsD,QAAQ,EAAExL,KAAK,KAAG,aAAc;kBAAClD,KAAK,EAAEwE,UAAU,KAAKhB,UAAU,GAAC,GAAGA,UAAU,CAACnB,QAAQ,CAAC/B,OAAO,CAAC,CAAC,CAAC,KAAKkD,UAAU,CAAChB,SAAS,CAAClC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,CAAE;kBAACgM,QAAQ,EAAElK,CAAC,IAAEqC,aAAa,CAACrC,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAAE;kBAAC2O,MAAM,EAAGvM,CAAC,IAAG;oBACrO,IAAIc,KAAK,KAAK,aAAa,EAAE,OAAO,CAAC;oBACrC,MAAM7B,CAAC,GAAGe,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAACW,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAACU,CAAC,EAAE;oBACR,MAAMuN,KAAK,GAAGvN,CAAC,CAAC2K,KAAK,CAAC,OAAO,CAAC,CAAC9K,GAAG,CAACa,CAAC,IAAEA,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC6M,MAAM,CAACqB,OAAO,CAAC;oBAC/D,IAAID,KAAK,CAAC1H,MAAM,IAAI,CAAC,EAAC;sBAAE,MAAM3E,GAAG,GAAGpC,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,MAAME,GAAG,GAAG3O,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,IAAI,CAACxO,KAAK,CAACmC,GAAG,CAAC,IAAI,CAACnC,KAAK,CAAC0O,GAAG,CAAC,EAAErL,aAAa,CAAC;wBAACpB,QAAQ,EAACE,GAAG;wBAAEC,SAAS,EAACsM;sBAAG,CAAC,CAAC;oBAAE;kBACpK,CAAE;kBAACC,SAAS,EAAG3M,CAAC,IAAG;oBAAE,IAAIA,CAAC,CAACrC,GAAG,KAAG,OAAO,EAAC;sBAAEqC,CAAC,CAACmK,MAAM,CAACyC,IAAI,CAAC,CAAC;oBAAE;kBAAE,CAAE;kBAACC,WAAW,EAAC;gBAAU;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,eACNhN,OAAA;gBAAKqM,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5BtM,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAACa,OAAO,EAAEA,CAAA,KAAI;oBAAEzB,SAAS,CAAChH,UAAU,CAAC;kBAAE,CAAE;kBAAC0L,QAAQ,EAAE,CAAC1L,UAAW;kBAAA6H,QAAA,eAACtM,OAAA,CAACT,MAAM;oBAAAsN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC5GhN,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAAC8D,QAAQ,EAAEhM,KAAK,KAAG,aAAc;kBAAC+I,OAAO,EAAE,MAAAA,CAAA,KAAU;oBAAE,IAAI;sBAAE,MAAMkD,CAAC,GAAG,MAAM1E,SAAS,CAACC,SAAS,CAAC0E,QAAQ,CAAC,CAAC;sBAAE3K,aAAa,CAAC0K,CAAC,CAAC;sBAAE,MAAMP,KAAK,GAAGO,CAAC,CAACnD,KAAK,CAAC,OAAO,CAAC,CAAC9K,GAAG,CAACa,CAAC,IAAEA,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC6M,MAAM,CAACqB,OAAO,CAAC;sBAAE,IAAID,KAAK,CAAC1H,MAAM,IAAE,CAAC,EAAC;wBAAE,MAAM3E,GAAG,GAACpC,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;0BAAEE,GAAG,GAAC3O,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;wBAAE,IAAI,CAACxO,KAAK,CAACmC,GAAG,CAAC,IAAE,CAACnC,KAAK,CAAC0O,GAAG,CAAC,EAAErL,aAAa,CAAC;0BAACpB,QAAQ,EAACE,GAAG;0BAAEC,SAAS,EAACsM;wBAAG,CAAC,CAAC;sBAAE;oBAAE,CAAC,CAAC,OAAM1M,CAAC,EAAC,CAAC;kBAAE,CAAE;kBAACiN,KAAK,EAAC,sBAAsB;kBAAAhE,QAAA,eAACtM,OAAA,CAACP,OAAO;oBAAAoN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC/ahN,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAACa,OAAO,EAAEA,CAAA,KAAI;oBAAErB,UAAU,CAAC,CAAC;oBAAEnG,aAAa,CAAC,EAAE,CAAC;oBAAEI,aAAa,CAAC,IAAI,CAAC;oBAAEI,mBAAmB,CAAC,IAAI,CAAC;kBAAE,CAAE;kBAACiK,QAAQ,EAAE,CAAC1L,UAAW;kBAAC8H,KAAK,EAAE;oBAACmC,UAAU,EAAC;kBAAC,CAAE;kBAAApC,QAAA,eAACtM,OAAA,CAACR,OAAO;oBAAAqN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3L,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENhN,OAAA;cAAKqM,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBtM,OAAA;gBAAKqM,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACtBtM,OAAA;kBAAKqM,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAG;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtChN,OAAA;kBAAOqM,SAAS,EAAC,aAAa;kBAACsD,QAAQ,EAAExL,KAAK,KAAG,aAAc;kBAAClD,KAAK,EAAE0E,QAAQ,KAAKhB,QAAQ,GAAC,GAAGA,QAAQ,CAACrB,QAAQ,CAAC/B,OAAO,CAAC,CAAC,CAAC,KAAKoD,QAAQ,CAAClB,SAAS,CAAClC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,CAAE;kBAACgM,QAAQ,EAAElK,CAAC,IAAEuC,WAAW,CAACvC,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAAE;kBAAC2O,MAAM,EAAGvM,CAAC,IAAG;oBAC3N,IAAIc,KAAK,KAAK,aAAa,EAAE,OAAO,CAAC;oBACrC,MAAM7B,CAAC,GAAGe,CAAC,CAACmK,MAAM,CAACvM,KAAK,CAACW,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAACU,CAAC,EAAE;oBACR,MAAMuN,KAAK,GAAGvN,CAAC,CAAC2K,KAAK,CAAC,OAAO,CAAC,CAAC9K,GAAG,CAACa,CAAC,IAAEA,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC6M,MAAM,CAACqB,OAAO,CAAC;oBAC/D,IAAID,KAAK,CAAC1H,MAAM,IAAI,CAAC,EAAC;sBAAE,MAAM3E,GAAG,GAAGpC,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,MAAME,GAAG,GAAG3O,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,IAAI,CAACxO,KAAK,CAACmC,GAAG,CAAC,IAAI,CAACnC,KAAK,CAAC0O,GAAG,CAAC,EAAEnL,WAAW,CAAC;wBAACtB,QAAQ,EAACE,GAAG;wBAAEC,SAAS,EAACsM;sBAAG,CAAC,CAAC;oBAAE;kBAClK,CAAE;kBAACC,SAAS,EAAG3M,CAAC,IAAG;oBAAE,IAAIA,CAAC,CAACrC,GAAG,KAAG,OAAO,EAAC;sBAAEqC,CAAC,CAACmK,MAAM,CAACyC,IAAI,CAAC,CAAC;oBAAE;kBAAE,CAAE;kBAACC,WAAW,EAAC;gBAAU;kBAAArD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,eACNhN,OAAA;gBAAKqM,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5BtM,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAACa,OAAO,EAAEA,CAAA,KAAI;oBAAEzB,SAAS,CAAC9G,QAAQ,CAAC;kBAAE,CAAE;kBAACwL,QAAQ,EAAE,CAACxL,QAAS;kBAAA2H,QAAA,eAACtM,OAAA,CAACT,MAAM;oBAAAsN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxGhN,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAAC8D,QAAQ,EAAEhM,KAAK,KAAG,aAAc;kBAAC+I,OAAO,EAAE,MAAAA,CAAA,KAAU;oBAAE,IAAI;sBAAE,MAAMkD,CAAC,GAAG,MAAM1E,SAAS,CAACC,SAAS,CAAC0E,QAAQ,CAAC,CAAC;sBAAEzK,WAAW,CAACwK,CAAC,CAAC;sBAAE,MAAMP,KAAK,GAAGO,CAAC,CAACnD,KAAK,CAAC,OAAO,CAAC,CAAC9K,GAAG,CAACa,CAAC,IAAEA,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC6M,MAAM,CAACqB,OAAO,CAAC;sBAAE,IAAID,KAAK,CAAC1H,MAAM,IAAE,CAAC,EAAC;wBAAE,MAAM3E,GAAG,GAACpC,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;0BAAEE,GAAG,GAAC3O,MAAM,CAACyO,KAAK,CAAC,CAAC,CAAC,CAAC;wBAAE,IAAI,CAACxO,KAAK,CAACmC,GAAG,CAAC,IAAE,CAACnC,KAAK,CAAC0O,GAAG,CAAC,EAAEnL,WAAW,CAAC;0BAACtB,QAAQ,EAACE,GAAG;0BAAEC,SAAS,EAACsM;wBAAG,CAAC,CAAC;sBAAE;oBAAE,CAAC,CAAC,OAAM1M,CAAC,EAAC,CAAC;kBAAE,CAAE;kBAACiN,KAAK,EAAC,sBAAsB;kBAAAhE,QAAA,eAACtM,OAAA,CAACP,OAAO;oBAAAoN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC3ahN,OAAA;kBAAQqM,SAAS,EAAC,OAAO;kBAACa,OAAO,EAAEA,CAAA,KAAI;oBAAEpB,QAAQ,CAAC,CAAC;oBAAElG,WAAW,CAAC,EAAE,CAAC;oBAAEI,WAAW,CAAC,IAAI,CAAC;oBAAEI,iBAAiB,CAAC,IAAI,CAAC;kBAAE,CAAE;kBAAC+J,QAAQ,EAAE,CAACxL,QAAS;kBAAC4H,KAAK,EAAE;oBAACmC,UAAU,EAAC;kBAAC,CAAE;kBAAApC,QAAA,eAACtM,OAAA,CAACR,OAAO;oBAAAqN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENhN,OAAA;cAAKuM,KAAK,EAAE;gBAACiC,SAAS,EAAC,CAAC;gBAAChC,OAAO,EAAC,MAAM;gBAACY,UAAU,EAAC,QAAQ;gBAAC2B,cAAc,EAAC;cAAe,CAAE;cAAAzC,QAAA,gBAC1FtM,OAAA;gBAAKqM,SAAS,EAAC,OAAO;gBAAAC,QAAA,GAAC,YAAU,eAAAtM,OAAA;kBAAQuM,KAAK,EAAE;oBAACK,KAAK,EAAC;kBAAS,CAAE;kBAAAN,QAAA,EAAG7H,UAAU,IAAIE,QAAQ,GAAE,GAAG8F,WAAW,CAAChG,UAAU,EAACE,QAAQ,CAAC,CAACpD,OAAO,CAAC,CAAC,CAAC,KAAK,GAAC;gBAAG;kBAAAsL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpKhN,OAAA;gBAAKuM,KAAK,EAAE;kBAACC,OAAO,EAAC,MAAM;kBAACY,UAAU,EAAC,QAAQ;kBAACX,GAAG,EAAC,CAAC;kBAACiC,UAAU,EAAC;gBAAE,CAAE;gBAAApC,QAAA,gBACnEtM,OAAA;kBAAKuM,KAAK,EAAE;oBAAC+C,QAAQ,EAAC,EAAE;oBAAC1C,KAAK,EAAC;kBAAS,CAAE;kBAAAN,QAAA,EAAEjG,iBAAiB,GAAG,gCAAgC,GAAG;gBAA2B;kBAAAwG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACrIhN,OAAA;kBAAQqM,SAAS,EAAC,aAAa;kBAACa,OAAO,EAAErF,oBAAqB;kBAACsI,QAAQ,EAAE,CAAC1L,UAAU,IAAI,CAACE,QAAQ,IAAII,aAAc;kBAAAuH,QAAA,EAAEvH,aAAa,GAAG,gBAAgB,GAAG;gBAAa;kBAAA8H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5K,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDhN,OAAA;UAAKuM,KAAK,EAAE;YAACiC,SAAS,EAAC;UAAE,CAAE;UAAAlC,QAAA,gBACzBtM,OAAA;YAAKqM,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,iBAAe,eAAAtM,OAAA;cAAAsM,QAAA,EAAS,IAAI9F,IAAI,CAACrB,YAAY,CAAC,CAACoL,kBAAkB,CAAC;YAAC;cAAA1D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC7GzH,QAAQ,gBACXvF,OAAA;YAAKuM,KAAK,EAAE;cAACiC,SAAS,EAAC;YAAE,CAAE;YAAAlC,QAAA,gBACzBtM,OAAA;cAAAsM,QAAA,EAAK7K,kBAAkB,CAAC8D,QAAQ,CAACiC,IAAI;YAAC;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5ChN,OAAA;cAAKqM,SAAS,EAAC,OAAO;cAACE,KAAK,EAAE;gBAACC,OAAO,EAAC,MAAM;gBAAEuC,cAAc,EAAC,eAAe;gBAAE3B,UAAU,EAAC;cAAQ,CAAE;cAAAd,QAAA,gBAClGtM,OAAA;gBAAAsM,QAAA,gBAAKtM,OAAA;kBAAMqM,SAAS,EAAE,aAAa5K,kBAAkB,CAAC8D,QAAQ,CAACgC,KAAK,CAAC,CAAC1F,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACa,WAAW,CAAC,CAAC,EAAG;kBAAA4J,QAAA,EAAE7K,kBAAkB,CAAC8D,QAAQ,CAACgC,KAAK;gBAAC;kBAAAsF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,YAAG,EAACzH,QAAQ,CAACiL,WAAW;cAAA;gBAAA3D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EACrLzH,QAAQ,CAACqC,UAAU,GAAG,CAAC,MAAM;gBAC5B,MAAMpF,OAAO,GAAGP,6BAA6B,CAACsD,QAAQ,CAACqC,UAAU,CAAC;gBAClE,MAAM6I,OAAO,GAAGjO,OAAO,CAAC0J,IAAI,CAAC,CAAC,CAAC7J,CAAC,CAAC,KAAKb,MAAM,CAACa,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,KAAK,eAAe,CAAC;gBAClF,IAAI+N,OAAO,EAAE;kBACX,MAAM9O,CAAC,GAAGiC,kBAAkB,CAAC,eAAe,EAAE6M,OAAO,CAAC,CAAC,CAAC,CAAC;kBACzD,oBAAOzQ,OAAA;oBAAKqM,SAAS,EAAE,SAAS1K,CAAC,GAAGA,CAAC,CAACmC,GAAG,GAAG,WAAW,EAAG;oBAAAwI,QAAA,EAAE7K,kBAAkB,CAACD,MAAM,CAACiP,OAAO,CAAC,CAAC,CAAC,CAAC;kBAAC;oBAAA5D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAC3G;gBACA,OAAO,IAAI;cACb,CAAC,EAAE,CAAC,GAAG,IAAI;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACNhN,OAAA;cAAIuM,KAAK,EAAE;gBAACiC,SAAS,EAAC;cAAC,CAAE;cAAAlC,QAAA,EAAC;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACxCzH,QAAQ,CAACqC,UAAU,gBAClB5H,OAAA;cAAAsM,QAAA,EACGrK,6BAA6B,CAACsD,QAAQ,CAACqC,UAAU,CAAC,CAChD6G,MAAM,CAAC,CAAC,CAACpM,CAAC,CAAC,KAAK;gBACf,MAAMrB,GAAG,GAAGQ,MAAM,CAACa,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;gBACnC,OAAO,CAAC,CAAC,UAAU,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,CAAC,CAACsB,QAAQ,CAAChD,GAAG,CAAC;cAChG,CAAC,CAAC,CACDmB,GAAG,CAAC,CAAC,CAACE,CAAC,EAACC,CAAC,CAAC,KAAG;gBACZ,MAAMrB,KAAK,GAAGF,WAAW,CAACsB,CAAC,EAAEC,CAAC,CAAC;gBAC/B,MAAMX,CAAC,GAAGiC,kBAAkB,CAACvB,CAAC,EAACC,CAAC,CAAC;gBACjC,oBACEtC,OAAA;kBAAaqM,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBACvCtM,OAAA;oBAAKqM,SAAS,EAAC,OAAO;oBAAAC,QAAA,EAAEjK;kBAAC;oBAAAwK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAChChN,OAAA;oBAAKqM,SAAS,EAAC,OAAO;oBAAAC,QAAA,gBAACtM,OAAA;sBAAKqM,SAAS,EAAC,UAAU;sBAAAC,QAAA,EAAErL;oBAAK;sBAAA4L,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAAAhN,OAAA;sBAAKqM,SAAS,EAAE,SAAS1K,CAAC,CAACmC,GAAG,EAAG;sBAAAwI,QAAA,EAAE3K,CAAC,CAACoC;oBAAK;sBAAA8I,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GAF7G3K,CAAC;kBAAAwK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGN,CAAC;cAEV,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,gBACJhN,OAAA;cAAAsM,QAAA,EAAK;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,gBAENhN,OAAA;YAAKqM,SAAS,EAAC,aAAa;YAACE,KAAK,EAAE;cAACiC,SAAS,EAAC;YAAE,CAAE;YAAAlC,QAAA,EAAC;UAAiD;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAC3G;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9I,GAAA,CAxduBD,GAAG;AAAAyM,GAAA,GAAHzM,GAAG;AAAA,IAAAN,EAAA,EAAA+M,GAAA;AAAAC,YAAA,CAAAhN,EAAA;AAAAgN,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}