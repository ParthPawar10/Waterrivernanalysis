{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver } from './locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction App() {\n  _s4();\n  var _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  const [route, setRoute] = useState('home'); // 'home' | 'predict' | 'interpolate'\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]); // points returned from interpolation\n  const [sampleCount, setSampleCount] = useState(5);\n  const [selectMode, setSelectMode] = useState(null); // 'start' | 'end' | null\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [mapInst, setMapInst] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`; // local YYYY-MM-DD\n  });\n  useEffect(() => {\n    // fetch predictions for selectedDate (server needs month & year)\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number); // YYYY-MM-DD -> [YYYY, MM]\n    const fetchAll = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\n        const body = await res.json();\n        const newPred = {};\n        for (const item of body.predictions) {\n          // match by location name to puneLocations id\n          const loc = puneLocations.find(p => p.name === item.location);\n          if (loc) newPred[loc.id] = {\n            'pH': item['pH'],\n            'DO (mg/L)': item['DO (mg/L)'],\n            'BOD (mg/L)': item['BOD (mg/L)'],\n            'FC MPN/100ml': item['FC MPN/100ml'],\n            'TC MPN/100ml': item['TC MPN/100ml'],\n            'Water Quality': item['Water Quality']\n          };\n        }\n        // for locations not returned, set null\n        for (const loc of puneLocations) if (!newPred[loc.id]) newPred[loc.id] = null;\n        setPredictions(newPred);\n        // update selected prediction if needed\n        if (selected) {\n          const sel = puneLocations.find(p => p.id === selected.id);\n          setSelected(sel ? {\n            ...sel,\n            prediction: newPred[sel.id]\n          } : null);\n        }\n      } catch (e) {\n        // fallback: clear predictions\n        const empty = {};\n        for (const loc of puneLocations) empty[loc.id] = null;\n        setPredictions(empty);\n      }\n    };\n    fetchAll();\n  }, [selectedDate]);\n\n  // update map cursor when entering pick mode\n  useEffect(() => {\n    if (!mapInst) return;\n    const el = mapInst.getContainer();\n    if (selectMode) {\n      el.style.cursor = 'crosshair';\n    } else {\n      el.style.cursor = '';\n    }\n  }, [selectMode, mapInst]);\n\n  // when switching to predict page, clear any pick mode and interpolation points\n  useEffect(() => {\n    if (route === 'predict') {\n      setSelectMode(null);\n      setInterpPoints([]);\n    }\n  }, [route]);\n\n  // re-run interpolation when the selected date changes (if start/end are set)\n  useEffect(() => {\n    if (route === 'interpolate' && startPoint && endPoint) {\n      performInterpolation(startPoint, endPoint);\n    }\n  }, [selectedDate]);\n  const handleMarkerClick = loc => {\n    setSelected({\n      ...loc,\n      prediction: predictions[loc.id]\n    });\n  };\n  const handleMapClick = e => {\n    console.log('map clicked', selectMode, e && e.latlng && e.latlng.lat);\n    if (!selectMode) return;\n    const {\n      lat,\n      lng\n    } = e.latlng;\n    if (selectMode === 'start') {\n      setStartPoint({\n        latitude: lat,\n        longitude: lng\n      });\n      setSelectMode(null);\n    } else if (selectMode === 'end') {\n      const newEnd = {\n        latitude: lat,\n        longitude: lng\n      };\n      setEndPoint(newEnd);\n      setSelectMode(null);\n      if (route === 'interpolate' && startPoint) {\n        // auto-run interpolation when both points are set (only on interpolate page)\n        performInterpolation(startPoint, newEnd);\n      }\n    }\n  };\n\n  // react-leaflet hook wrapper to ensure clicks are captured reliably\n  const MapClickHandler = ({\n    onMapClick\n  }) => {\n    _s2();\n    useMapEvents({\n      click: e => onMapClick(e)\n    });\n    return null;\n  };\n  _s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const toLatLngs = path => path.map(p => [p.latitude, p.longitude]);\n\n  // perform interpolation between two picked points by slicing the preSampledRiver\n  const performInterpolation = async (startPt, endPt) => {\n    if (!startPt || !endPt) return;\n    // find nearest indices in the pre-sampled river array and send that slice to backend\n    const nearestIndex = pt => {\n      let best = 0;\n      let bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPt);\n    const ei = nearestIndex(endPt);\n    const a = Math.min(si, ei);\n    const b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true\n    };\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) {\n        alert('Server: ' + jb.error);\n        return;\n      }\n      setInterpPoints(jb.predictions || []);\n    } catch (err) {\n      alert('Request failed');\n    }\n  };\n\n  // Inline calendar component\n  const Calendar = ({\n    date,\n    onChange\n  }) => {\n    _s3();\n    // helpers to ensure local-date handling (avoid UTC shifts from toISOString)\n    const parseLocal = s => new Date(s + 'T00:00:00');\n    const formatLocal = d => `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    const [viewDate, setViewDate] = useState(() => {\n      const d = parseLocal(date);\n      return new Date(d.getFullYear(), d.getMonth(), 1);\n    });\n    useEffect(() => {\n      const d = parseLocal(date);\n      setViewDate(new Date(d.getFullYear(), d.getMonth(), 1));\n    }, [date]);\n    const startOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth(), 1);\n    const endOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 0);\n    const daysInMonth = endOfMonth.getDate();\n    const startWeekday = (startOfMonth.getDay() + 6) % 7; // make Monday=0\n\n    const prevMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() - 1, 1));\n    const nextMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 1));\n    const rows = [];\n    let cells = [];\n    // fill blanks\n    for (let i = 0; i < startWeekday; i++) cells.push(null);\n    for (let d = 1; d <= daysInMonth; d++) {\n      cells.push(new Date(viewDate.getFullYear(), viewDate.getMonth(), d));\n    }\n    while (cells.length % 7 !== 0) cells.push(null);\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\n    const selectedObj = parseLocal(date);\n    const isSameDay = (a, b) => a && b && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n    const today = new Date();\n\n    // month and year selectors for faster navigation\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const currentYear = new Date().getFullYear();\n    const startYear = currentYear - 5;\n    const endYear = currentYear + 5;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          \"aria-label\": \"Month\",\n          value: viewDate.getMonth(),\n          onChange: e => setViewDate(new Date(viewDate.getFullYear(), Number(e.target.value), 1)),\n          children: monthNames.map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: m\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          \"aria-label\": \"Year\",\n          value: viewDate.getFullYear(),\n          onChange: e => setViewDate(new Date(Number(e.target.value), viewDate.getMonth(), 1)),\n          children: Array.from({\n            length: endYear - startYear + 1\n          }, (_, i) => startYear + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: y,\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 94\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Mo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Tu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"We\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Th\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Fr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Su\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), rows.map((row, ri) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: row.map((d, ci) => {\n            const cls = d ? isSameDay(d, selectedObj) ? ' selected' : isSameDay(d, today) ? ' today' : '' : ' empty';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `cal-day${cls}`,\n              children: d ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onChange(formatLocal(d)),\n                \"aria-label\": `Select ${d.toDateString()}`,\n                children: d.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                \"aria-hidden\": true,\n                className: \"empty-cell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this)\n            }, `${ri}-${ci}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this);\n          })\n        }, ri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(formatLocal(new Date())),\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Parameter status helper (returns label and CSS class)\n  _s3(Calendar, \"G2KW8h2+pAWNaQndPxg9Et29IDo=\");\n  const getParameterStatus = (param, value) => {\n    if (value === null || value === undefined || value === '') return {\n      label: 'N/A',\n      cls: 'status-na'\n    };\n    const v = Number(value);\n    switch (param) {\n      case 'pH':\n        if (v >= 6.5 && v <= 8.5) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'DO (mg/L)':\n        if (v >= 5.0) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v >= 3.0) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'BOD (mg/L)':\n        if (v <= 3.0) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v <= 6.0) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'FC MPN/100ml':\n      case 'TC MPN/100ml':\n        if (v < 500) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v <= 1000) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'Water Quality':\n        // normalize and check for explicit 'non' first so \"Non Complying\" doesn't match 'comp'\n        const _s = String(value).toLowerCase();\n        if (_s.includes('non')) return {\n          label: 'Non Complying',\n          cls: 'status-poor'\n        };\n        if (_s.includes('comp')) return {\n          label: 'Complying',\n          cls: 'status-good'\n        };\n        return {\n          label: String(value),\n          cls: 'status-na'\n        };\n      default:\n        return {\n          label: '',\n          cls: ''\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(FaWater, {\n          size: 28,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"RiverWatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Water quality predictions for Pune rivers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 18\n          }, this), \" Mula\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot teal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 18\n          }, this), \" Mutha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 18\n          }, this), \" Mula-Mutha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Rivers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"river-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Originates to the north \\u2014 urban stretches through western Pune with monitoring points along bridges.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot teal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mutha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Flows from Khadakvasla dam through Pune central areas; many monitoring points track water health downstream.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mula-Mutha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Confluence section where Mula and Mutha meet \\u2014 sensitive zone for mixing and quality changes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 12\n          },\n          children: \"Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"param-names\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"DO (mg/L)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"BOD (mg/L)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"FC MPN/100ml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"TC MPN/100ml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Water Quality (Complying / Non Complying)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-hero\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"logo\",\n              children: /*#__PURE__*/_jsxDEV(FaWater, {\n                size: 28,\n                color: \"#fff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"RiverWatch \\u2014 Pune Rivers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"muted\",\n                children: \"Water quality predictions for Pune rivers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Compare parameters: pH, DO, BOD, FC and TC, and view compliance status for a selected date.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columns\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col rivers\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon\",\n                  children: \"\\uD83C\\uDF0A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), \" Rivers\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"river-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Mula\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc\",\n                  children: \"Urban stretches in western Pune with multiple monitoring points.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc\",\n                  style: {\n                    marginTop: 6\n                  },\n                  children: \"Frequently impacted by urban runoff and untreated discharges; used locally for irrigation and limited recreation.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"river-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Mutha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc\",\n                  children: \"Flows from Khadakvasla dam through central Pune; many monitoring sites downstream.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc\",\n                  style: {\n                    marginTop: 6\n                  },\n                  children: \"Supplies water to downstream areas; sections receive municipal and industrial inputs that affect DO and bacterial counts.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"river-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Mula-Mutha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc\",\n                  children: \"Confluence zone sensitive to mixing and water quality changes.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"desc\",\n                  style: {\n                    marginTop: 6\n                  },\n                  children: \"A dynamic stretch where quality can change rapidly with flow and season; supports localized biodiversity but is vulnerable to pollution pulses.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon\",\n                  children: \"\\uD83D\\uDCA7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), \" About\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  lineHeight: 1.6,\n                  color: '#334155'\n                },\n                children: \"This site reproduces the water-quality model from the mobile app and exposes interpolation along river polylines.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  lineHeight: 1.6,\n                  color: '#334155'\n                },\n                children: \"Pick two points on the map to sample locations between them. Use Predict for single-point queries.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col params\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon\",\n                  children: \"\\uD83E\\uDDEA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this), \" Parameters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"param-names\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"pH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc\",\n                    children: \"Measures water acidity/alkalinity; values outside ~6.5\\u20138.5 can stress aquatic life and alter chemical solubility.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"DO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc\",\n                    children: \"Dissolved oxygen available to organisms; low DO often signals pollution or eutrophication and threatens fish and invertebrates.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"BOD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc\",\n                    children: \"Biological Oxygen Demand \\u2014 oxygen used by microbes to decompose organic matter; higher BOD indicates heavier organic pollution.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"FC / TC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"desc\",\n                    children: \"Faecal (FC) and Total (TC) coliform counts indicate bacterial contamination; elevated levels imply fecal pollution and health risk.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-cta\",\n            style: {\n              marginTop: 18\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"home-cta\",\n              onClick: () => setRoute('predict'),\n              children: \"Go to Predict\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"home-cta\",\n              style: {\n                marginLeft: 10\n              },\n              onClick: () => setRoute('interpolate'),\n              children: \"Go to Interpolate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [puneCenter.latitude, puneCenter.longitude],\n          zoom: puneCenter.zoom,\n          className: \"map\",\n          whenCreated: m => setMapInst(m),\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n            onMapClick: handleMapClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), puneLocations.map(loc => /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: [loc.coordinate.latitude, loc.coordinate.longitude],\n            pathOptions: {\n              color: getRiverColor(loc.river),\n              fillColor: getRiverColor(loc.river),\n              fillOpacity: 0.9\n            },\n            radius: 10,\n            eventHandlers: {\n              click: () => handleMarkerClick(loc)\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popup-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"popup-title\",\n                    children: loc.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"muted popup-sub\",\n                    children: loc.river\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 23\n                }, this), predictions[loc.id] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-list popup-grid\",\n                  children: Object.entries(predictions[loc.id]).map(([k, v]) => {\n                    const status = getParameterStatus(k, v);\n                    if (k === 'Water Quality') {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"param-row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"param-name\",\n                          children: k\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 423,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"param-value\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `badge ${status.cls}`,\n                            children: status.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 424,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 424,\n                          columnNumber: 35\n                        }, this)]\n                      }, k, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 33\n                      }, this);\n                    }\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"param-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"param-name\",\n                        children: k\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"param-value\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"val-text\",\n                          children: v\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 63\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `badge ${status.cls}`,\n                          children: status.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 100\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 33\n                      }, this)]\n                    }, k, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading predictions...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this)\n          }, loc.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this)), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n            position: [startPoint.latitude, startPoint.longitude],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 119\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 56\n          }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n            position: [endPoint.latitude, endPoint.longitude],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: \"End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 113\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 54\n          }, this) : null, route === 'interpolate' && interpPoints.map((pt, idx) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: [pt.latitude, pt.longitude],\n            radius: 6,\n            pathOptions: {\n              color: '#000',\n              fillColor: '#00BCD4',\n              fillOpacity: 0.9\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  minWidth: 200\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Interpolated point\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 28\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"muted\",\n                  children: [\"Nearest: \", pt.nearest_location || '—']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-list popup-grid\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: pt['pH']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 89\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: \"DO (mg/L)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: pt['DO (mg/L)']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 96\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: \"BOD (mg/L)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: pt['BOD (mg/L)']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 97\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: \"FC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: pt['FC MPN/100ml']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 89\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: \"TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: pt['TC MPN/100ml']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 89\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: \"Quality\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: pt['Water Quality']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 94\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this)\n          }, `ip-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-panel\",\n          style: {\n            '--river-color': getRiverColor(selected ? selected.river : 'Mula')\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-calendar\",\n            children: /*#__PURE__*/_jsxDEV(Calendar, {\n              date: selectedDate,\n              onChange: d => setSelectedDate(d)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n                className: selectMode === 'start' ? 'active' : '',\n                children: \"Pick Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n                className: selectMode === 'end' ? 'active' : '',\n                children: \"Pick End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectMode(null);\n                  setInterpPoints([]);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: async () => {\n                  if (!startPoint || !endPoint) return alert('Pick start and end by clicking the map');\n                  // find nearest indices in the pre-sampled river array and send that slice to backend\n                  const nearestIndex = pt => {\n                    let best = 0;\n                    let bestD = Infinity;\n                    for (let i = 0; i < preSampledRiver.length; i++) {\n                      const dlat = preSampledRiver[i].latitude - pt.latitude;\n                      const dlng = preSampledRiver[i].longitude - pt.longitude;\n                      const d2 = dlat * dlat + dlng * dlng;\n                      if (d2 < bestD) {\n                        bestD = d2;\n                        best = i;\n                      }\n                    }\n                    return best;\n                  };\n                  const si = nearestIndex(startPoint);\n                  const ei = nearestIndex(endPoint);\n                  const a = Math.min(si, ei);\n                  const b = Math.max(si, ei);\n                  const sub = preSampledRiver.slice(a, b + 1);\n                  const d = new Date(selectedDate);\n                  const body = {\n                    locations: sub,\n                    points: sampleCount,\n                    month: d.getMonth() + 1,\n                    year: d.getFullYear(),\n                    pick_from_input: true\n                  };\n                  try {\n                    const res = await fetch(`${API_BASE}/interpolate_predict`, {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json'\n                      },\n                      body: JSON.stringify(body)\n                    });\n                    const jb = await res.json();\n                    if (jb.error) return alert('Server: ' + jb.error);\n                    setInterpPoints(jb.predictions || []);\n                  } catch (err) {\n                    alert('Request failed');\n                  }\n                },\n                children: \"Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 8\n                  },\n                  children: [\"Pick start and end on the map and click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Interpolate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 88\n                  }, this), \" (or picking the end will auto-run).\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    gap: 8,\n                    alignItems: 'center',\n                    marginTop: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      display: 'flex',\n                      gap: 6,\n                      alignItems: 'center'\n                    },\n                    children: [\"Pick k:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: 1,\n                      max: 50,\n                      value: sampleCount,\n                      onChange: e => setSampleCount(Number(e.target.value)),\n                      style: {\n                        width: 80,\n                        marginLeft: 6\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Start: \", startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"End: \", endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick mode:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this), \" \", selectMode || 'none', \" \", selectMode ? /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: 8,\n                  color: '#777'\n                },\n                children: \"Click on the map to set point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 84\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick mode:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), \" \", selectMode || 'none']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(selectedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"muted\",\n              children: [selected.river, \" \\u2022 \", selected.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Prediction for \", new Date(selectedDate).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"param-list large\",\n              children: [Object.entries(selected.prediction).filter(([k]) => k !== 'Water Quality').map(([k, v]) => {\n                const status = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 44\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"value\",\n                    children: v\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 78\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge ${status.cls}`,\n                    children: status.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 112\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 32\n                }, this);\n              }), (() => {\n                const q = selected.prediction['Water Quality'];\n                const status = getParameterStatus('Water Quality', q);\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"quality\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param\",\n                    children: \"Water Quality\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge ${status.cls}`,\n                      children: status.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 27\n                }, this);\n              })()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            children: \"Select a location on the map or from the list.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 3\n  }, this);\n}\n_s4(App, \"l4hD18AnSeGPP2WYxG2JiOgh8hM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","CircleMarker","useMapEvents","L","FaWater","puneLocations","puneCenter","getRiverColor","riverPaths","preSampledRiver","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","App","_s4","_s2","$RefreshSig$","_s3","route","setRoute","predictions","setPredictions","selected","setSelected","interpPoints","setInterpPoints","sampleCount","setSampleCount","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","mapInst","setMapInst","selectedDate","setSelectedDate","d","Date","getFullYear","String","getMonth","padStart","getDate","y","m","slice","split","map","Number","fetchAll","res","fetch","body","json","newPred","item","loc","find","p","name","location","id","sel","prediction","e","empty","el","getContainer","style","cursor","performInterpolation","handleMarkerClick","handleMapClick","console","log","latlng","lat","lng","latitude","longitude","newEnd","MapClickHandler","onMapClick","click","toLatLngs","path","startPt","endPt","nearestIndex","pt","best","bestD","Infinity","i","length","dlat","dlng","d2","si","ei","a","Math","min","b","max","sub","locations","points","month","year","pick_from_input","method","headers","JSON","stringify","jb","error","alert","err","Calendar","date","onChange","parseLocal","s","formatLocal","viewDate","setViewDate","startOfMonth","endOfMonth","daysInMonth","startWeekday","getDay","prevMonth","nextMonth","rows","cells","push","selectedObj","isSameDay","today","monthNames","currentYear","startYear","endYear","className","children","value","target","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","row","ri","Fragment","ci","cls","onClick","toDateString","getParameterStatus","param","undefined","label","v","_s","toLowerCase","includes","size","color","marginTop","lineHeight","marginLeft","center","zoom","whenCreated","url","coordinate","pathOptions","river","fillColor","fillOpacity","radius","eventHandlers","Object","entries","k","status","position","idx","minWidth","nearest_location","display","gap","alignItems","type","width","toFixed","toLocaleDateString","description","filter","q","_c","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction App() {\r\n  const [route, setRoute] = useState('home'); // 'home' | 'predict' | 'interpolate'\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]); // points returned from interpolation\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [selectMode, setSelectMode] = useState(null); // 'start' | 'end' | null\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  \r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n  const d = new Date();\r\n  return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`; // local YYYY-MM-DD\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // fetch predictions for selectedDate (server needs month & year)\r\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number); // YYYY-MM-DD -> [YYYY, MM]\r\n    const fetchAll = async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\r\n        const body = await res.json();\r\n        const newPred = {};\r\n        for (const item of body.predictions) {\r\n          // match by location name to puneLocations id\r\n          const loc = puneLocations.find(p => p.name === item.location);\r\n          if (loc) newPred[loc.id] = {\r\n            'pH': item['pH'],\r\n            'DO (mg/L)': item['DO (mg/L)'],\r\n            'BOD (mg/L)': item['BOD (mg/L)'],\r\n            'FC MPN/100ml': item['FC MPN/100ml'],\r\n            'TC MPN/100ml': item['TC MPN/100ml'],\r\n            'Water Quality': item['Water Quality']\r\n          };\r\n        }\r\n        // for locations not returned, set null\r\n        for (const loc of puneLocations) if (!newPred[loc.id]) newPred[loc.id] = null;\r\n        setPredictions(newPred);\r\n        // update selected prediction if needed\r\n        if (selected) {\r\n          const sel = puneLocations.find(p => p.id === selected.id);\r\n          setSelected(sel ? { ...sel, prediction: newPred[sel.id] } : null);\r\n        }\r\n      } catch (e) {\r\n        // fallback: clear predictions\r\n        const empty = {};\r\n        for (const loc of puneLocations) empty[loc.id] = null;\r\n        setPredictions(empty);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, [selectedDate]);\r\n\r\n  // update map cursor when entering pick mode\r\n  useEffect(() => {\r\n    if (!mapInst) return;\r\n    const el = mapInst.getContainer();\r\n    if (selectMode) {\r\n      el.style.cursor = 'crosshair';\r\n    } else {\r\n      el.style.cursor = '';\r\n    }\r\n  }, [selectMode, mapInst]);\r\n\r\n  // when switching to predict page, clear any pick mode and interpolation points\r\n  useEffect(() => {\r\n    if (route === 'predict') {\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n    }\r\n  }, [route]);\r\n\r\n  // re-run interpolation when the selected date changes (if start/end are set)\r\n  useEffect(() => {\r\n    if (route === 'interpolate' && startPoint && endPoint) {\r\n      performInterpolation(startPoint, endPoint);\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    setSelected({ ...loc, prediction: predictions[loc.id] });\r\n  };\r\n\r\n  const handleMapClick = (e) => {\r\n    console.log('map clicked', selectMode, e && e.latlng && e.latlng.lat);\r\n    if (!selectMode) return;\r\n    const { lat, lng } = e.latlng;\r\n    if (selectMode === 'start') {\r\n      setStartPoint({ latitude: lat, longitude: lng });\r\n      setSelectMode(null);\r\n    } else if (selectMode === 'end') {\r\n      const newEnd = { latitude: lat, longitude: lng };\r\n      setEndPoint(newEnd);\r\n      setSelectMode(null);\r\n      if (route === 'interpolate' && startPoint) {\r\n        // auto-run interpolation when both points are set (only on interpolate page)\r\n        performInterpolation(startPoint, newEnd);\r\n      }\r\n  }\r\n  };\r\n\r\n  // react-leaflet hook wrapper to ensure clicks are captured reliably\r\n  const MapClickHandler = ({ onMapClick }) => {\r\n    useMapEvents({\r\n      click: (e) => onMapClick(e)\r\n    });\r\n    return null;\r\n  };\r\n\r\n  const toLatLngs = (path) => path.map(p => [p.latitude, p.longitude]);\r\n\r\n  // perform interpolation between two picked points by slicing the preSampledRiver\r\n  const performInterpolation = async (startPt, endPt) => {\r\n    if (!startPt || !endPt) return;\r\n    // find nearest indices in the pre-sampled river array and send that slice to backend\r\n    const nearestIndex = (pt) => {\r\n      let best = 0;\r\n      let bestD = Infinity;\r\n      for (let i = 0; i < preSampledRiver.length; i++) {\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat * dlat + dlng * dlng;\r\n        if (d2 < bestD) { bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPt);\r\n    const ei = nearestIndex(endPt);\r\n    const a = Math.min(si, ei);\r\n    const b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b + 1);\r\n\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true };\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) { alert('Server: ' + jb.error); return; }\r\n      setInterpPoints(jb.predictions || []);\r\n    } catch (err) { alert('Request failed'); }\r\n  };\r\n\r\n  // Inline calendar component\r\n  const Calendar = ({ date, onChange }) => {\r\n    // helpers to ensure local-date handling (avoid UTC shifts from toISOString)\r\n    const parseLocal = (s) => new Date(s + 'T00:00:00');\r\n    const formatLocal = (d) => `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`;\r\n\r\n    const [viewDate, setViewDate] = useState(() => {\r\n      const d = parseLocal(date);\r\n      return new Date(d.getFullYear(), d.getMonth(), 1);\r\n    });\r\n\r\n    useEffect(() => {\r\n      const d = parseLocal(date);\r\n      setViewDate(new Date(d.getFullYear(), d.getMonth(), 1));\r\n    }, [date]);\r\n\r\n    const startOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth(), 1);\r\n    const endOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 0);\r\n    const daysInMonth = endOfMonth.getDate();\r\n    const startWeekday = (startOfMonth.getDay() + 6) % 7; // make Monday=0\r\n\r\n    const prevMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() - 1, 1));\r\n    const nextMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 1));\r\n\r\n    const rows = [];\r\n    let cells = [];\r\n    // fill blanks\r\n    for (let i = 0; i < startWeekday; i++) cells.push(null);\r\n    for (let d = 1; d <= daysInMonth; d++) {\r\n      cells.push(new Date(viewDate.getFullYear(), viewDate.getMonth(), d));\r\n    }\r\n    while (cells.length % 7 !== 0) cells.push(null);\r\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\r\n\r\n  const selectedObj = parseLocal(date);\r\n  const isSameDay = (a, b) => a && b && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\r\n  const today = new Date();\r\n\r\n    // month and year selectors for faster navigation\r\n    const monthNames = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n    const currentYear = new Date().getFullYear();\r\n    const startYear = currentYear - 5;\r\n    const endYear = currentYear + 5;\r\n\r\n    return (\r\n      <div className=\"inline-calendar\">\r\n        <div className=\"cal-head\">\r\n          <select aria-label=\"Month\" value={viewDate.getMonth()} onChange={e => setViewDate(new Date(viewDate.getFullYear(), Number(e.target.value), 1))}>\r\n            {monthNames.map((m, i) => <option key={i} value={i}>{m}</option>)}\r\n          </select>\r\n          <select aria-label=\"Year\" value={viewDate.getFullYear()} onChange={e => setViewDate(new Date(Number(e.target.value), viewDate.getMonth(), 1))}>\r\n            {Array.from({length: endYear - startYear + 1}, (_, i) => startYear + i).map(y => <option key={y} value={y}>{y}</option>)}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"cal-grid\">\r\n          <div className=\"cal-weekday\">Mo</div>\r\n          <div className=\"cal-weekday\">Tu</div>\r\n          <div className=\"cal-weekday\">We</div>\r\n          <div className=\"cal-weekday\">Th</div>\r\n          <div className=\"cal-weekday\">Fr</div>\r\n          <div className=\"cal-weekday\">Sa</div>\r\n          <div className=\"cal-weekday\">Su</div>\r\n\r\n          {rows.map((row, ri) => (\r\n            <React.Fragment key={ri}>\r\n              {row.map((d, ci) => {\r\n                const cls = d ? (isSameDay(d, selectedObj) ? ' selected' : (isSameDay(d, today) ? ' today' : '')) : ' empty';\r\n                return (\r\n                  <div key={`${ri}-${ci}`} className={`cal-day${cls}`}>\r\n                    {d ? (\r\n                        <button onClick={() => onChange(formatLocal(d))} aria-label={`Select ${d.toDateString()}`}>\r\n                          {d.getDate()}\r\n                        </button>\r\n                      ) : (\r\n                      <div aria-hidden className=\"empty-cell\" />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n          <div className=\"cal-footer\">\r\n            <button onClick={() => onChange(formatLocal(new Date()))}>Today</button>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Parameter status helper (returns label and CSS class)\r\n  const getParameterStatus = (param, value) => {\r\n    if (value === null || value === undefined || value === '') return { label: 'N/A', cls: 'status-na' };\r\n    const v = Number(value);\r\n    switch (param) {\r\n      case 'pH':\r\n        if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'DO (mg/L)':\r\n        if (v >= 5.0) return { label: 'Good', cls: 'status-good' };\r\n        if (v >= 3.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'BOD (mg/L)':\r\n        if (v <= 3.0) return { label: 'Good', cls: 'status-good' };\r\n        if (v <= 6.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'FC MPN/100ml':\r\n      case 'TC MPN/100ml':\r\n        if (v < 500) return { label: 'Good', cls: 'status-good' };\r\n        if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'Water Quality':\r\n  // normalize and check for explicit 'non' first so \"Non Complying\" doesn't match 'comp'\r\n  const _s = String(value).toLowerCase();\r\n  if (_s.includes('non')) return { label: 'Non Complying', cls: 'status-poor' };\r\n  if (_s.includes('comp')) return { label: 'Complying', cls: 'status-good' };\r\n  return { label: String(value), cls: 'status-na' };\r\n      default:\r\n        return { label: '', cls: '' };\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div className=\"page\">\r\n      {route !== 'home' && (\r\n        <aside className=\"sidebar\">\r\n          <div className=\"brand\">\r\n            <FaWater size={28} color=\"#fff\" />\r\n            <div>\r\n              <h1>RiverWatch</h1>\r\n              <p>Water quality predictions for Pune rivers</p>\r\n            </div>\r\n          </div>\r\n  <div className=\"legend\">\r\n            <div><span className=\"dot blue\"/> Mula</div>\r\n            <div><span className=\"dot teal\"/> Mutha</div>\r\n            <div><span className=\"dot orange\"/> Mula-Mutha</div>\r\n          </div>\r\n\r\n          <div className=\"sidebar-info\">\r\n            <h3>Rivers</h3>\r\n            <ul className=\"river-list\">\r\n              <li><span className=\"dot blue\"/> <strong>Mula</strong>\r\n                <div className=\"river-desc\">Originates to the north — urban stretches through western Pune with monitoring points along bridges.</div>\r\n              </li>\r\n              <li><span className=\"dot teal\"/> <strong>Mutha</strong>\r\n                <div className=\"river-desc\">Flows from Khadakvasla dam through Pune central areas; many monitoring points track water health downstream.</div>\r\n              </li>\r\n              <li><span className=\"dot orange\"/> <strong>Mula-Mutha</strong>\r\n                <div className=\"river-desc\">Confluence section where Mula and Mutha meet — sensitive zone for mixing and quality changes.</div>\r\n              </li>\r\n            </ul>\r\n\r\n            <h3 style={{marginTop:12}}>Parameters</h3>\r\n            <ul className=\"param-names\">\r\n              <li>pH</li>\r\n              <li>DO (mg/L)</li>\r\n              <li>BOD (mg/L)</li>\r\n              <li>FC MPN/100ml</li>\r\n              <li>TC MPN/100ml</li>\r\n              <li>Water Quality (Complying / Non Complying)</li>\r\n            </ul>\r\n          </div>\r\n        </aside>\r\n      )}\r\n\r\n      <main className=\"main\">\r\n        {route === 'home' ? (\r\n          <div className=\"home-page\">\r\n            <div className=\"home-card\">\r\n              <div className=\"home-hero\">\r\n                <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                <div>\r\n                  <h1>RiverWatch — Pune Rivers</h1>\r\n                  <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                </div>\r\n              </div>\r\n              <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Compare parameters: pH, DO, BOD, FC and TC, and view compliance status for a selected date.</p>\r\n\r\n              <div className=\"columns\">\r\n                <div className=\"col rivers\">\r\n                  <h3><span className=\"icon\">🌊</span> Rivers</h3>\r\n                  <div className=\"river-item\">\r\n                    <strong>Mula</strong>\r\n                    <div className=\"desc\">Urban stretches in western Pune with multiple monitoring points.</div>\r\n                    <div className=\"desc\" style={{marginTop:6}}>Frequently impacted by urban runoff and untreated discharges; used locally for irrigation and limited recreation.</div>\r\n                  </div>\r\n                  <div className=\"river-item\">\r\n                    <strong>Mutha</strong>\r\n                    <div className=\"desc\">Flows from Khadakvasla dam through central Pune; many monitoring sites downstream.</div>\r\n                    <div className=\"desc\" style={{marginTop:6}}>Supplies water to downstream areas; sections receive municipal and industrial inputs that affect DO and bacterial counts.</div>\r\n                  </div>\r\n                  <div className=\"river-item\">\r\n                    <strong>Mula-Mutha</strong>\r\n                    <div className=\"desc\">Confluence zone sensitive to mixing and water quality changes.</div>\r\n                    <div className=\"desc\" style={{marginTop:6}}>A dynamic stretch where quality can change rapidly with flow and season; supports localized biodiversity but is vulnerable to pollution pulses.</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col center\">\r\n                  <h3><span className=\"icon\">💧</span> About</h3>\r\n                  <p style={{lineHeight:1.6, color:'#334155'}}>This site reproduces the water-quality model from the mobile app and exposes interpolation along river polylines.</p>\r\n                  <p style={{lineHeight:1.6, color:'#334155'}}>Pick two points on the map to sample locations between them. Use Predict for single-point queries.</p>\r\n                </div>\r\n\r\n                <div className=\"col params\">\r\n                  <h3><span className=\"icon\">🧪</span> Parameters</h3>\r\n                  <ul className=\"param-names\">\r\n                    <li>\r\n                      <strong>pH</strong>\r\n                      <div className=\"desc\">Measures water acidity/alkalinity; values outside ~6.5–8.5 can stress aquatic life and alter chemical solubility.</div>\r\n                    </li>\r\n                    <li>\r\n                      <strong>DO</strong>\r\n                      <div className=\"desc\">Dissolved oxygen available to organisms; low DO often signals pollution or eutrophication and threatens fish and invertebrates.</div>\r\n                    </li>\r\n                    <li>\r\n                      <strong>BOD</strong>\r\n                      <div className=\"desc\">Biological Oxygen Demand — oxygen used by microbes to decompose organic matter; higher BOD indicates heavier organic pollution.</div>\r\n                    </li>\r\n                    <li>\r\n                      <strong>FC / TC</strong>\r\n                      <div className=\"desc\">Faecal (FC) and Total (TC) coliform counts indicate bacterial contamination; elevated levels imply fecal pollution and health risk.</div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"home-cta\" style={{marginTop:18}}>\r\n                <button className=\"home-cta\" onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                <button className=\"home-cta\" style={{marginLeft:10}} onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"main-content\">\r\n            <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m => setMapInst(m)}>\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n              <MapClickHandler onMapClick={handleMapClick} />\r\n\r\n              {puneLocations.map(loc => (\r\n                <CircleMarker key={loc.id}\r\n                  center={[loc.coordinate.latitude, loc.coordinate.longitude]}\r\n                  pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity: 0.9 }}\r\n                  radius={10}\r\n                  eventHandlers={{ click: () => handleMarkerClick(loc) }}\r\n                >\r\n                  <Popup>\r\n                    <div className=\"popup-card\">\r\n                      <div className=\"popup-header\">\r\n                        <strong className=\"popup-title\">{loc.name}</strong>\r\n                        <div className=\"muted popup-sub\">{loc.river}</div>\r\n                      </div>\r\n\r\n                      {predictions[loc.id] ? (\r\n                        <ul className=\"param-list popup-grid\">\r\n                          {Object.entries(predictions[loc.id]).map(([k, v]) => {\r\n                            const status = getParameterStatus(k, v);\r\n                            if (k === 'Water Quality') {\r\n                              return (\r\n                                <li className=\"param-row\" key={k}>\r\n                                  <span className=\"param-name\">{k}</span>\r\n                                  <span className=\"param-value\"><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                                </li>\r\n                              );\r\n                            }\r\n\r\n                            return (\r\n                              <li className=\"param-row\" key={k}>\r\n                                <span className=\"param-name\">{k}</span>\r\n                                <span className=\"param-value\"><span className=\"val-text\">{v}</span><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      ) : (\r\n                        <div>Loading predictions...</div>\r\n                      )}\r\n                    </div>\r\n                  </Popup>\r\n                </CircleMarker>\r\n              ))}\r\n\r\n              {/* show start/end & interpolated points only on interpolate page */}\r\n              {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n              {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n\r\n              {route === 'interpolate' && interpPoints.map((pt, idx) => (\r\n                <CircleMarker key={`ip-${idx}`} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{ color: '#000', fillColor: '#00BCD4', fillOpacity: 0.9 }}>\r\n                  <Popup>\r\n                    <div style={{minWidth:200}}>\r\n                      <div><strong>Interpolated point</strong></div>\r\n                      <div className=\"muted\">Nearest: {pt.nearest_location || '—'}</div>\r\n                      <ul className=\"param-list popup-grid\">\r\n                        <li className=\"param-row\"><span className=\"param-name\">pH</span><span className=\"param-value\">{pt['pH']}</span></li>\r\n                        <li className=\"param-row\"><span className=\"param-name\">DO (mg/L)</span><span className=\"param-value\">{pt['DO (mg/L)']}</span></li>\r\n                        <li className=\"param-row\"><span className=\"param-name\">BOD (mg/L)</span><span className=\"param-value\">{pt['BOD (mg/L)']}</span></li>\r\n                        <li className=\"param-row\"><span className=\"param-name\">FC</span><span className=\"param-value\">{pt['FC MPN/100ml']}</span></li>\r\n                        <li className=\"param-row\"><span className=\"param-name\">TC</span><span className=\"param-value\">{pt['TC MPN/100ml']}</span></li>\r\n                        <li className=\"param-row\"><span className=\"param-name\">Quality</span><span className=\"param-value\">{pt['Water Quality']}</span></li>\r\n                      </ul>\r\n                    </div>\r\n                  </Popup>\r\n                </CircleMarker>\r\n              ))}\r\n            </MapContainer>\r\n\r\n            <div className=\"detail-panel\" style={{ '--river-color': getRiverColor(selected ? selected.river : 'Mula') }}>\r\n              <div className=\"detail-calendar\">\r\n                <Calendar date={selectedDate} onChange={d => setSelectedDate(d)} />\r\n              </div>\r\n              <div style={{marginTop:12}}>\r\n                <div className=\"controls-row\">\r\n                  <button onClick={() => setSelectMode(selectMode==='start' ? null : 'start')} className={selectMode==='start' ? 'active' : ''}>Pick Start</button>\r\n                  <button onClick={() => setSelectMode(selectMode==='end' ? null : 'end')} className={selectMode==='end' ? 'active' : ''}>Pick End</button>\r\n                  <button onClick={() => { setSelectMode(null); setInterpPoints([]); }}>Cancel</button>\r\n                  <button onClick={async () => {\r\n                    if (!startPoint || !endPoint) return alert('Pick start and end by clicking the map');\r\n                    // find nearest indices in the pre-sampled river array and send that slice to backend\r\n                    const nearestIndex = (pt) => {\r\n                      let best = 0;\r\n                      let bestD = Infinity;\r\n                      for (let i = 0; i < preSampledRiver.length; i++) {\r\n                        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n                        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n                        const d2 = dlat * dlat + dlng * dlng;\r\n                        if (d2 < bestD) { bestD = d2; best = i; }\r\n                      }\r\n                      return best;\r\n                    };\r\n                    const si = nearestIndex(startPoint);\r\n                    const ei = nearestIndex(endPoint);\r\n                    const a = Math.min(si, ei);\r\n                    const b = Math.max(si, ei);\r\n                    const sub = preSampledRiver.slice(a, b + 1);\r\n\r\n                    const d = new Date(selectedDate);\r\n                    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true };\r\n                    try {\r\n                      const res = await fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n                      const jb = await res.json();\r\n                      if (jb.error) return alert('Server: ' + jb.error);\r\n                      setInterpPoints(jb.predictions || []);\r\n                    } catch (err) { alert('Request failed'); }\r\n                  }}>Interpolate</button>\r\n                  <div style={{marginTop:8}}>\r\n                    <div style={{marginTop:8}}>Pick start and end on the map and click <strong>Interpolate</strong> (or picking the end will auto-run).</div>\r\n                    <div style={{display:'flex', gap:8, alignItems:'center', marginTop:6}}>\r\n                      <label style={{display:'flex', gap:6, alignItems:'center'}}>Pick k:\r\n                        <input type=\"number\" min={1} max={50} value={sampleCount} onChange={e => setSampleCount(Number(e.target.value))} style={{width:80, marginLeft:6}} />\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style={{marginTop:8}}>\r\n                  <div>Start: {startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—'}</div>\r\n                  <div>End: {endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—'}</div>\r\n                </div>\r\n                <div style={{marginTop:8}}>\r\n                  <strong>Pick mode:</strong> {selectMode || 'none'} {selectMode ? <span style={{marginLeft:8, color:'#777'}}>Click on the map to set point</span> : null}\r\n                </div>\r\n                <div style={{marginTop:8}}>\r\n                  <strong>Pick mode:</strong> {selectMode || 'none'}\r\n                </div>\r\n              </div>\r\n              <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n              {selected ? (\r\n                <div>\r\n                  <h2>{selected.name}</h2>\r\n                  <p className=\"muted\">{selected.river} • {selected.description}</p>\r\n                  <h3>Prediction for {new Date(selectedDate).toLocaleDateString()}</h3>\r\n                  {selected.prediction ? (\r\n                    <ul className=\"param-list large\">\r\n                      {Object.entries(selected.prediction).filter(([k]) => k !== 'Water Quality').map(([k, v]) => {\r\n                        const status = getParameterStatus(k, v);\r\n                        return <li key={k}><span className=\"param\">{k}</span><span className=\"value\">{v}</span><span className={`badge ${status.cls}`}>{status.label}</span></li>\r\n                      })}\r\n                      {(() => {\r\n                        const q = selected.prediction['Water Quality'];\r\n                        const status = getParameterStatus('Water Quality', q);\r\n                        return (\r\n                          <li className=\"quality\">\r\n                            <span className=\"param\">Water Quality</span>\r\n                            <span className=\"param-value\"><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                          </li>\r\n                        );\r\n                      })()}\r\n                    </ul>\r\n                  ) : <div>Loading...</div>}\r\n                </div>\r\n              ) : (\r\n                <div className=\"placeholder\">Select a location on the map or from the list.</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}