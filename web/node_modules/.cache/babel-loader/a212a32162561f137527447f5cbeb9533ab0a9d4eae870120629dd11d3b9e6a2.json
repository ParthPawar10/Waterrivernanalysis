{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// ensure leaflet marker icons load correctly when not using bundled images\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction Calendar({\n  date,\n  onChange\n}) {\n  _s();\n  const base = date ? new Date(date) : new Date();\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\n  React.useEffect(() => {\n    const d = date ? new Date(date) : new Date();\n    setViewMonth(d.getMonth());\n    setViewYear(d.getFullYear());\n  }, [date]);\n  const startOfMonth = (y, m) => new Date(y, m, 1);\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\n  const weeks = [];\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\n  const total = leading + daysInMonth(viewYear, viewMonth);\n  const rows = Math.ceil(total / 7);\n  let day = 1 - leading;\n  for (let r = 0; r < rows; r++) {\n    const week = [];\n    for (let c = 0; c < 7; c++, day++) {\n      const cellDate = new Date(viewYear, viewMonth, day);\n      week.push(cellDate);\n    }\n    weeks.push(week);\n  }\n  const monthNames = Array.from({\n    length: 12\n  }, (_, i) => new Date(2000, i).toLocaleString(undefined, {\n    month: 'long'\n  }));\n  const selectDate = d => {\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    onChange && onChange(iso);\n  };\n  const selected = date ? new Date(date) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-calendar\",\n    style: {\n      padding: 8,\n      background: '#fff',\n      border: '1px solid rgba(0,0,0,0.06)',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: 12,\n        padding: '8px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calendar-nav-btn\",\n        onClick: () => {\n          const m = viewMonth - 1;\n          if (m < 0) {\n            setViewYear(v => v - 1);\n            setViewMonth(11);\n          } else {\n            setViewMonth(m);\n          }\n        },\n        style: {\n          background: '#f8fafc',\n          border: '1px solid #e2e8f0',\n          borderRadius: '6px',\n          padding: '8px 10px',\n          cursor: 'pointer',\n          fontSize: '14px',\n          color: '#334155'\n        },\n        children: '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 12,\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: viewMonth,\n          onChange: e => setViewMonth(Number(e.target.value)),\n          style: {\n            background: '#fff',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            padding: '6px 8px',\n            fontSize: '14px',\n            color: '#374151',\n            cursor: 'pointer',\n            minWidth: '120px'\n          },\n          children: monthNames.map((mn, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: mn\n          }, mn, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: viewYear,\n          onChange: e => setViewYear(Number(e.target.value)),\n          style: {\n            background: '#fff',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            padding: '6px 8px',\n            fontSize: '14px',\n            color: '#374151',\n            cursor: 'pointer',\n            minWidth: '80px'\n          },\n          children: Array.from({\n            length: 50\n          }).map((_, i) => viewYear - 4 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: y,\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calendar-nav-btn\",\n        onClick: () => {\n          const m = viewMonth + 1;\n          if (m > 11) {\n            setViewYear(v => v + 1);\n            setViewMonth(0);\n          } else {\n            setViewMonth(m);\n          }\n        },\n        style: {\n          background: '#f8fafc',\n          border: '1px solid #e2e8f0',\n          borderRadius: '6px',\n          padding: '8px 10px',\n          cursor: 'pointer',\n          fontSize: '14px',\n          color: '#334155'\n        },\n        children: '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7,1fr)',\n        gap: 4,\n        marginTop: 8,\n        fontSize: 12,\n        fontWeight: 600,\n        textAlign: 'center',\n        color: '#6b7280'\n      },\n      children: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 62\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: weeks.map((week, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7,1fr)',\n          gap: 4,\n          marginBottom: 4\n        },\n        children: week.map(d => {\n          const inMonth = d.getMonth() === viewMonth;\n          const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\n          const isToday = new Date().toDateString() === d.toDateString();\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => inMonth && selectDate(d),\n            style: {\n              padding: 8,\n              borderRadius: 6,\n              border: isToday ? '2px solid #3b82f6' : '1px solid transparent',\n              background: isSelected ? '#1976d2' : inMonth ? '#f8fafc' : 'transparent',\n              color: isSelected ? '#fff' : inMonth ? '#374151' : '#9ca3af',\n              cursor: inMonth ? 'pointer' : 'default',\n              fontSize: '13px',\n              fontWeight: isSelected || isToday ? '600' : '400',\n              transition: 'all 0.2s ease'\n            },\n            onMouseEnter: e => {\n              if (inMonth && !isSelected) {\n                e.target.style.background = '#e2e8f0';\n              }\n            },\n            onMouseLeave: e => {\n              if (inMonth && !isSelected) {\n                e.target.style.background = '#f8fafc';\n              }\n            },\n            children: d.getDate()\n          }, d.toISOString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"+WjzgPy1E1H6pbTexAGZoB0CTbk=\");\n_c = Calendar;\nfunction formatValue(key, value) {\n  if (value === null || value === undefined) return '—';\n  const n = Number(value);\n  if (!Number.isNaN(n)) {\n    if (/pH/i.test(key)) return n.toFixed(3);\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\n    return String(n);\n  }\n  return String(value);\n}\nfunction cleanQualityString(quality) {\n  if (quality === null || quality === undefined) return quality;\n  let s = String(quality).trim();\n  if (!s) return s;\n  // normalize whitespace\n  s = s.replace(/\\s+/g, ' ');\n  // remove duplicated trailing punctuation and normalize\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\n  if (m && m[1]) return m[1].trim();\n  // fallback: if full-string repeated twice (older regex)\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\n  return m2 ? m2[1].trim() : s;\n}\nfunction canonicalizePredictionEntries(pred) {\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\n  if (!pred || typeof pred !== 'object') return [];\n  const map = new Map();\n  for (const [k, v] of Object.entries(pred)) {\n    const key = String(k).trim();\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\n    // map some common aliases\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\n    map.set(canonical, {\n      key: key,\n      value: v\n    });\n  }\n  // return in insertion order but using original key casing for display\n  return Array.from(map.values()).map(x => [x.key, x.value]);\n}\n\n// small helper component to forward map click events into lat/lon objects\nfunction MapClickHandler({\n  onMapClick\n}) {\n  _s2();\n  useMapEvents({\n    click: e => {\n      onMapClick && onMapClick({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n    }\n  });\n  return null;\n}\n\n// basic parameter status mapping used by badges in the UI\n_s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = MapClickHandler;\nfunction getParameterStatus(param, value) {\n  if (value === null || value === undefined) return {\n    cls: 'status-na',\n    label: 'N/A'\n  };\n  const key = String(param || '').toLowerCase();\n  const v = Number(value);\n  if (key.includes('water quality')) {\n    const s = String(value || '').toLowerCase();\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (s.includes('moderate') || s.includes('borderline')) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: String(value),\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('pH')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 6.5 && v <= 8.5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 6 && v < 6.5) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('do')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 3) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('bod')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 3) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 6) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('fc mpn/100ml')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 500) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 1000) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('tc mpn/100ml')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 1000) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 2000) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  return {\n    label: String(value),\n    cls: 'status-na'\n  };\n}\nexport default function App() {\n  _s3();\n  const [route, setRoute] = useState('home');\n  const [mapInst, setMapInst] = useState(null);\n  const [selectMode, setSelectMode] = useState(null);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]);\n  const [interpLoading, setInterpLoading] = useState(false);\n  const [sampleCount, setSampleCount] = useState(5);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  });\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [startInput, setStartInput] = useState('');\n  const [endInput, setEndInput] = useState('');\n  const [startRiver, setStartRiver] = useState(null);\n  const [endRiver, setEndRiver] = useState(null);\n  const [startStationName, setStartStationName] = useState(null);\n  const [endStationName, setEndStationName] = useState(null);\n  // Add missing state for forceIndexMedians\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\n  const handleMapClick = useCallback(pt => {\n    if (selectMode === 'start') setStartPoint(pt);else if (selectMode === 'end') setEndPoint(pt);\n  }, [selectMode]);\n  const handleMarkerClick = loc => {\n    // In interpolate route, if user is picking start or end, set them from known station\n    if (route === 'interpolate' && selectMode === 'start') {\n      const coord = loc.coordinate || loc;\n      setStartPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setStartRiver(loc.river || null);\n      setStartStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    if (route === 'interpolate' && selectMode === 'end') {\n      // guard: do not allow picking end on a different river than start\n      if (startRiver && loc.river && startRiver !== loc.river) {\n        alert('Please pick an end station on the same river as the start station.');\n        setSelectMode(null);\n        return;\n      }\n      const coord = loc.coordinate || loc;\n      setEndPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setEndRiver(loc.river || null);\n      setEndStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    // default behaviour: open details\n    setSelected(loc);\n    // attach available prediction\n    const pred = predictions[loc.id] || null;\n    setSelected(prev => ({\n      ...loc,\n      prediction: pred\n    }));\n  };\n  const performInterpolation = async () => {\n    if (!startPoint || !endPoint) return alert('Pick start and end');\n    setInterpLoading(true);\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\n    const nearestIndex = pt => {\n      let best = 0,\n        bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPoint),\n      ei = nearestIndex(endPoint);\n    const a = Math.min(si, ei),\n      b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true,\n      blend: 'river'\n    };\n    // include explicit station-name override only when user forces index medians\n    if (forceIndexMedians && startStationName && endStationName) {\n      body.start_station_name = startStationName;\n      body.end_station_name = endStationName;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) return alert('Server: ' + jb.error);\n      const pts = jb.predictions || [];\n      setInterpPoints(pts);\n      // fit map to interpolated points if we have a map instance\n      try {\n        if (mapInst && pts && pts.length > 0) {\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\n          mapInst.fitBounds(latlngs, {\n            padding: [40, 40]\n          });\n        }\n      } catch (e) {}\n    } catch (err) {\n      alert('Request failed');\n    } finally {\n      setInterpLoading(false);\n    }\n  };\n  function haversineKm(a, b) {\n    if (!a || !b) return 0;\n    const toRad = v => v * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(b.latitude - a.latitude);\n    const dLon = toRad(b.longitude - a.longitude);\n    const lat1 = toRad(a.latitude);\n    const lat2 = toRad(b.latitude);\n    const sinDlat = Math.sin(dLat / 2),\n      sinDlon = Math.sin(dLon / 2);\n    const aa = sinDlat * sinDlat + sinDlon * sinDlon * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1 - aa));\n    return R * c;\n  }\n  const copyCoord = pt => {\n    if (!pt) return;\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\n    try {\n      navigator.clipboard && navigator.clipboard.writeText(s);\n    } catch (e) {}\n  };\n  const clearStart = () => {\n    setStartPoint(null);\n    setInterpPoints([]);\n  };\n  const clearEnd = () => {\n    setEndPoint(null);\n    setInterpPoints([]);\n  };\n\n  // Fetch predictions for all stations when app loads or selectedDate changes\n  useEffect(() => {\n    async function fetchPredictions() {\n      if (!selectedDate) return;\n      try {\n        const d = new Date(selectedDate);\n        const month = d.getMonth() + 1;\n        const year = d.getFullYear();\n        const res = await fetch(`${API_BASE}/predict_all?month=${month}&year=${year}`);\n        const jb = await res.json();\n        if (jb && jb.predictions) {\n          // Map predictions to station id\n          const preds = {};\n          jb.predictions.forEach(pred => {\n            // Find location by name\n            const loc = puneLocations.find(l => l.name === pred.location);\n            if (loc && loc.id) preds[loc.id] = pred;\n          });\n          setPredictions(preds);\n        }\n      } catch (err) {\n        // Optionally handle error\n      }\n    }\n    fetchPredictions();\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-hero\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo\",\n                children: /*#__PURE__*/_jsxDEV(FaWater, {\n                  size: 28,\n                  color: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"RiverWatch \\u2014 Pune Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"muted\",\n                  children: \"Water quality predictions for Pune rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col rivers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula\",\n                    children: \"Mula\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mutha\",\n                    children: \"Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula-mutha\",\n                    children: \"Mula-Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula-Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col params\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-names\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"DO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"BOD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"FC/TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 50\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-cta\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setRoute('predict'),\n                children: \"Go to Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"secondary\",\n                onClick: () => setRoute('interpolate'),\n                children: \"Go to Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          style: {\n            height: 'calc(100vh - 36px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [puneCenter.latitude, puneCenter.longitude],\n            zoom: puneCenter.zoom,\n            className: \"map\",\n            whenCreated: m => setMapInst(m),\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n              onMapClick: handleMapClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), puneLocations.map(loc => {\n              const pred = predictions[loc.id] || null;\n              const entries = pred ? canonicalizePredictionEntries(pred) : [];\n              const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n              const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\n              const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\n              return /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [loc.coordinate.latitude, loc.coordinate.longitude],\n                pathOptions: {\n                  color: getRiverColor(loc.river),\n                  fillColor: getRiverColor(loc.river),\n                  fillOpacity: 0.9\n                },\n                radius: 8,\n                eventHandlers: {\n                  click: () => handleMarkerClick(loc)\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-card\",\n                    style: {\n                      minWidth: 260\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-title\",\n                          children: cleanQualityString(loc.name)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 536,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-sub muted\",\n                          style: {\n                            display: 'flex',\n                            gap: 8,\n                            alignItems: 'center',\n                            marginTop: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                            children: cleanQualityString(loc.river)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 538,\n                            columnNumber: 33\n                          }, this), overallValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${overallStatus ? overallStatus.cls : 'status-na'}`,\n                            children: overallValue\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 539,\n                            columnNumber: 49\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 27\n                    }, this), pred ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-grid\",\n                      children: entries.filter(([k]) => {\n                        const key = String(k).toLowerCase();\n                        return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n                      }).map(([k, v]) => {\n                        const value = formatValue(k, v);\n                        const s = getParameterStatus(k, v);\n                        // For pH, show value and status side by side\n                        if (String(k).toLowerCase() === 'pH') {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-row\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"param-name\",\n                              children: k\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 558,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"param-value\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"val-text\",\n                                children: value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 560,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: `badge ${s.cls}`,\n                                style: {\n                                  marginLeft: 8\n                                },\n                                children: s.label\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 561,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 559,\n                              columnNumber: 41\n                            }, this)]\n                          }, k, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 557,\n                            columnNumber: 39\n                          }, this);\n                        }\n                        // For other parameters, show value and status as before\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"param-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-name\",\n                            children: k\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 569,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-value\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"val-text\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 571,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: `badge ${s.cls}`,\n                              style: {\n                                marginLeft: 8\n                              },\n                              children: s.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 572,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 570,\n                            columnNumber: 39\n                          }, this)]\n                        }, k, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 568,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this)\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this);\n            }), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [startPoint.latitude, startPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 58\n            }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [endPoint.latitude, endPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 56\n            }, this) : null, route === 'interpolate' && interpPoints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                positions: interpPoints.map(p => [p.latitude, p.longitude]),\n                pathOptions: {\n                  color: '#0077b6',\n                  weight: 3,\n                  opacity: 0.7\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this), interpPoints.map((pt, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [pt.latitude, pt.longitude],\n                radius: 6,\n                pathOptions: {\n                  color: '#0077b6',\n                  fillColor: '#00b4d8',\n                  fillOpacity: 0.9\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minWidth: 220\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Interpolated\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 594,\n                          columnNumber: 36\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`,\n                        children: cleanQualityString(pt['Water Quality'])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 29\n                    }, this), ['pH', 'DO (mg/L)', 'BOD (mg/L)'].map((param, idx) => {\n                      const val = pt[param];\n                      const valStr = val === null || val === undefined ? '—' : Number(val).toFixed(3);\n                      const status = getParameterStatus(param, val);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          marginTop: idx === 0 ? 8 : 4,\n                          borderTop: idx === 0 ? '1px solid #edf2f7' : 'none',\n                          paddingTop: idx === 0 ? 8 : 0\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 13,\n                            color: '#334155',\n                            fontWeight: 700\n                          },\n                          children: param\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 604,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 18,\n                              fontWeight: 800,\n                              color: '#0b3b52'\n                            },\n                            children: valStr\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 606,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${status.cls}`,\n                            children: status.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 607,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 605,\n                          columnNumber: 35\n                        }, this)]\n                      }, param, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 33\n                      }, this);\n                    }), ['FC MPN/100ml', 'TC MPN/100ml'].map(param => {\n                      if (pt[param] !== undefined && pt[param] !== null) {\n                        const val = pt[param];\n                        const valStr = val === null || val === undefined ? '—' : Number(val).toFixed(2);\n                        const status = getParameterStatus(param, val);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            marginTop: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 13,\n                              color: '#334155',\n                              fontWeight: 700\n                            },\n                            children: param\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 620,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: 8\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                fontSize: 15,\n                                fontWeight: 700,\n                                color: '#0b3b52'\n                              },\n                              children: valStr\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 622,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: `badge ${status.cls}`,\n                              children: status.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 623,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 621,\n                            columnNumber: 37\n                          }, this)]\n                        }, param, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 619,\n                          columnNumber: 35\n                        }, this);\n                      }\n                      return null;\n                    }), pt && pt.t_frac !== undefined && pt.t_frac !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8,\n                        fontSize: 12,\n                        color: '#64748b'\n                      },\n                      children: [\"Blend t: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: Number(pt.t_frac).toFixed(3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 31\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 25\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"detail-panel\",\n        style: {\n          width: 360\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8,\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('home'),\n            className: \"small\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('interpolate'),\n            className: \"small primary\",\n            children: \"Interpolate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), route === 'interpolate' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls-row\",\n              style: {\n                marginBottom: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n                className: selectMode === 'start' ? 'active small primary' : '',\n                children: \"Pick Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n                className: selectMode === 'end' ? 'active small primary' : '',\n                children: \"Pick End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectMode(null);\n                  setInterpPoints([]);\n                  setStartPoint(null);\n                  setEndPoint(null);\n                  setStartInput('');\n                  setEndInput('');\n                  setStartRiver(null);\n                  setEndRiver(null);\n                  setStartStationName(null);\n                  setEndStationName(null);\n                },\n                className: \"small\",\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 8,\n                color: '#0b3b52',\n                fontSize: 13\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick stations only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 75\n              }, this), \" \\u2014 interpolation will use river-linear blending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 12,\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 0,\n                  fontSize: 13,\n                  color: '#475569'\n                },\n                children: \"Points k:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-box\",\n                type: \"number\",\n                min: 1,\n                max: 50,\n                value: sampleCount,\n                onChange: e => setSampleCount(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.min(50, (sampleCount || 1) + 1));\n                  },\n                  children: \"+1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.max(1, (sampleCount || 1) - 1));\n                  },\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: \"-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: startInput || (startPoint ? `${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setStartInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(startPoint);\n                  },\n                  disabled: !startPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setStartInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 435\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearStart();\n                    setStartInput('');\n                    setStartRiver(null);\n                    setStartStationName(null);\n                  },\n                  disabled: !startPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 194\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: endInput || (endPoint ? `${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setEndInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(endPoint);\n                  },\n                  disabled: !endPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setEndInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 431\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearEnd();\n                    setEndInput('');\n                    setEndRiver(null);\n                    setEndStationName(null);\n                  },\n                  disabled: !endPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 184\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Distance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#233249'\n                  },\n                  children: startPoint && endPoint ? `${haversineKm(startPoint, endPoint).toFixed(2)} km` : '—'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 8,\n                  marginLeft: 12\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12,\n                    color: '#475569'\n                  },\n                  children: forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-primary\",\n                  onClick: performInterpolation,\n                  disabled: !startPoint || !endPoint || interpLoading,\n                  children: interpLoading ? 'Interpolating…' : 'Interpolate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(selectedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cleanQualityString(selected.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                  children: cleanQualityString(selected.river)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 24\n                }, this), \" \\u2022 \", selected.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this), selected.prediction ? (() => {\n                const entries = canonicalizePredictionEntries(selected.prediction);\n                const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n                if (overall) {\n                  const s = getParameterStatus('Water Quality', overall[1]);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `badge ${s ? s.cls : 'status-na'}`,\n                    children: cleanQualityString(String(overall[1]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 30\n                  }, this);\n                }\n                return null;\n              })() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: canonicalizePredictionEntries(selected.prediction).filter(([k]) => {\n                const key = String(k).toLowerCase();\n                return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n              }).map(([k, v]) => {\n                const value = formatValue(k, v);\n                const s = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"value\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"val-text\",\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 753,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `badge ${s.cls}`,\n                      children: s.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 753,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 29\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            style: {\n              marginTop: 12\n            },\n            children: \"Select a location on the map to see details here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"6Q7+P8CY6hW/3Z7cCG2O5nK6idg=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"MapClickHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MapContainer","TileLayer","Marker","Popup","CircleMarker","Polyline","useMapEvents","L","FaWater","FaCopy","FaTrash","FaPaste","puneLocations","puneCenter","getRiverColor","preSampledRiver","riverDescriptions","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Calendar","date","onChange","_s","base","Date","viewMonth","setViewMonth","getMonth","viewYear","setViewYear","getFullYear","d","startOfMonth","y","m","daysInMonth","getDate","weeks","firstDay","getDay","leading","total","rows","Math","ceil","day","r","week","c","cellDate","push","monthNames","Array","from","length","_","i","toLocaleString","undefined","month","selectDate","iso","String","padStart","selected","className","style","padding","background","border","borderRadius","children","display","justifyContent","alignItems","marginBottom","onClick","v","cursor","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","gap","value","e","Number","target","minWidth","map","mn","idx","gridTemplateColumns","marginTop","fontWeight","textAlign","inMonth","isSelected","isToday","toDateString","transition","onMouseEnter","onMouseLeave","toISOString","_c","formatValue","key","n","isNaN","test","toFixed","cleanQualityString","quality","s","trim","replace","match","m2","canonicalizePredictionEntries","pred","Map","k","Object","entries","norm","toLowerCase","canonical","set","values","x","MapClickHandler","onMapClick","_s2","click","latitude","latlng","lat","longitude","lng","_c2","getParameterStatus","param","cls","label","includes","App","_s3","route","setRoute","mapInst","setMapInst","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","interpPoints","setInterpPoints","interpLoading","setInterpLoading","sampleCount","setSampleCount","selectedDate","setSelectedDate","predictions","setPredictions","setSelected","startInput","setStartInput","endInput","setEndInput","startRiver","setStartRiver","endRiver","setEndRiver","startStationName","setStartStationName","endStationName","setEndStationName","forceIndexMedians","setForceIndexMedians","handleMapClick","pt","handleMarkerClick","loc","coord","coordinate","river","name","alert","id","prev","prediction","performInterpolation","nearestIndex","best","bestD","Infinity","dlat","dlng","d2","si","ei","a","min","b","max","sub","slice","body","locations","points","year","pick_from_input","blend","start_station_name","end_station_name","res","fetch","method","headers","JSON","stringify","jb","json","error","pts","latlngs","p","fitBounds","err","haversineKm","toRad","PI","R","dLat","dLon","lat1","lat2","sinDlat","sin","sinDlon","aa","cos","atan2","sqrt","copyCoord","navigator","clipboard","writeText","clearStart","clearEnd","fetchPredictions","preds","forEach","find","l","location","flex","size","split","height","center","zoom","whenCreated","url","overallEntry","overallValue","overallStatus","pathOptions","fillColor","fillOpacity","radius","eventHandlers","filter","marginLeft","position","positions","weight","opacity","val","valStr","status","borderTop","paddingTop","t_frac","width","margin","type","readOnly","onBlur","parts","Boolean","lon","onKeyDown","blur","placeholder","disabled","t","readText","title","toLocaleDateString","description","overall","_c3","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\n// ensure leaflet marker icons load correctly when not using bundled images\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\nfunction Calendar({ date, onChange }) {\r\n  const base = date ? new Date(date) : new Date();\r\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\r\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\r\n\r\n  React.useEffect(() => {\r\n    const d = date ? new Date(date) : new Date();\r\n    setViewMonth(d.getMonth());\r\n    setViewYear(d.getFullYear());\r\n  }, [date]);\r\n\r\n  const startOfMonth = (y, m) => new Date(y, m, 1);\r\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\r\n\r\n  const weeks = [];\r\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\r\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\r\n  const total = leading + daysInMonth(viewYear, viewMonth);\r\n  const rows = Math.ceil(total / 7);\r\n\r\n  let day = 1 - leading;\r\n  for (let r = 0; r < rows; r++) {\r\n    const week = [];\r\n    for (let c = 0; c < 7; c++, day++) {\r\n      const cellDate = new Date(viewYear, viewMonth, day);\r\n      week.push(cellDate);\r\n    }\r\n    weeks.push(week);\r\n  }\r\n\r\n  const monthNames = Array.from({ length: 12 }, (_, i) => new Date(2000, i).toLocaleString(undefined, { month: 'long' }));\r\n\r\n  const selectDate = (d) => {\r\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\r\n    onChange && onChange(iso);\r\n  };\r\n\r\n  const selected = date ? new Date(date) : null;\r\n\r\n  return (\r\n    <div className=\"inline-calendar\" style={{ padding: 8, background: '#fff', border: '1px solid rgba(0,0,0,0.06)', borderRadius: '8px' }}>\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center', \r\n        marginBottom: 12,\r\n        padding: '8px 0'\r\n      }}>\r\n        <button \r\n          className=\"calendar-nav-btn\" \r\n          onClick={() => { \r\n            const m = viewMonth - 1; \r\n            if (m < 0) { \r\n              setViewYear(v => v - 1); \r\n              setViewMonth(11); \r\n            } else {\r\n              setViewMonth(m); \r\n            }\r\n          }}\r\n          style={{\r\n            background: '#f8fafc',\r\n            border: '1px solid #e2e8f0',\r\n            borderRadius: '6px',\r\n            padding: '8px 10px',\r\n            cursor: 'pointer',\r\n            fontSize: '14px',\r\n            color: '#334155'\r\n          }}\r\n        >\r\n          {'◀'}\r\n        </button>\r\n        \r\n        <div style={{ display: 'flex', gap: 12, alignItems: 'center' }}>\r\n          <select \r\n            value={viewMonth} \r\n            onChange={e => setViewMonth(Number(e.target.value))}\r\n            style={{\r\n              background: '#fff',\r\n              border: '1px solid #d1d5db',\r\n              borderRadius: '6px',\r\n              padding: '6px 8px',\r\n              fontSize: '14px',\r\n              color: '#374151',\r\n              cursor: 'pointer',\r\n              minWidth: '120px'\r\n            }}\r\n          >\r\n            {monthNames.map((mn, idx) => <option key={mn} value={idx}>{mn}</option>)}\r\n          </select>\r\n          \r\n          <select \r\n            value={viewYear} \r\n            onChange={e => setViewYear(Number(e.target.value))}\r\n            style={{\r\n              background: '#fff',\r\n              border: '1px solid #d1d5db',\r\n              borderRadius: '6px',\r\n              padding: '6px 8px',\r\n              fontSize: '14px',\r\n              color: '#374151',\r\n              cursor: 'pointer',\r\n              minWidth: '80px'\r\n            }}\r\n          >\r\n            {Array.from({ length: 50 }).map((_, i) => viewYear - 4 + i).map(y => (\r\n              <option key={y} value={y}>{y}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <button \r\n          className=\"calendar-nav-btn\"\r\n          onClick={() => { \r\n            const m = viewMonth + 1; \r\n            if (m > 11) { \r\n              setViewYear(v => v + 1); \r\n              setViewMonth(0); \r\n            } else {\r\n              setViewMonth(m); \r\n            }\r\n          }}\r\n          style={{\r\n            background: '#f8fafc',\r\n            border: '1px solid #e2e8f0',\r\n            borderRadius: '6px',\r\n            padding: '8px 10px',\r\n            cursor: 'pointer',\r\n            fontSize: '14px',\r\n            color: '#334155'\r\n          }}\r\n        >\r\n          {'▶'}\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(7,1fr)', \r\n        gap: 4, \r\n        marginTop: 8, \r\n        fontSize: 12, \r\n        fontWeight: 600, \r\n        textAlign: 'center',\r\n        color: '#6b7280'\r\n      }}>\r\n        {['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(d => <div key={d}>{d}</div>)}\r\n      </div>\r\n\r\n      <div style={{ marginTop: 8 }}>\r\n        {weeks.map((week, i) => (\r\n          <div key={i} style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(7,1fr)', \r\n            gap: 4, \r\n            marginBottom: 4 \r\n          }}>\r\n            {week.map(d => {\r\n              const inMonth = d.getMonth() === viewMonth;\r\n              const isSelected = selected && \r\n                d.getFullYear() === selected.getFullYear() && \r\n                d.getMonth() === selected.getMonth() && \r\n                d.getDate() === selected.getDate();\r\n              const isToday = new Date().toDateString() === d.toDateString();\r\n              \r\n              return (\r\n                <button \r\n                  key={d.toISOString()} \r\n                  onClick={() => inMonth && selectDate(d)} \r\n                  style={{ \r\n                    padding: 8, \r\n                    borderRadius: 6, \r\n                    border: isToday ? '2px solid #3b82f6' : '1px solid transparent',\r\n                    background: isSelected ? '#1976d2' : (inMonth ? '#f8fafc' : 'transparent'), \r\n                    color: isSelected ? '#fff' : (inMonth ? '#374151' : '#9ca3af'),\r\n                    cursor: inMonth ? 'pointer' : 'default',\r\n                    fontSize: '13px',\r\n                    fontWeight: isSelected || isToday ? '600' : '400',\r\n                    transition: 'all 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (inMonth && !isSelected) {\r\n                      e.target.style.background = '#e2e8f0';\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    if (inMonth && !isSelected) {\r\n                      e.target.style.background = '#f8fafc';\r\n                    }\r\n                  }}\r\n                >\r\n                  {d.getDate()}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatValue(key, value) {\r\n  if (value === null || value === undefined) return '—';\r\n  const n = Number(value);\r\n  if (!Number.isNaN(n)) {\r\n  if (/pH/i.test(key)) return n.toFixed(3);\r\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\r\n    return String(n);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nfunction cleanQualityString(quality) {\r\n  if (quality === null || quality === undefined) return quality;\r\n  let s = String(quality).trim();\r\n  if (!s) return s;\r\n  // normalize whitespace\r\n  s = s.replace(/\\s+/g, ' ');\r\n  // remove duplicated trailing punctuation and normalize\r\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\r\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\r\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\r\n  if (m && m[1]) return m[1].trim();\r\n  // fallback: if full-string repeated twice (older regex)\r\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\r\n  return m2 ? m2[1].trim() : s;\r\n}\r\n\r\nfunction canonicalizePredictionEntries(pred) {\r\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\r\n  if (!pred || typeof pred !== 'object') return [];\r\n  const map = new Map();\r\n  for (const [k, v] of Object.entries(pred)) {\r\n    const key = String(k).trim();\r\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\r\n    // map some common aliases\r\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\r\n    map.set(canonical, { key: key, value: v });\r\n  }\r\n  // return in insertion order but using original key casing for display\r\n  return Array.from(map.values()).map(x => [x.key, x.value]);\r\n}\r\n\r\n// small helper component to forward map click events into lat/lon objects\r\nfunction MapClickHandler({ onMapClick }) {\r\n  useMapEvents({ click: (e) => { onMapClick && onMapClick({ latitude: e.latlng.lat, longitude: e.latlng.lng }); } });\r\n  return null;\r\n}\r\n\r\n// basic parameter status mapping used by badges in the UI\r\nfunction getParameterStatus(param, value) {\r\n  if (value === null || value === undefined) return { cls: 'status-na', label: 'N/A' };\r\n  const key = String(param || '').toLowerCase();\r\n  const v = Number(value);\r\n  if (key.includes('water quality')) {\r\n    const s = String(value || '').toLowerCase();\r\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return { label: 'Good', cls: 'status-good' };\r\n    if (s.includes('moderate') || s.includes('borderline')) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: String(value), cls: 'status-poor' };\r\n  }\r\n  if (key.includes('pH')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 6 && v < 6.5) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('do')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 3) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('bod')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 3) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 6) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('fc mpn/100ml')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 500) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('tc mpn/100ml')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 1000) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 2000) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  return { label: String(value), cls: 'status-na' };\r\n}\r\n\r\nexport default function App() {\r\n  const [route, setRoute] = useState('home');\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectMode, setSelectMode] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]);\r\n  const [interpLoading, setInterpLoading] = useState(false);\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\r\n  });\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [startInput, setStartInput] = useState('');\r\n  const [endInput, setEndInput] = useState('');\r\n  const [startRiver, setStartRiver] = useState(null);\r\n  const [endRiver, setEndRiver] = useState(null);\r\n  const [startStationName, setStartStationName] = useState(null);\r\n  const [endStationName, setEndStationName] = useState(null);\r\n  // Add missing state for forceIndexMedians\r\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\r\n\r\n  const handleMapClick = useCallback((pt) => {\r\n    if (selectMode === 'start') setStartPoint(pt);\r\n    else if (selectMode === 'end') setEndPoint(pt);\r\n  }, [selectMode]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    // In interpolate route, if user is picking start or end, set them from known station\r\n    if (route === 'interpolate' && selectMode === 'start') {\r\n      const coord = loc.coordinate || loc;\r\n      setStartPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setStartRiver(loc.river || null);\r\n  setStartStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    if (route === 'interpolate' && selectMode === 'end') {\r\n      // guard: do not allow picking end on a different river than start\r\n      if (startRiver && loc.river && startRiver !== loc.river) {\r\n        alert('Please pick an end station on the same river as the start station.');\r\n        setSelectMode(null);\r\n        return;\r\n      }\r\n      const coord = loc.coordinate || loc;\r\n      setEndPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setEndRiver(loc.river || null);\r\n  setEndStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    // default behaviour: open details\r\n    setSelected(loc);\r\n    // attach available prediction\r\n    const pred = predictions[loc.id] || null;\r\n    setSelected(prev => ({...loc, prediction: pred}));\r\n  };\r\n\r\n  const performInterpolation = async () => {\r\n  if (!startPoint || !endPoint) return alert('Pick start and end');\r\n  setInterpLoading(true);\r\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\r\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\r\n    const nearestIndex = (pt) => {\r\n      let best = 0, bestD = Infinity;\r\n      for (let i=0;i<preSampledRiver.length;i++){\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat*dlat + dlng*dlng;\r\n        if (d2 < bestD){ bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPoint), ei = nearestIndex(endPoint);\r\n    const a = Math.min(si, ei), b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b+1);\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true, blend: 'river' };\r\n    // include explicit station-name override only when user forces index medians\r\n    if (forceIndexMedians && startStationName && endStationName) {\r\n      body.start_station_name = startStationName;\r\n      body.end_station_name = endStationName;\r\n    }\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) return alert('Server: '+jb.error);\r\n      const pts = jb.predictions || [];\r\n      setInterpPoints(pts);\r\n      // fit map to interpolated points if we have a map instance\r\n      try{\r\n        if (mapInst && pts && pts.length > 0){\r\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\r\n          mapInst.fitBounds(latlngs, { padding: [40,40] });\r\n        }\r\n      }catch(e){}\r\n    } catch (err) { alert('Request failed'); }\r\n    finally { setInterpLoading(false); }\r\n  };\r\n\r\n  function haversineKm(a, b) {\r\n    if (!a || !b) return 0;\r\n    const toRad = v => v * Math.PI / 180;\r\n    const R = 6371;\r\n    const dLat = toRad(b.latitude - a.latitude);\r\n    const dLon = toRad(b.longitude - a.longitude);\r\n    const lat1 = toRad(a.latitude);\r\n    const lat2 = toRad(b.latitude);\r\n    const sinDlat = Math.sin(dLat/2), sinDlon = Math.sin(dLon/2);\r\n    const aa = sinDlat*sinDlat + sinDlon*sinDlon * Math.cos(lat1)*Math.cos(lat2);\r\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1-aa));\r\n    return R * c;\r\n  }\r\n\r\n  const copyCoord = (pt) => {\r\n    if (!pt) return;\r\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\r\n    try { navigator.clipboard && navigator.clipboard.writeText(s); } catch(e) {}\r\n  };\r\n\r\n  const clearStart = () => { setStartPoint(null); setInterpPoints([]); };\r\n  const clearEnd = () => { setEndPoint(null); setInterpPoints([]); };\r\n\r\n  // Fetch predictions for all stations when app loads or selectedDate changes\r\n  useEffect(() => {\r\n    async function fetchPredictions() {\r\n      if (!selectedDate) return;\r\n      try {\r\n        const d = new Date(selectedDate);\r\n        const month = d.getMonth() + 1;\r\n        const year = d.getFullYear();\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${month}&year=${year}`);\r\n        const jb = await res.json();\r\n        if (jb && jb.predictions) {\r\n          // Map predictions to station id\r\n          const preds = {};\r\n          jb.predictions.forEach((pred) => {\r\n            // Find location by name\r\n            const loc = puneLocations.find(l => l.name === pred.location);\r\n            if (loc && loc.id) preds[loc.id] = pred;\r\n          });\r\n          setPredictions(preds);\r\n        }\r\n      } catch (err) {\r\n        // Optionally handle error\r\n      }\r\n    }\r\n    fetchPredictions();\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <main className=\"main\" style={{display:'flex', gap:20}}>\r\n        <div style={{flex:1}}>\r\n          {route === 'home' ? (\r\n            <div className=\"home-page\">\r\n              <div className=\"home-card\">\r\n                <div className=\"home-hero\">\r\n                  <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                  <div>\r\n                    <h1>RiverWatch — Pune Rivers</h1>\r\n                    <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                  </div>\r\n                </div>\r\n                <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.</p>\r\n                <div className=\"columns\">\r\n                  <div className=\"col rivers\">\r\n                    <h3>Rivers</h3>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula\">Mula</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mutha\">Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula-mutha\">Mula-Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula-Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col center\">\r\n                    <h3>About</h3>\r\n                    <p>This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.</p>\r\n                  </div>\r\n                  <div className=\"col params\">\r\n                    <h3>Parameters</h3>\r\n                    <ul className=\"param-names\">\r\n                      <li><strong>pH</strong> <div className=\"desc\">Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.</div></li>\r\n                      <li><strong>DO</strong> <div className=\"desc\">Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.</div></li>\r\n                      <li><strong>BOD</strong> <div className=\"desc\">Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.</div></li>\r\n                      <li><strong>FC/TC</strong> <div className=\"desc\">Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.</div></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"home-cta\">\r\n                  <button onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                  <button className=\"secondary\" onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-content\" style={{height: 'calc(100vh - 36px)'}}>\r\n              <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m=>setMapInst(m)} style={{height:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MapClickHandler onMapClick={handleMapClick} />\r\n                {puneLocations.map(loc => {\r\n                  const pred = predictions[loc.id] || null;\r\n                  const entries = pred ? canonicalizePredictionEntries(pred) : [];\r\n                  const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                  const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\r\n                  const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\r\n\r\n                  return (\r\n                    <CircleMarker key={loc.id} center={[loc.coordinate.latitude, loc.coordinate.longitude]} pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity:0.9 }} radius={8} eventHandlers={{ click: () => handleMarkerClick(loc) }}>\r\n                      <Popup>\r\n                        <div className=\"popup-card\" style={{minWidth:260}}>\r\n                          <div className=\"popup-header\">\r\n                            <div>\r\n                              <div className=\"popup-title\">{cleanQualityString(loc.name)}</div>\r\n                              <div className=\"popup-sub muted\" style={{display:'flex',gap:8,alignItems:'center',marginTop:8}}>\r\n                                <span className={`river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(loc.river)}</span>\r\n                                {overallValue ? <div className={`badge ${overallStatus ? overallStatus.cls : 'status-na'}`}>{overallValue}</div> : null}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {pred ? (\r\n                            <div className=\"popup-grid\">\r\n                              {entries\r\n                                .filter(([k]) => {\r\n                                  const key = String(k).toLowerCase();\r\n                                  return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                                })\r\n                                .map(([k,v]) => {\r\n                                  const value = formatValue(k, v);\r\n                                  const s = getParameterStatus(k, v);\r\n                                  // For pH, show value and status side by side\r\n                                  if (String(k).toLowerCase() === 'pH') {\r\n                                    return (\r\n                                      <div className=\"param-row\" key={k}>\r\n                                        <div className=\"param-name\">{k}</div>\r\n                                        <div className=\"param-value\">\r\n                                          <span className=\"val-text\">{value}</span>\r\n                                          <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                        </div>\r\n                                      </div>\r\n                                    );\r\n                                  }\r\n                                  // For other parameters, show value and status as before\r\n                                  return (\r\n                                    <div className=\"param-row\" key={k}>\r\n                                      <div className=\"param-name\">{k}</div>\r\n                                      <div className=\"param-value\">\r\n                                        <span className=\"val-text\">{value}</span>\r\n                                        <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          ) : <div style={{marginTop:8}}>Loading...</div>}\r\n                        </div>\r\n                      </Popup>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n                {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n                {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n                {route === 'interpolate' && interpPoints.length > 0 && (\r\n                  <>\r\n                    <Polyline positions={interpPoints.map(p => [p.latitude, p.longitude])} pathOptions={{color:'#0077b6', weight:3, opacity:0.7}} />\r\n                    {interpPoints.map((pt, i) => (\r\n                      <CircleMarker key={i} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{color:'#0077b6', fillColor:'#00b4d8', fillOpacity:0.9}}>\r\n                        <Popup>\r\n                          <div style={{minWidth:220}}>\r\n                            <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n                              <div><strong>Interpolated</strong></div>\r\n                              <div className={`badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`}>{cleanQualityString(pt['Water Quality'])}</div>\r\n                            </div>\r\n                            {/* Show pH, DO, BOD rows prominently */}\r\n                            {['pH', 'DO (mg/L)', 'BOD (mg/L)'].map((param, idx) => {\r\n                              const val = pt[param];\r\n                              const valStr = (val === null || val === undefined) ? '—' : Number(val).toFixed(3);\r\n                              const status = getParameterStatus(param, val);\r\n                              return (\r\n                                <div key={param} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:idx===0?8:4,borderTop:idx===0?'1px solid #edf2f7':'none',paddingTop:idx===0?8:0}}>\r\n                                  <div style={{fontSize:13,color:'#334155',fontWeight:700}}>{param}</div>\r\n                                  <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                    <div style={{fontSize:18,fontWeight:800,color:'#0b3b52'}}>{valStr}</div>\r\n                                    <div className={`badge ${status.cls}`}>{status.label}</div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                            {/* Optionally show FC/TC if present */}\r\n                            {['FC MPN/100ml', 'TC MPN/100ml'].map((param) => {\r\n                              if (pt[param] !== undefined && pt[param] !== null) {\r\n                                const val = pt[param];\r\n                                const valStr = (val === null || val === undefined) ? '—' : Number(val).toFixed(2);\r\n                                const status = getParameterStatus(param, val);\r\n                                return (\r\n                                  <div key={param} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:4}}>\r\n                                    <div style={{fontSize:13,color:'#334155',fontWeight:700}}>{param}</div>\r\n                                    <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                      <div style={{fontSize:15,fontWeight:700,color:'#0b3b52'}}>{valStr}</div>\r\n                                      <div className={`badge ${status.cls}`}>{status.label}</div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            })}\r\n                            {/* show t_frac if returned by server */}\r\n                            {pt && (pt.t_frac !== undefined && pt.t_frac !== null) ? (\r\n                              <div style={{marginTop:8,fontSize:12,color:'#64748b'}}>Blend t: <strong>{Number(pt.t_frac).toFixed(3)}</strong></div>\r\n                            ) : null}\r\n                          </div>\r\n                        </Popup>\r\n                      </CircleMarker>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </MapContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* right sidebar: show only on inner pages (not on Home) */}\r\n        {route !== 'home' && (\r\n          <aside className=\"detail-panel\" style={{width:360}}>\r\n          <div style={{display:'flex', justifyContent:'flex-end', gap:8, padding:8}}>\r\n            <button onClick={()=>setRoute('home')} className=\"small\">Home</button>\r\n            <button onClick={()=>setRoute('interpolate')} className=\"small primary\">Interpolate</button>\r\n          </div>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d=>setSelectedDate(d)} />\r\n          </div>\r\n\r\n          {route === 'interpolate' && (\r\n            <div style={{marginTop:12}}>\r\n              <div className=\"control-card\">\r\n                <div className=\"controls-row\" style={{marginBottom:8}}>\r\n                  <button onClick={()=>setSelectMode(selectMode==='start'?null:'start')} className={selectMode==='start'?'active small primary':''}>Pick Start</button>\r\n                  <button onClick={()=>setSelectMode(selectMode==='end'?null:'end')} className={selectMode==='end'?'active small primary':''}>Pick End</button>\r\n                  <button onClick={()=>{ setSelectMode(null); setInterpPoints([]); setStartPoint(null); setEndPoint(null); setStartInput(''); setEndInput(''); setStartRiver(null); setEndRiver(null); setStartStationName(null); setEndStationName(null); }} className=\"small\">Reset</button>\r\n                </div>\r\n                <div style={{marginBottom:8,color:'#0b3b52',fontSize:13}}><strong>Pick stations only</strong> — interpolation will use river-linear blending</div>\r\n\r\n                <div style={{display:'flex',gap:12,alignItems:'center',marginBottom:10}}>\r\n                  <label style={{margin:0,fontSize:13,color:'#475569'}}>Points k:</label>\r\n                  <input className=\"input-box\" type=\"number\" min={1} max={50} value={sampleCount} onChange={e=>setSampleCount(Number(e.target.value))} />\r\n                  <div style={{marginLeft:'auto'}}>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.min(50, (sampleCount||1)+1) ); }}>+1</button>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.max(1, (sampleCount||1)-1) ); }} style={{marginLeft:6}}>-1</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">Start</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={startInput || (startPoint?`${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}`:'')} onChange={e=>setStartInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(startPoint); }} disabled={!startPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setStartInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearStart(); setStartInput(''); setStartRiver(null); setStartStationName(null); }} disabled={!startPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">End</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={endInput || (endPoint?`${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}`:'')} onChange={e=>setEndInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(endPoint); }} disabled={!endPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setEndInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearEnd(); setEndInput(''); setEndRiver(null); setEndStationName(null); }} disabled={!endPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{marginTop:8,display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n                  <div className=\"muted\">Distance: <strong style={{color:'#233249'}}>{(startPoint && endPoint)?`${haversineKm(startPoint,endPoint).toFixed(2)} km`:'—'}</strong></div>\r\n                  <div style={{display:'flex',alignItems:'center',gap:8,marginLeft:12}}>\r\n                    <div style={{fontSize:12,color:'#475569'}}>{forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'}</div>\r\n                    <button className=\"btn-primary\" onClick={performInterpolation} disabled={!startPoint || !endPoint || interpLoading}>{interpLoading ? 'Interpolating…' : 'Interpolate'}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{marginTop:16}}>\r\n            <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n                {selected ? (\r\n              <div style={{marginTop:12}}>\r\n                <h3>{cleanQualityString(selected.name)}</h3>\r\n                <div className=\"muted\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n                  <div><span className={`river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(selected.river)}</span> • {selected.description}</div>\r\n                  {selected.prediction ? (() => {\r\n                    const entries = canonicalizePredictionEntries(selected.prediction);\r\n                    const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                    if (overall) {\r\n                      const s = getParameterStatus('Water Quality', overall[1]);\r\n                      return <div className={`badge ${s ? s.cls : 'status-na'}`}>{cleanQualityString(String(overall[1]))}</div>;\r\n                    }\r\n                    return null;\r\n                  })() : null}\r\n                </div>\r\n                <h4 style={{marginTop:8}}>Prediction</h4>\r\n                {selected.prediction ? (\r\n                  <div>\r\n                    {canonicalizePredictionEntries(selected.prediction)\r\n                      .filter(([k]) => {\r\n                        const key = String(k).toLowerCase();\r\n                        return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                      })\r\n                      .map(([k,v])=>{\r\n                        const value = formatValue(k, v);\r\n                        const s = getParameterStatus(k,v);\r\n                        return (\r\n                          <div key={k} className=\"inline-param-row\">\r\n                            <div className=\"label\">{k}</div>\r\n                            <div className=\"value\"><div className=\"val-text\">{value}</div><div className={`badge ${s.cls}`}>{s.label}</div></div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : <div>Loading...</div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"placeholder\" style={{marginTop:12}}>Select a location on the map to see details here.</div>\r\n            )}\r\n          </div>\r\n          </aside>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAC5G,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,SAASC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,QAAQ,gBAAgB;AAElE,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3G,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;;AAE1E;AACA,OAAOjB,CAAC,CAACkB,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CrB,CAAC,CAACkB,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gEAAgE;EAC/EC,OAAO,EAAE,6DAA6D;EACtEC,SAAS,EAAE;AACb,CAAC,CAAC;AACF,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,IAAI,GAAGH,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAII,IAAI,CAAC,CAAC;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG5C,KAAK,CAACE,QAAQ,CAACuC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,KAAK,CAACE,QAAQ,CAACuC,IAAI,CAACO,WAAW,CAAC,CAAC,CAAC;EAElEhD,KAAK,CAACC,SAAS,CAAC,MAAM;IACpB,MAAMgD,CAAC,GAAGX,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAII,IAAI,CAAC,CAAC;IAC5CE,YAAY,CAACK,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;IAC1BE,WAAW,CAACE,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,MAAMY,YAAY,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC;EAChD,MAAMC,WAAW,GAAGA,CAACF,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;EAE7D,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,QAAQ,GAAGN,YAAY,CAACJ,QAAQ,EAAEH,SAAS,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAMC,OAAO,GAAG,CAACF,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACpC,MAAMG,KAAK,GAAGD,OAAO,GAAGL,WAAW,CAACP,QAAQ,EAAEH,SAAS,CAAC;EACxD,MAAMiB,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACH,KAAK,GAAG,CAAC,CAAC;EAEjC,IAAII,GAAG,GAAG,CAAC,GAAGL,OAAO;EACrB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,EAAEI,CAAC,EAAE,EAAE;IAC7B,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAEH,GAAG,EAAE,EAAE;MACjC,MAAMI,QAAQ,GAAG,IAAIzB,IAAI,CAACI,QAAQ,EAAEH,SAAS,EAAEoB,GAAG,CAAC;MACnDE,IAAI,CAACG,IAAI,CAACD,QAAQ,CAAC;IACrB;IACAZ,KAAK,CAACa,IAAI,CAACH,IAAI,CAAC;EAClB;EAEA,MAAMI,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIhC,IAAI,CAAC,IAAI,EAAEgC,CAAC,CAAC,CAACC,cAAc,CAACC,SAAS,EAAE;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC,CAAC;EAEvH,MAAMC,UAAU,GAAI7B,CAAC,IAAK;IACxB,MAAM8B,GAAG,GAAG,GAAG9B,CAAC,CAACD,WAAW,CAAC,CAAC,IAAIgC,MAAM,CAAC/B,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACoC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAAC/B,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC2B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACrH1C,QAAQ,IAAIA,QAAQ,CAACwC,GAAG,CAAC;EAC3B,CAAC;EAED,MAAMG,QAAQ,GAAG5C,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAI;EAE7C,oBACEhB,OAAA;IAAK6D,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE,MAAM;MAAEC,MAAM,EAAE,4BAA4B;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACpInE,OAAA;MAAK8D,KAAK,EAAE;QACVM,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,eAAe;QAC/BC,UAAU,EAAE,QAAQ;QACpBC,YAAY,EAAE,EAAE;QAChBR,OAAO,EAAE;MACX,CAAE;MAAAI,QAAA,gBACAnE,OAAA;QACE6D,SAAS,EAAC,kBAAkB;QAC5BW,OAAO,EAAEA,CAAA,KAAM;UACb,MAAM1C,CAAC,GAAGT,SAAS,GAAG,CAAC;UACvB,IAAIS,CAAC,GAAG,CAAC,EAAE;YACTL,WAAW,CAACgD,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;YACvBnD,YAAY,CAAC,EAAE,CAAC;UAClB,CAAC,MAAM;YACLA,YAAY,CAACQ,CAAC,CAAC;UACjB;QACF,CAAE;QACFgC,KAAK,EAAE;UACLE,UAAU,EAAE,SAAS;UACrBC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBH,OAAO,EAAE,UAAU;UACnBW,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE;QACT,CAAE;QAAAT,QAAA,EAED;MAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEThF,OAAA;QAAK8D,KAAK,EAAE;UAAEM,OAAO,EAAE,MAAM;UAAEa,GAAG,EAAE,EAAE;UAAEX,UAAU,EAAE;QAAS,CAAE;QAAAH,QAAA,gBAC7DnE,OAAA;UACEkF,KAAK,EAAE7D,SAAU;UACjBJ,QAAQ,EAAEkE,CAAC,IAAI7D,YAAY,CAAC8D,MAAM,CAACD,CAAC,CAACE,MAAM,CAACH,KAAK,CAAC,CAAE;UACpDpB,KAAK,EAAE;YACLE,UAAU,EAAE,MAAM;YAClBC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBH,OAAO,EAAE,SAAS;YAClBY,QAAQ,EAAE,MAAM;YAChBC,KAAK,EAAE,SAAS;YAChBF,MAAM,EAAE,SAAS;YACjBY,QAAQ,EAAE;UACZ,CAAE;UAAAnB,QAAA,EAEDpB,UAAU,CAACwC,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,kBAAKzF,OAAA;YAAiBkF,KAAK,EAAEO,GAAI;YAAAtB,QAAA,EAAEqB;UAAE,GAAnBA,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0B,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eAEThF,OAAA;UACEkF,KAAK,EAAE1D,QAAS;UAChBP,QAAQ,EAAEkE,CAAC,IAAI1D,WAAW,CAAC2D,MAAM,CAACD,CAAC,CAACE,MAAM,CAACH,KAAK,CAAC,CAAE;UACnDpB,KAAK,EAAE;YACLE,UAAU,EAAE,MAAM;YAClBC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBH,OAAO,EAAE,SAAS;YAClBY,QAAQ,EAAE,MAAM;YAChBC,KAAK,EAAE,SAAS;YAChBF,MAAM,EAAE,SAAS;YACjBY,QAAQ,EAAE;UACZ,CAAE;UAAAnB,QAAA,EAEDnB,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAE;UAAG,CAAC,CAAC,CAACqC,GAAG,CAAC,CAACpC,CAAC,EAAEC,CAAC,KAAK5B,QAAQ,GAAG,CAAC,GAAG4B,CAAC,CAAC,CAACmC,GAAG,CAAC1D,CAAC,iBAC/D7B,OAAA;YAAgBkF,KAAK,EAAErD,CAAE;YAAAsC,QAAA,EAAEtC;UAAC,GAAfA,CAAC;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CACtC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENhF,OAAA;QACE6D,SAAS,EAAC,kBAAkB;QAC5BW,OAAO,EAAEA,CAAA,KAAM;UACb,MAAM1C,CAAC,GAAGT,SAAS,GAAG,CAAC;UACvB,IAAIS,CAAC,GAAG,EAAE,EAAE;YACVL,WAAW,CAACgD,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;YACvBnD,YAAY,CAAC,CAAC,CAAC;UACjB,CAAC,MAAM;YACLA,YAAY,CAACQ,CAAC,CAAC;UACjB;QACF,CAAE;QACFgC,KAAK,EAAE;UACLE,UAAU,EAAE,SAAS;UACrBC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBH,OAAO,EAAE,UAAU;UACnBW,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE;QACT,CAAE;QAAAT,QAAA,EAED;MAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENhF,OAAA;MAAK8D,KAAK,EAAE;QACVM,OAAO,EAAE,MAAM;QACfsB,mBAAmB,EAAE,eAAe;QACpCT,GAAG,EAAE,CAAC;QACNU,SAAS,EAAE,CAAC;QACZhB,QAAQ,EAAE,EAAE;QACZiB,UAAU,EAAE,GAAG;QACfC,SAAS,EAAE,QAAQ;QACnBjB,KAAK,EAAE;MACT,CAAE;MAAAT,QAAA,EACC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACoB,GAAG,CAAC5D,CAAC,iBAAI3B,OAAA;QAAAmE,QAAA,EAAcxC;MAAC,GAALA,CAAC;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eAENhF,OAAA;MAAK8D,KAAK,EAAE;QAAE6B,SAAS,EAAE;MAAE,CAAE;MAAAxB,QAAA,EAC1BlC,KAAK,CAACsD,GAAG,CAAC,CAAC5C,IAAI,EAAES,CAAC,kBACjBpD,OAAA;QAAa8D,KAAK,EAAE;UAClBM,OAAO,EAAE,MAAM;UACfsB,mBAAmB,EAAE,eAAe;UACpCT,GAAG,EAAE,CAAC;UACNV,YAAY,EAAE;QAChB,CAAE;QAAAJ,QAAA,EACCxB,IAAI,CAAC4C,GAAG,CAAC5D,CAAC,IAAI;UACb,MAAMmE,OAAO,GAAGnE,CAAC,CAACJ,QAAQ,CAAC,CAAC,KAAKF,SAAS;UAC1C,MAAM0E,UAAU,GAAGnC,QAAQ,IACzBjC,CAAC,CAACD,WAAW,CAAC,CAAC,KAAKkC,QAAQ,CAAClC,WAAW,CAAC,CAAC,IAC1CC,CAAC,CAACJ,QAAQ,CAAC,CAAC,KAAKqC,QAAQ,CAACrC,QAAQ,CAAC,CAAC,IACpCI,CAAC,CAACK,OAAO,CAAC,CAAC,KAAK4B,QAAQ,CAAC5B,OAAO,CAAC,CAAC;UACpC,MAAMgE,OAAO,GAAG,IAAI5E,IAAI,CAAC,CAAC,CAAC6E,YAAY,CAAC,CAAC,KAAKtE,CAAC,CAACsE,YAAY,CAAC,CAAC;UAE9D,oBACEjG,OAAA;YAEEwE,OAAO,EAAEA,CAAA,KAAMsB,OAAO,IAAItC,UAAU,CAAC7B,CAAC,CAAE;YACxCmC,KAAK,EAAE;cACLC,OAAO,EAAE,CAAC;cACVG,YAAY,EAAE,CAAC;cACfD,MAAM,EAAE+B,OAAO,GAAG,mBAAmB,GAAG,uBAAuB;cAC/DhC,UAAU,EAAE+B,UAAU,GAAG,SAAS,GAAID,OAAO,GAAG,SAAS,GAAG,aAAc;cAC1ElB,KAAK,EAAEmB,UAAU,GAAG,MAAM,GAAID,OAAO,GAAG,SAAS,GAAG,SAAU;cAC9DpB,MAAM,EAAEoB,OAAO,GAAG,SAAS,GAAG,SAAS;cACvCnB,QAAQ,EAAE,MAAM;cAChBiB,UAAU,EAAEG,UAAU,IAAIC,OAAO,GAAG,KAAK,GAAG,KAAK;cACjDE,UAAU,EAAE;YACd,CAAE;YACFC,YAAY,EAAGhB,CAAC,IAAK;cACnB,IAAIW,OAAO,IAAI,CAACC,UAAU,EAAE;gBAC1BZ,CAAC,CAACE,MAAM,CAACvB,KAAK,CAACE,UAAU,GAAG,SAAS;cACvC;YACF,CAAE;YACFoC,YAAY,EAAGjB,CAAC,IAAK;cACnB,IAAIW,OAAO,IAAI,CAACC,UAAU,EAAE;gBAC1BZ,CAAC,CAACE,MAAM,CAACvB,KAAK,CAACE,UAAU,GAAG,SAAS;cACvC;YACF,CAAE;YAAAG,QAAA,EAEDxC,CAAC,CAACK,OAAO,CAAC;UAAC,GAxBPL,CAAC,CAAC0E,WAAW,CAAC,CAAC;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAyBd,CAAC;QAEb,CAAC;MAAC,GA3CM5B,CAAC;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4CN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9D,EAAA,CAvMQH,QAAQ;AAAAuF,EAAA,GAARvF,QAAQ;AAyMjB,SAASwF,WAAWA,CAACC,GAAG,EAAEtB,KAAK,EAAE;EAC/B,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK5B,SAAS,EAAE,OAAO,GAAG;EACrD,MAAMmD,CAAC,GAAGrB,MAAM,CAACF,KAAK,CAAC;EACvB,IAAI,CAACE,MAAM,CAACsB,KAAK,CAACD,CAAC,CAAC,EAAE;IACtB,IAAI,KAAK,CAACE,IAAI,CAACH,GAAG,CAAC,EAAE,OAAOC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;IACtC,IAAI,mBAAmB,CAACD,IAAI,CAACH,GAAG,CAAC,EAAE,OAAOC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;IACtD,OAAOlD,MAAM,CAAC+C,CAAC,CAAC;EAClB;EACA,OAAO/C,MAAM,CAACwB,KAAK,CAAC;AACtB;AAEA,SAAS2B,kBAAkBA,CAACC,OAAO,EAAE;EACnC,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKxD,SAAS,EAAE,OAAOwD,OAAO;EAC7D,IAAIC,CAAC,GAAGrD,MAAM,CAACoD,OAAO,CAAC,CAACE,IAAI,CAAC,CAAC;EAC9B,IAAI,CAACD,CAAC,EAAE,OAAOA,CAAC;EAChB;EACAA,CAAC,GAAGA,CAAC,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAC1B;EACAF,CAAC,GAAGA,CAAC,CAACE,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACD,IAAI,CAAC,CAAC;EAC3C;EACA,MAAMlF,CAAC,GAAGiF,CAAC,CAACG,KAAK,CAAC,yBAAyB,CAAC;EAC5C,IAAIpF,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,EAAE,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACkF,IAAI,CAAC,CAAC;EACjC;EACA,MAAMG,EAAE,GAAGJ,CAAC,CAACG,KAAK,CAAC,cAAc,CAAC;EAClC,OAAOC,EAAE,GAAGA,EAAE,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,GAAGD,CAAC;AAC9B;AAEA,SAASK,6BAA6BA,CAACC,IAAI,EAAE;EAC3C;EACA,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;EAChD,MAAM9B,GAAG,GAAG,IAAI+B,GAAG,CAAC,CAAC;EACrB,KAAK,MAAM,CAACC,CAAC,EAAE9C,CAAC,CAAC,IAAI+C,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;IACzC,MAAMb,GAAG,GAAG9C,MAAM,CAAC6D,CAAC,CAAC,CAACP,IAAI,CAAC,CAAC;IAC5B,MAAMU,IAAI,GAAGlB,GAAG,CAACmB,WAAW,CAAC,CAAC,CAACV,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACnD;IACA,MAAMW,SAAS,GAAGF,IAAI,KAAK,eAAe,GAAG,eAAe,GAAGA,IAAI;IACnEnC,GAAG,CAACsC,GAAG,CAACD,SAAS,EAAE;MAAEpB,GAAG,EAAEA,GAAG;MAAEtB,KAAK,EAAET;IAAE,CAAC,CAAC;EAC5C;EACA;EACA,OAAOzB,KAAK,CAACC,IAAI,CAACsC,GAAG,CAACuC,MAAM,CAAC,CAAC,CAAC,CAACvC,GAAG,CAACwC,CAAC,IAAI,CAACA,CAAC,CAACvB,GAAG,EAAEuB,CAAC,CAAC7C,KAAK,CAAC,CAAC;AAC5D;;AAEA;AACA,SAAS8C,eAAeA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,GAAA;EACvC9I,YAAY,CAAC;IAAE+I,KAAK,EAAGhD,CAAC,IAAK;MAAE8C,UAAU,IAAIA,UAAU,CAAC;QAAEG,QAAQ,EAAEjD,CAAC,CAACkD,MAAM,CAACC,GAAG;QAAEC,SAAS,EAAEpD,CAAC,CAACkD,MAAM,CAACG;MAAI,CAAC,CAAC;IAAE;EAAE,CAAC,CAAC;EAClH,OAAO,IAAI;AACb;;AAEA;AAAAN,GAAA,CALSF,eAAe;EAAA,QACtB5I,YAAY;AAAA;AAAAqJ,GAAA,GADLT,eAAe;AAMxB,SAASU,kBAAkBA,CAACC,KAAK,EAAEzD,KAAK,EAAE;EACxC,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK5B,SAAS,EAAE,OAAO;IAAEsF,GAAG,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAM,CAAC;EACpF,MAAMrC,GAAG,GAAG9C,MAAM,CAACiF,KAAK,IAAI,EAAE,CAAC,CAAChB,WAAW,CAAC,CAAC;EAC7C,MAAMlD,CAAC,GAAGW,MAAM,CAACF,KAAK,CAAC;EACvB,IAAIsB,GAAG,CAACsC,QAAQ,CAAC,eAAe,CAAC,EAAE;IACjC,MAAM/B,CAAC,GAAGrD,MAAM,CAACwB,KAAK,IAAI,EAAE,CAAC,CAACyC,WAAW,CAAC,CAAC;IAC3C,IAAIZ,CAAC,CAAC+B,QAAQ,CAAC,MAAM,CAAC,IAAI/B,CAAC,CAAC+B,QAAQ,CAAC,IAAI,CAAC,IAAI/B,CAAC,CAAC+B,QAAQ,CAAC,YAAY,CAAC,EAAE,OAAO;MAAED,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACpH,IAAI7B,CAAC,CAAC+B,QAAQ,CAAC,UAAU,CAAC,IAAI/B,CAAC,CAAC+B,QAAQ,CAAC,YAAY,CAAC,EAAE,OAAO;MAAED,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAC5G,OAAO;MAAEC,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;MAAE0D,GAAG,EAAE;IAAc,CAAC;EACrD;EACA,IAAIpC,GAAG,CAACsC,QAAQ,CAAC,IAAI,CAAC,EAAE;IACtB,IAAIpC,KAAK,CAACjC,CAAC,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;MAAE0D,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAInE,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAAE,OAAO;MAAEoE,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACtE,IAAInE,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAG,GAAG,EAAE,OAAO;MAAEoE,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAC3E,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAIpC,GAAG,CAACsC,QAAQ,CAAC,IAAI,CAAC,EAAE;IACtB,IAAIpC,KAAK,CAACjC,CAAC,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;MAAE0D,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAInE,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACxD,IAAInE,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAChE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAIpC,GAAG,CAACsC,QAAQ,CAAC,KAAK,CAAC,EAAE;IACvB,IAAIpC,KAAK,CAACjC,CAAC,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;MAAE0D,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAInE,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IACxD,IAAInE,CAAC,IAAI,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IAChE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAIpC,GAAG,CAACsC,QAAQ,CAAC,cAAc,CAAC,EAAE;IAChC,IAAIpC,KAAK,CAACjC,CAAC,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;MAAE0D,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAInE,CAAC,IAAI,GAAG,EAAE,OAAO;MAAEoE,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IAC1D,IAAInE,CAAC,IAAI,IAAI,EAAE,OAAO;MAAEoE,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IACnE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,IAAIpC,GAAG,CAACsC,QAAQ,CAAC,cAAc,CAAC,EAAE;IAChC,IAAIpC,KAAK,CAACjC,CAAC,CAAC,EAAE,OAAO;MAAEoE,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;MAAE0D,GAAG,EAAE;IAAY,CAAC;IAC/D,IAAInE,CAAC,IAAI,IAAI,EAAE,OAAO;MAAEoE,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;IAC3D,IAAInE,CAAC,IAAI,IAAI,EAAE,OAAO;MAAEoE,KAAK,EAAE,UAAU;MAAED,GAAG,EAAE;IAAkB,CAAC;IACnE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAED,GAAG,EAAE;IAAc,CAAC;EAC9C;EACA,OAAO;IAAEC,KAAK,EAAEnF,MAAM,CAACwB,KAAK,CAAC;IAAE0D,GAAG,EAAE;EAAY,CAAC;AACnD;AAEA,eAAe,SAASG,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtK,QAAQ,CAAC,MAAM,CAAC;EAC1C,MAAM,CAACuK,OAAO,EAAEC,UAAU,CAAC,GAAGxK,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyK,UAAU,EAAEC,aAAa,CAAC,GAAG1K,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2K,UAAU,EAAEC,aAAa,CAAC,GAAG5K,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC6K,QAAQ,EAAEC,WAAW,CAAC,GAAG9K,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC+K,YAAY,EAAEC,eAAe,CAAC,GAAGhL,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiL,aAAa,EAAEC,gBAAgB,CAAC,GAAGlL,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmL,WAAW,EAAEC,cAAc,CAAC,GAAGpL,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqL,YAAY,EAAEC,eAAe,CAAC,GAAGtL,QAAQ,CAAC,MAAM;IACrD,MAAM+C,CAAC,GAAG,IAAIP,IAAI,CAAC,CAAC;IACpB,OAAO,GAAGO,CAAC,CAACD,WAAW,CAAC,CAAC,IAAIgC,MAAM,CAAC/B,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACoC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAAC/B,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC2B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAClH,CAAC,CAAC;EACF,MAAM,CAACwG,WAAW,EAAEC,cAAc,CAAC,GAAGxL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACgF,QAAQ,EAAEyG,WAAW,CAAC,GAAGzL,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC0L,UAAU,EAAEC,aAAa,CAAC,GAAG3L,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4L,QAAQ,EAAEC,WAAW,CAAC,GAAG7L,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8L,UAAU,EAAEC,aAAa,CAAC,GAAG/L,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgM,QAAQ,EAAEC,WAAW,CAAC,GAAGjM,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnM,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACoM,cAAc,EAAEC,iBAAiB,CAAC,GAAGrM,QAAQ,CAAC,IAAI,CAAC;EAC1D;EACA,MAAM,CAACsM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvM,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMwM,cAAc,GAAGvM,WAAW,CAAEwM,EAAE,IAAK;IACzC,IAAIhC,UAAU,KAAK,OAAO,EAAEG,aAAa,CAAC6B,EAAE,CAAC,CAAC,KACzC,IAAIhC,UAAU,KAAK,KAAK,EAAEK,WAAW,CAAC2B,EAAE,CAAC;EAChD,CAAC,EAAE,CAAChC,UAAU,CAAC,CAAC;EAEhB,MAAMiC,iBAAiB,GAAIC,GAAG,IAAK;IACjC;IACA,IAAItC,KAAK,KAAK,aAAa,IAAII,UAAU,KAAK,OAAO,EAAE;MACrD,MAAMmC,KAAK,GAAGD,GAAG,CAACE,UAAU,IAAIF,GAAG;MACnC/B,aAAa,CAAC;QAAEpB,QAAQ,EAAEoD,KAAK,CAACpD,QAAQ;QAAEG,SAAS,EAAEiD,KAAK,CAACjD;MAAU,CAAC,CAAC;MACvEgC,aAAa,CAAC,GAAGiB,KAAK,CAACpD,QAAQ,CAACxB,OAAO,CAAC,CAAC,CAAC,KAAK4E,KAAK,CAACjD,SAAS,CAAC3B,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MAC5E+D,aAAa,CAACY,GAAG,CAACG,KAAK,IAAI,IAAI,CAAC;MACpCX,mBAAmB,CAACQ,GAAG,CAACI,IAAI,IAAI,IAAI,CAAC;MACjCrC,aAAa,CAAC,IAAI,CAAC;MACnBM,eAAe,CAAC,EAAE,CAAC;MACnB;IACF;IACA,IAAIX,KAAK,KAAK,aAAa,IAAII,UAAU,KAAK,KAAK,EAAE;MACnD;MACA,IAAIqB,UAAU,IAAIa,GAAG,CAACG,KAAK,IAAIhB,UAAU,KAAKa,GAAG,CAACG,KAAK,EAAE;QACvDE,KAAK,CAAC,oEAAoE,CAAC;QAC3EtC,aAAa,CAAC,IAAI,CAAC;QACnB;MACF;MACA,MAAMkC,KAAK,GAAGD,GAAG,CAACE,UAAU,IAAIF,GAAG;MACnC7B,WAAW,CAAC;QAAEtB,QAAQ,EAAEoD,KAAK,CAACpD,QAAQ;QAAEG,SAAS,EAAEiD,KAAK,CAACjD;MAAU,CAAC,CAAC;MACrEkC,WAAW,CAAC,GAAGe,KAAK,CAACpD,QAAQ,CAACxB,OAAO,CAAC,CAAC,CAAC,KAAK4E,KAAK,CAACjD,SAAS,CAAC3B,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MAC1EiE,WAAW,CAACU,GAAG,CAACG,KAAK,IAAI,IAAI,CAAC;MAClCT,iBAAiB,CAACM,GAAG,CAACI,IAAI,IAAI,IAAI,CAAC;MAC/BrC,aAAa,CAAC,IAAI,CAAC;MACnBM,eAAe,CAAC,EAAE,CAAC;MACnB;IACF;IACA;IACAS,WAAW,CAACkB,GAAG,CAAC;IAChB;IACA,MAAMlE,IAAI,GAAG8C,WAAW,CAACoB,GAAG,CAACM,EAAE,CAAC,IAAI,IAAI;IACxCxB,WAAW,CAACyB,IAAI,KAAK;MAAC,GAAGP,GAAG;MAAEQ,UAAU,EAAE1E;IAAI,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAM2E,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAACzC,UAAU,IAAI,CAACE,QAAQ,EAAE,OAAOmC,KAAK,CAAC,oBAAoB,CAAC;IAChE9B,gBAAgB,CAAC,IAAI,CAAC;IACpB;IACA;IACA,MAAMmC,YAAY,GAAIZ,EAAE,IAAK;MAC3B,IAAIa,IAAI,GAAG,CAAC;QAAEC,KAAK,GAAGC,QAAQ;MAC9B,KAAK,IAAIhJ,CAAC,GAAC,CAAC,EAACA,CAAC,GAACvD,eAAe,CAACqD,MAAM,EAACE,CAAC,EAAE,EAAC;QACxC,MAAMiJ,IAAI,GAAGxM,eAAe,CAACuD,CAAC,CAAC,CAACgF,QAAQ,GAAGiD,EAAE,CAACjD,QAAQ;QACtD,MAAMkE,IAAI,GAAGzM,eAAe,CAACuD,CAAC,CAAC,CAACmF,SAAS,GAAG8C,EAAE,CAAC9C,SAAS;QACxD,MAAMgE,EAAE,GAAGF,IAAI,GAACA,IAAI,GAAGC,IAAI,GAACA,IAAI;QAChC,IAAIC,EAAE,GAAGJ,KAAK,EAAC;UAAEA,KAAK,GAAGI,EAAE;UAAEL,IAAI,GAAG9I,CAAC;QAAE;MACzC;MACA,OAAO8I,IAAI;IACb,CAAC;IACD,MAAMM,EAAE,GAAGP,YAAY,CAAC1C,UAAU,CAAC;MAAEkD,EAAE,GAAGR,YAAY,CAACxC,QAAQ,CAAC;IAChE,MAAMiD,CAAC,GAAGnK,IAAI,CAACoK,GAAG,CAACH,EAAE,EAAEC,EAAE,CAAC;MAAEG,CAAC,GAAGrK,IAAI,CAACsK,GAAG,CAACL,EAAE,EAAEC,EAAE,CAAC;IAChD,MAAMK,GAAG,GAAGjN,eAAe,CAACkN,KAAK,CAACL,CAAC,EAAEE,CAAC,GAAC,CAAC,CAAC;IACzC,MAAMjL,CAAC,GAAG,IAAIP,IAAI,CAAC6I,YAAY,CAAC;IAChC,MAAM+C,IAAI,GAAG;MAAEC,SAAS,EAAEH,GAAG;MAAEI,MAAM,EAAEnD,WAAW;MAAExG,KAAK,EAAE5B,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAC,CAAC;MAAE4L,IAAI,EAAExL,CAAC,CAACD,WAAW,CAAC,CAAC;MAAE0L,eAAe,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACzI;IACA,IAAInC,iBAAiB,IAAIJ,gBAAgB,IAAIE,cAAc,EAAE;MAC3DgC,IAAI,CAACM,kBAAkB,GAAGxC,gBAAgB;MAC1CkC,IAAI,CAACO,gBAAgB,GAAGvC,cAAc;IACxC;IACA,IAAI;MACF,MAAMwC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGtN,QAAQ,sBAAsB,EAAE;QAAEuN,MAAM,EAAC,MAAM;QAAEC,OAAO,EAAC;UAAC,cAAc,EAAC;QAAkB,CAAC;QAAEX,IAAI,EAAEY,IAAI,CAACC,SAAS,CAACb,IAAI;MAAE,CAAC,CAAC;MACtJ,MAAMc,EAAE,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MAC3B,IAAID,EAAE,CAACE,KAAK,EAAE,OAAOpC,KAAK,CAAC,UAAU,GAACkC,EAAE,CAACE,KAAK,CAAC;MAC/C,MAAMC,GAAG,GAAGH,EAAE,CAAC3D,WAAW,IAAI,EAAE;MAChCP,eAAe,CAACqE,GAAG,CAAC;MACpB;MACA,IAAG;QACD,IAAI9E,OAAO,IAAI8E,GAAG,IAAIA,GAAG,CAAC/K,MAAM,GAAG,CAAC,EAAC;UACnC,MAAMgL,OAAO,GAAGD,GAAG,CAAC1I,GAAG,CAAC4I,CAAC,IAAI,CAACA,CAAC,CAAC/F,QAAQ,EAAE+F,CAAC,CAAC5F,SAAS,CAAC,CAAC;UACvDY,OAAO,CAACiF,SAAS,CAACF,OAAO,EAAE;YAAEnK,OAAO,EAAE,CAAC,EAAE,EAAC,EAAE;UAAE,CAAC,CAAC;QAClD;MACF,CAAC,QAAMoB,CAAC,EAAC,CAAC;IACZ,CAAC,CAAC,OAAOkJ,GAAG,EAAE;MAAEzC,KAAK,CAAC,gBAAgB,CAAC;IAAE,CAAC,SAClC;MAAE9B,gBAAgB,CAAC,KAAK,CAAC;IAAE;EACrC,CAAC;EAED,SAASwE,WAAWA,CAAC5B,CAAC,EAAEE,CAAC,EAAE;IACzB,IAAI,CAACF,CAAC,IAAI,CAACE,CAAC,EAAE,OAAO,CAAC;IACtB,MAAM2B,KAAK,GAAG9J,CAAC,IAAIA,CAAC,GAAGlC,IAAI,CAACiM,EAAE,GAAG,GAAG;IACpC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,IAAI,GAAGH,KAAK,CAAC3B,CAAC,CAACxE,QAAQ,GAAGsE,CAAC,CAACtE,QAAQ,CAAC;IAC3C,MAAMuG,IAAI,GAAGJ,KAAK,CAAC3B,CAAC,CAACrE,SAAS,GAAGmE,CAAC,CAACnE,SAAS,CAAC;IAC7C,MAAMqG,IAAI,GAAGL,KAAK,CAAC7B,CAAC,CAACtE,QAAQ,CAAC;IAC9B,MAAMyG,IAAI,GAAGN,KAAK,CAAC3B,CAAC,CAACxE,QAAQ,CAAC;IAC9B,MAAM0G,OAAO,GAAGvM,IAAI,CAACwM,GAAG,CAACL,IAAI,GAAC,CAAC,CAAC;MAAEM,OAAO,GAAGzM,IAAI,CAACwM,GAAG,CAACJ,IAAI,GAAC,CAAC,CAAC;IAC5D,MAAMM,EAAE,GAAGH,OAAO,GAACA,OAAO,GAAGE,OAAO,GAACA,OAAO,GAAGzM,IAAI,CAAC2M,GAAG,CAACN,IAAI,CAAC,GAACrM,IAAI,CAAC2M,GAAG,CAACL,IAAI,CAAC;IAC5E,MAAMjM,CAAC,GAAG,CAAC,GAAGL,IAAI,CAAC4M,KAAK,CAAC5M,IAAI,CAAC6M,IAAI,CAACH,EAAE,CAAC,EAAE1M,IAAI,CAAC6M,IAAI,CAAC,CAAC,GAACH,EAAE,CAAC,CAAC;IACxD,OAAOR,CAAC,GAAG7L,CAAC;EACd;EAEA,MAAMyM,SAAS,GAAIhE,EAAE,IAAK;IACxB,IAAI,CAACA,EAAE,EAAE;IACT,MAAMtE,CAAC,GAAG,GAAGsE,EAAE,CAACjD,QAAQ,CAACxB,OAAO,CAAC,CAAC,CAAC,KAAKyE,EAAE,CAAC9C,SAAS,CAAC3B,OAAO,CAAC,CAAC,CAAC,EAAE;IACjE,IAAI;MAAE0I,SAAS,CAACC,SAAS,IAAID,SAAS,CAACC,SAAS,CAACC,SAAS,CAACzI,CAAC,CAAC;IAAE,CAAC,CAAC,OAAM5B,CAAC,EAAE,CAAC;EAC7E,CAAC;EAED,MAAMsK,UAAU,GAAGA,CAAA,KAAM;IAAEjG,aAAa,CAAC,IAAI,CAAC;IAAEI,eAAe,CAAC,EAAE,CAAC;EAAE,CAAC;EACtE,MAAM8F,QAAQ,GAAGA,CAAA,KAAM;IAAEhG,WAAW,CAAC,IAAI,CAAC;IAAEE,eAAe,CAAC,EAAE,CAAC;EAAE,CAAC;;EAElE;EACAjL,SAAS,CAAC,MAAM;IACd,eAAegR,gBAAgBA,CAAA,EAAG;MAChC,IAAI,CAAC1F,YAAY,EAAE;MACnB,IAAI;QACF,MAAMtI,CAAC,GAAG,IAAIP,IAAI,CAAC6I,YAAY,CAAC;QAChC,MAAM1G,KAAK,GAAG5B,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAAC;QAC9B,MAAM4L,IAAI,GAAGxL,CAAC,CAACD,WAAW,CAAC,CAAC;QAC5B,MAAM8L,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGtN,QAAQ,sBAAsBoD,KAAK,SAAS4J,IAAI,EAAE,CAAC;QAC9E,MAAMW,EAAE,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;QAC3B,IAAID,EAAE,IAAIA,EAAE,CAAC3D,WAAW,EAAE;UACxB;UACA,MAAMyF,KAAK,GAAG,CAAC,CAAC;UAChB9B,EAAE,CAAC3D,WAAW,CAAC0F,OAAO,CAAExI,IAAI,IAAK;YAC/B;YACA,MAAMkE,GAAG,GAAG7L,aAAa,CAACoQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpE,IAAI,KAAKtE,IAAI,CAAC2I,QAAQ,CAAC;YAC7D,IAAIzE,GAAG,IAAIA,GAAG,CAACM,EAAE,EAAE+D,KAAK,CAACrE,GAAG,CAACM,EAAE,CAAC,GAAGxE,IAAI;UACzC,CAAC,CAAC;UACF+C,cAAc,CAACwF,KAAK,CAAC;QACvB;MACF,CAAC,CAAC,OAAOvB,GAAG,EAAE;QACZ;MAAA;IAEJ;IACAsB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAAC1F,YAAY,CAAC,CAAC;EAElB,oBACEjK,OAAA;IAAK6D,SAAS,EAAC,MAAM;IAAAM,QAAA,eACnBnE,OAAA;MAAM6D,SAAS,EAAC,MAAM;MAACC,KAAK,EAAE;QAACM,OAAO,EAAC,MAAM;QAAEa,GAAG,EAAC;MAAE,CAAE;MAAAd,QAAA,gBACrDnE,OAAA;QAAK8D,KAAK,EAAE;UAACmM,IAAI,EAAC;QAAC,CAAE;QAAA9L,QAAA,EAClB8E,KAAK,KAAK,MAAM,gBACfjJ,OAAA;UAAK6D,SAAS,EAAC,WAAW;UAAAM,QAAA,eACxBnE,OAAA;YAAK6D,SAAS,EAAC,WAAW;YAAAM,QAAA,gBACxBnE,OAAA;cAAK6D,SAAS,EAAC,WAAW;cAAAM,QAAA,gBACxBnE,OAAA;gBAAK6D,SAAS,EAAC,MAAM;gBAAAM,QAAA,eAACnE,OAAA,CAACV,OAAO;kBAAC4Q,IAAI,EAAE,EAAG;kBAACtL,KAAK,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9DhF,OAAA;gBAAAmE,QAAA,gBACEnE,OAAA;kBAAAmE,QAAA,EAAI;gBAAwB;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjChF,OAAA;kBAAG6D,SAAS,EAAC,OAAO;kBAAAM,QAAA,EAAC;gBAAyC;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhF,OAAA;cAAAmE,QAAA,EAAG;YAAgK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvKhF,OAAA;cAAK6D,SAAS,EAAC,SAAS;cAAAM,QAAA,gBACtBnE,OAAA;gBAAK6D,SAAS,EAAC,YAAY;gBAAAM,QAAA,gBACzBnE,OAAA;kBAAAmE,QAAA,EAAI;gBAAM;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACfhF,OAAA;kBAAK6D,SAAS,EAAC,YAAY;kBAAAM,QAAA,gBACzBnE,OAAA;oBAAM6D,SAAS,EAAC,uBAAuB;oBAAAM,QAAA,EAAC;kBAAI;oBAAAU,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACnDhF,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAM,QAAA,GAAE,CAACrE,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,EAAEqQ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAtL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClF,CAAC,eACNhF,OAAA;kBAAK6D,SAAS,EAAC,YAAY;kBAAAM,QAAA,gBACzBnE,OAAA;oBAAM6D,SAAS,EAAC,wBAAwB;oBAAAM,QAAA,EAAC;kBAAK;oBAAAU,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACrDhF,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAM,QAAA,GAAE,CAACrE,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAEqQ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAtL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnF,CAAC,eACNhF,OAAA;kBAAK6D,SAAS,EAAC,YAAY;kBAAAM,QAAA,gBACzBnE,OAAA;oBAAM6D,SAAS,EAAC,6BAA6B;oBAAAM,QAAA,EAAC;kBAAU;oBAAAU,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC/DhF,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAAAM,QAAA,GAAE,CAACrE,iBAAiB,CAAC,YAAY,CAAC,IAAI,EAAE,EAAEqQ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAtL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNhF,OAAA;gBAAK6D,SAAS,EAAC,YAAY;gBAAAM,QAAA,gBACzBnE,OAAA;kBAAAmE,QAAA,EAAI;gBAAK;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdhF,OAAA;kBAAAmE,QAAA,EAAG;gBAA0d;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9d,CAAC,eACNhF,OAAA;gBAAK6D,SAAS,EAAC,YAAY;gBAAAM,QAAA,gBACzBnE,OAAA;kBAAAmE,QAAA,EAAI;gBAAU;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnBhF,OAAA;kBAAI6D,SAAS,EAAC,aAAa;kBAAAM,QAAA,gBACzBnE,OAAA;oBAAAmE,QAAA,gBAAInE,OAAA;sBAAAmE,QAAA,EAAQ;oBAAE;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhF,OAAA;sBAAK6D,SAAS,EAAC,MAAM;sBAAAM,QAAA,EAAC;oBAAwL;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjPhF,OAAA;oBAAAmE,QAAA,gBAAInE,OAAA;sBAAAmE,QAAA,EAAQ;oBAAE;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhF,OAAA;sBAAK6D,SAAS,EAAC,MAAM;sBAAAM,QAAA,EAAC;oBAAwL;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjPhF,OAAA;oBAAAmE,QAAA,gBAAInE,OAAA;sBAAAmE,QAAA,EAAQ;oBAAG;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhF,OAAA;sBAAK6D,SAAS,EAAC,MAAM;sBAAAM,QAAA,EAAC;oBAAwL;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClPhF,OAAA;oBAAAmE,QAAA,gBAAInE,OAAA;sBAAAmE,QAAA,EAAQ;oBAAK;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAhF,OAAA;sBAAK6D,SAAS,EAAC,MAAM;sBAAAM,QAAA,EAAC;oBAA4M;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNhF,OAAA;cAAK6D,SAAS,EAAC,UAAU;cAAAM,QAAA,gBACvBnE,OAAA;gBAAQwE,OAAO,EAAEA,CAAA,KAAM0E,QAAQ,CAAC,SAAS,CAAE;gBAAA/E,QAAA,EAAC;cAAa;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClEhF,OAAA;gBAAQ6D,SAAS,EAAC,WAAW;gBAACW,OAAO,EAAEA,CAAA,KAAM0E,QAAQ,CAAC,aAAa,CAAE;gBAAA/E,QAAA,EAAC;cAAiB;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENhF,OAAA;UAAK6D,SAAS,EAAC,cAAc;UAACC,KAAK,EAAE;YAACsM,MAAM,EAAE;UAAoB,CAAE;UAAAjM,QAAA,eAClEnE,OAAA,CAAClB,YAAY;YAACuR,MAAM,EAAE,CAAC1Q,UAAU,CAACyI,QAAQ,EAAEzI,UAAU,CAAC4I,SAAS,CAAE;YAAC+H,IAAI,EAAE3Q,UAAU,CAAC2Q,IAAK;YAACzM,SAAS,EAAC,KAAK;YAAC0M,WAAW,EAAEzO,CAAC,IAAEsH,UAAU,CAACtH,CAAC,CAAE;YAACgC,KAAK,EAAE;cAACsM,MAAM,EAAC;YAAM,CAAE;YAAAjM,QAAA,gBAC9JnE,OAAA,CAACjB,SAAS;cAACyR,GAAG,EAAC;YAAoD;cAAA3L,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtEhF,OAAA,CAACgI,eAAe;cAACC,UAAU,EAAEmD;YAAe;cAAAvG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC9CtF,aAAa,CAAC6F,GAAG,CAACgG,GAAG,IAAI;cACxB,MAAMlE,IAAI,GAAG8C,WAAW,CAACoB,GAAG,CAACM,EAAE,CAAC,IAAI,IAAI;cACxC,MAAMpE,OAAO,GAAGJ,IAAI,GAAGD,6BAA6B,CAACC,IAAI,CAAC,GAAG,EAAE;cAC/D,MAAMoJ,YAAY,GAAGhJ,OAAO,CAACqI,IAAI,CAAC,CAAC,CAACvI,CAAC,CAAC,KAAK7D,MAAM,CAAC6D,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,KAAK,eAAe,CAAC;cACvF,MAAM+I,YAAY,GAAGD,YAAY,GAAG5J,kBAAkB,CAACnD,MAAM,CAAC+M,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cACtF,MAAME,aAAa,GAAGF,YAAY,GAAG/H,kBAAkB,CAAC,eAAe,EAAE+H,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cAEhG,oBACEzQ,OAAA,CAACd,YAAY;gBAAcmR,MAAM,EAAE,CAAC9E,GAAG,CAACE,UAAU,CAACrD,QAAQ,EAAEmD,GAAG,CAACE,UAAU,CAAClD,SAAS,CAAE;gBAACqI,WAAW,EAAE;kBAAEhM,KAAK,EAAEhF,aAAa,CAAC2L,GAAG,CAACG,KAAK,CAAC;kBAAEmF,SAAS,EAAEjR,aAAa,CAAC2L,GAAG,CAACG,KAAK,CAAC;kBAAEoF,WAAW,EAAC;gBAAI,CAAE;gBAACC,MAAM,EAAE,CAAE;gBAACC,aAAa,EAAE;kBAAE7I,KAAK,EAAEA,CAAA,KAAMmD,iBAAiB,CAACC,GAAG;gBAAE,CAAE;gBAAApH,QAAA,eAChQnE,OAAA,CAACf,KAAK;kBAAAkF,QAAA,eACJnE,OAAA;oBAAK6D,SAAS,EAAC,YAAY;oBAACC,KAAK,EAAE;sBAACwB,QAAQ,EAAC;oBAAG,CAAE;oBAAAnB,QAAA,gBAChDnE,OAAA;sBAAK6D,SAAS,EAAC,cAAc;sBAAAM,QAAA,eAC3BnE,OAAA;wBAAAmE,QAAA,gBACEnE,OAAA;0BAAK6D,SAAS,EAAC,aAAa;0BAAAM,QAAA,EAAE0C,kBAAkB,CAAC0E,GAAG,CAACI,IAAI;wBAAC;0BAAA9G,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eACjEhF,OAAA;0BAAK6D,SAAS,EAAC,iBAAiB;0BAACC,KAAK,EAAE;4BAACM,OAAO,EAAC,MAAM;4BAACa,GAAG,EAAC,CAAC;4BAACX,UAAU,EAAC,QAAQ;4BAACqB,SAAS,EAAC;0BAAC,CAAE;0BAAAxB,QAAA,gBAC7FnE,OAAA;4BAAM6D,SAAS,EAAE,aAAagD,kBAAkB,CAAC0E,GAAG,CAACG,KAAK,CAAC,CAACzE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACU,WAAW,CAAC,CAAC,EAAG;4BAAAxD,QAAA,EAAE0C,kBAAkB,CAAC0E,GAAG,CAACG,KAAK;0BAAC;4BAAA7G,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAO,CAAC,EACvI0L,YAAY,gBAAG1Q,OAAA;4BAAK6D,SAAS,EAAE,SAAS8M,aAAa,GAAGA,aAAa,CAAC/H,GAAG,GAAG,WAAW,EAAG;4BAAAzE,QAAA,EAAEuM;0BAAY;4BAAA7L,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,GAAG,IAAI;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpH,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EAELqC,IAAI,gBACHrH,OAAA;sBAAK6D,SAAS,EAAC,YAAY;sBAAAM,QAAA,EACxBsD,OAAO,CACLwJ,MAAM,CAAC,CAAC,CAAC1J,CAAC,CAAC,KAAK;wBACf,MAAMf,GAAG,GAAG9C,MAAM,CAAC6D,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;wBACnC,OAAO,CAAC,CAAC,UAAU,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,CAAC,CAACmB,QAAQ,CAACtC,GAAG,CAAC;sBAChG,CAAC,CAAC,CACDjB,GAAG,CAAC,CAAC,CAACgC,CAAC,EAAC9C,CAAC,CAAC,KAAK;wBACd,MAAMS,KAAK,GAAGqB,WAAW,CAACgB,CAAC,EAAE9C,CAAC,CAAC;wBAC/B,MAAMsC,CAAC,GAAG2B,kBAAkB,CAACnB,CAAC,EAAE9C,CAAC,CAAC;wBAClC;wBACA,IAAIf,MAAM,CAAC6D,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;0BACpC,oBACE3H,OAAA;4BAAK6D,SAAS,EAAC,WAAW;4BAAAM,QAAA,gBACxBnE,OAAA;8BAAK6D,SAAS,EAAC,YAAY;8BAAAM,QAAA,EAAEoD;4BAAC;8BAAA1C,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC,eACrChF,OAAA;8BAAK6D,SAAS,EAAC,aAAa;8BAAAM,QAAA,gBAC1BnE,OAAA;gCAAM6D,SAAS,EAAC,UAAU;gCAAAM,QAAA,EAAEe;8BAAK;gCAAAL,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAO,CAAC,eACzChF,OAAA;gCAAM6D,SAAS,EAAE,SAASkD,CAAC,CAAC6B,GAAG,EAAG;gCAAC9E,KAAK,EAAE;kCAACoN,UAAU,EAAC;gCAAC,CAAE;gCAAA/M,QAAA,EAAE4C,CAAC,CAAC8B;8BAAK;gCAAAhE,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAO,CAAC;4BAAA;8BAAAH,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACvE,CAAC;0BAAA,GALwBuC,CAAC;4BAAA1C,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAM5B,CAAC;wBAEV;wBACA;wBACA,oBACEhF,OAAA;0BAAK6D,SAAS,EAAC,WAAW;0BAAAM,QAAA,gBACxBnE,OAAA;4BAAK6D,SAAS,EAAC,YAAY;4BAAAM,QAAA,EAAEoD;0BAAC;4BAAA1C,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACrChF,OAAA;4BAAK6D,SAAS,EAAC,aAAa;4BAAAM,QAAA,gBAC1BnE,OAAA;8BAAM6D,SAAS,EAAC,UAAU;8BAAAM,QAAA,EAAEe;4BAAK;8BAAAL,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAO,CAAC,eACzChF,OAAA;8BAAM6D,SAAS,EAAE,SAASkD,CAAC,CAAC6B,GAAG,EAAG;8BAAC9E,KAAK,EAAE;gCAACoN,UAAU,EAAC;8BAAC,CAAE;8BAAA/M,QAAA,EAAE4C,CAAC,CAAC8B;4BAAK;8BAAAhE,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAO,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACvE,CAAC;wBAAA,GALwBuC,CAAC;0BAAA1C,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAM5B,CAAC;sBAEV,CAAC;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,gBACJhF,OAAA;sBAAK8D,KAAK,EAAE;wBAAC6B,SAAS,EAAC;sBAAC,CAAE;sBAAAxB,QAAA,EAAC;oBAAU;sBAAAU,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC,GAjDSuG,GAAG,CAACM,EAAE;gBAAAhH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkDX,CAAC;YAEnB,CAAC,CAAC,EACDiE,KAAK,KAAK,aAAa,IAAIM,UAAU,gBAAGvJ,OAAA,CAAChB,MAAM;cAACmS,QAAQ,EAAE,CAAC5H,UAAU,CAACnB,QAAQ,EAAEmB,UAAU,CAAChB,SAAS,CAAE;cAAApE,QAAA,eAACnE,OAAA,CAACf,KAAK;gBAAAkF,QAAA,EAAC;cAAK;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAAG,IAAI,EAC3IiE,KAAK,KAAK,aAAa,IAAIQ,QAAQ,gBAAGzJ,OAAA,CAAChB,MAAM;cAACmS,QAAQ,EAAE,CAAC1H,QAAQ,CAACrB,QAAQ,EAAEqB,QAAQ,CAAClB,SAAS,CAAE;cAAApE,QAAA,eAACnE,OAAA,CAACf,KAAK;gBAAAkF,QAAA,EAAC;cAAG;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAAG,IAAI,EACnIiE,KAAK,KAAK,aAAa,IAAIU,YAAY,CAACzG,MAAM,GAAG,CAAC,iBACjDlD,OAAA,CAAAE,SAAA;cAAAiE,QAAA,gBACEnE,OAAA,CAACb,QAAQ;gBAACiS,SAAS,EAAEzH,YAAY,CAACpE,GAAG,CAAC4I,CAAC,IAAI,CAACA,CAAC,CAAC/F,QAAQ,EAAE+F,CAAC,CAAC5F,SAAS,CAAC,CAAE;gBAACqI,WAAW,EAAE;kBAAChM,KAAK,EAAC,SAAS;kBAAEyM,MAAM,EAAC,CAAC;kBAAEC,OAAO,EAAC;gBAAG;cAAE;gBAAAzM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAC/H2E,YAAY,CAACpE,GAAG,CAAC,CAAC8F,EAAE,EAAEjI,CAAC,kBACtBpD,OAAA,CAACd,YAAY;gBAASmR,MAAM,EAAE,CAAChF,EAAE,CAACjD,QAAQ,EAAEiD,EAAE,CAAC9C,SAAS,CAAE;gBAACwI,MAAM,EAAE,CAAE;gBAACH,WAAW,EAAE;kBAAChM,KAAK,EAAC,SAAS;kBAAEiM,SAAS,EAAC,SAAS;kBAAEC,WAAW,EAAC;gBAAG,CAAE;gBAAA3M,QAAA,eACzInE,OAAA,CAACf,KAAK;kBAAAkF,QAAA,eACJnE,OAAA;oBAAK8D,KAAK,EAAE;sBAACwB,QAAQ,EAAC;oBAAG,CAAE;oBAAAnB,QAAA,gBACzBnE,OAAA;sBAAK8D,KAAK,EAAE;wBAACM,OAAO,EAAC,MAAM;wBAACC,cAAc,EAAC,eAAe;wBAACC,UAAU,EAAC;sBAAQ,CAAE;sBAAAH,QAAA,gBAC9EnE,OAAA;wBAAAmE,QAAA,eAAKnE,OAAA;0BAAAmE,QAAA,EAAQ;wBAAY;0BAAAU,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eACxChF,OAAA;wBAAK6D,SAAS,EAAE,SAAS6E,kBAAkB,CAAC,eAAe,EAAE2C,EAAE,CAAC,eAAe,CAAC,CAAC,CAACzC,GAAG,EAAG;wBAAAzE,QAAA,EAAE0C,kBAAkB,CAACwE,EAAE,CAAC,eAAe,CAAC;sBAAC;wBAAAxG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACrI,CAAC,EAEL,CAAC,IAAI,EAAE,WAAW,EAAE,YAAY,CAAC,CAACO,GAAG,CAAC,CAACoD,KAAK,EAAElD,GAAG,KAAK;sBACrD,MAAM8L,GAAG,GAAGlG,EAAE,CAAC1C,KAAK,CAAC;sBACrB,MAAM6I,MAAM,GAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKjO,SAAS,GAAI,GAAG,GAAG8B,MAAM,CAACmM,GAAG,CAAC,CAAC3K,OAAO,CAAC,CAAC,CAAC;sBACjF,MAAM6K,MAAM,GAAG/I,kBAAkB,CAACC,KAAK,EAAE4I,GAAG,CAAC;sBAC7C,oBACEvR,OAAA;wBAAiB8D,KAAK,EAAE;0BAACM,OAAO,EAAC,MAAM;0BAACC,cAAc,EAAC,eAAe;0BAACC,UAAU,EAAC,QAAQ;0BAACqB,SAAS,EAACF,GAAG,KAAG,CAAC,GAAC,CAAC,GAAC,CAAC;0BAACiM,SAAS,EAACjM,GAAG,KAAG,CAAC,GAAC,mBAAmB,GAAC,MAAM;0BAACkM,UAAU,EAAClM,GAAG,KAAG,CAAC,GAAC,CAAC,GAAC;wBAAC,CAAE;wBAAAtB,QAAA,gBACpLnE,OAAA;0BAAK8D,KAAK,EAAE;4BAACa,QAAQ,EAAC,EAAE;4BAACC,KAAK,EAAC,SAAS;4BAACgB,UAAU,EAAC;0BAAG,CAAE;0BAAAzB,QAAA,EAAEwE;wBAAK;0BAAA9D,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eACvEhF,OAAA;0BAAK8D,KAAK,EAAE;4BAACM,OAAO,EAAC,MAAM;4BAACE,UAAU,EAAC,QAAQ;4BAACW,GAAG,EAAC;0BAAC,CAAE;0BAAAd,QAAA,gBACrDnE,OAAA;4BAAK8D,KAAK,EAAE;8BAACa,QAAQ,EAAC,EAAE;8BAACiB,UAAU,EAAC,GAAG;8BAAChB,KAAK,EAAC;4BAAS,CAAE;4BAAAT,QAAA,EAAEqN;0BAAM;4BAAA3M,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACxEhF,OAAA;4BAAK6D,SAAS,EAAE,SAAS4N,MAAM,CAAC7I,GAAG,EAAG;4BAAAzE,QAAA,EAAEsN,MAAM,CAAC5I;0BAAK;4BAAAhE,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACxD,CAAC;sBAAA,GALE2D,KAAK;wBAAA9D,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAMV,CAAC;oBAEV,CAAC,CAAC,EAED,CAAC,cAAc,EAAE,cAAc,CAAC,CAACO,GAAG,CAAEoD,KAAK,IAAK;sBAC/C,IAAI0C,EAAE,CAAC1C,KAAK,CAAC,KAAKrF,SAAS,IAAI+H,EAAE,CAAC1C,KAAK,CAAC,KAAK,IAAI,EAAE;wBACjD,MAAM4I,GAAG,GAAGlG,EAAE,CAAC1C,KAAK,CAAC;wBACrB,MAAM6I,MAAM,GAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKjO,SAAS,GAAI,GAAG,GAAG8B,MAAM,CAACmM,GAAG,CAAC,CAAC3K,OAAO,CAAC,CAAC,CAAC;wBACjF,MAAM6K,MAAM,GAAG/I,kBAAkB,CAACC,KAAK,EAAE4I,GAAG,CAAC;wBAC7C,oBACEvR,OAAA;0BAAiB8D,KAAK,EAAE;4BAACM,OAAO,EAAC,MAAM;4BAACC,cAAc,EAAC,eAAe;4BAACC,UAAU,EAAC,QAAQ;4BAACqB,SAAS,EAAC;0BAAC,CAAE;0BAAAxB,QAAA,gBACtGnE,OAAA;4BAAK8D,KAAK,EAAE;8BAACa,QAAQ,EAAC,EAAE;8BAACC,KAAK,EAAC,SAAS;8BAACgB,UAAU,EAAC;4BAAG,CAAE;4BAAAzB,QAAA,EAAEwE;0BAAK;4BAAA9D,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACvEhF,OAAA;4BAAK8D,KAAK,EAAE;8BAACM,OAAO,EAAC,MAAM;8BAACE,UAAU,EAAC,QAAQ;8BAACW,GAAG,EAAC;4BAAC,CAAE;4BAAAd,QAAA,gBACrDnE,OAAA;8BAAK8D,KAAK,EAAE;gCAACa,QAAQ,EAAC,EAAE;gCAACiB,UAAU,EAAC,GAAG;gCAAChB,KAAK,EAAC;8BAAS,CAAE;8BAAAT,QAAA,EAAEqN;4BAAM;8BAAA3M,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC,eACxEhF,OAAA;8BAAK6D,SAAS,EAAE,SAAS4N,MAAM,CAAC7I,GAAG,EAAG;8BAAAzE,QAAA,EAAEsN,MAAM,CAAC5I;4BAAK;8BAAAhE,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAM,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACxD,CAAC;wBAAA,GALE2D,KAAK;0BAAA9D,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAMV,CAAC;sBAEV;sBACA,OAAO,IAAI;oBACb,CAAC,CAAC,EAEDqG,EAAE,IAAKA,EAAE,CAACuG,MAAM,KAAKtO,SAAS,IAAI+H,EAAE,CAACuG,MAAM,KAAK,IAAK,gBACpD5R,OAAA;sBAAK8D,KAAK,EAAE;wBAAC6B,SAAS,EAAC,CAAC;wBAAChB,QAAQ,EAAC,EAAE;wBAACC,KAAK,EAAC;sBAAS,CAAE;sBAAAT,QAAA,GAAC,WAAS,eAAAnE,OAAA;wBAAAmE,QAAA,EAASiB,MAAM,CAACiG,EAAE,CAACuG,MAAM,CAAC,CAAChL,OAAO,CAAC,CAAC;sBAAC;wBAAA/B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAS,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,GACnH,IAAI;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC,GA7CS5B,CAAC;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA8CN,CACf,CAAC;YAAA,eACF,CACH;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACW;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGLiE,KAAK,KAAK,MAAM,iBACfjJ,OAAA;QAAO6D,SAAS,EAAC,cAAc;QAACC,KAAK,EAAE;UAAC+N,KAAK,EAAC;QAAG,CAAE;QAAA1N,QAAA,gBACnDnE,OAAA;UAAK8D,KAAK,EAAE;YAACM,OAAO,EAAC,MAAM;YAAEC,cAAc,EAAC,UAAU;YAAEY,GAAG,EAAC,CAAC;YAAElB,OAAO,EAAC;UAAC,CAAE;UAAAI,QAAA,gBACxEnE,OAAA;YAAQwE,OAAO,EAAEA,CAAA,KAAI0E,QAAQ,CAAC,MAAM,CAAE;YAACrF,SAAS,EAAC,OAAO;YAAAM,QAAA,EAAC;UAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtEhF,OAAA;YAAQwE,OAAO,EAAEA,CAAA,KAAI0E,QAAQ,CAAC,aAAa,CAAE;YAACrF,SAAS,EAAC,eAAe;YAAAM,QAAA,EAAC;UAAW;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACNhF,OAAA;UAAK6D,SAAS,EAAC,iBAAiB;UAAAM,QAAA,eAC9BnE,OAAA,CAACe,QAAQ;YAACC,IAAI,EAAEiJ,YAAa;YAAChJ,QAAQ,EAAEU,CAAC,IAAEuI,eAAe,CAACvI,CAAC;UAAE;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,EAELiE,KAAK,KAAK,aAAa,iBACtBjJ,OAAA;UAAK8D,KAAK,EAAE;YAAC6B,SAAS,EAAC;UAAE,CAAE;UAAAxB,QAAA,eACzBnE,OAAA;YAAK6D,SAAS,EAAC,cAAc;YAAAM,QAAA,gBAC3BnE,OAAA;cAAK6D,SAAS,EAAC,cAAc;cAACC,KAAK,EAAE;gBAACS,YAAY,EAAC;cAAC,CAAE;cAAAJ,QAAA,gBACpDnE,OAAA;gBAAQwE,OAAO,EAAEA,CAAA,KAAI8E,aAAa,CAACD,UAAU,KAAG,OAAO,GAAC,IAAI,GAAC,OAAO,CAAE;gBAACxF,SAAS,EAAEwF,UAAU,KAAG,OAAO,GAAC,sBAAsB,GAAC,EAAG;gBAAAlF,QAAA,EAAC;cAAU;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrJhF,OAAA;gBAAQwE,OAAO,EAAEA,CAAA,KAAI8E,aAAa,CAACD,UAAU,KAAG,KAAK,GAAC,IAAI,GAAC,KAAK,CAAE;gBAACxF,SAAS,EAAEwF,UAAU,KAAG,KAAK,GAAC,sBAAsB,GAAC,EAAG;gBAAAlF,QAAA,EAAC;cAAQ;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC7IhF,OAAA;gBAAQwE,OAAO,EAAEA,CAAA,KAAI;kBAAE8E,aAAa,CAAC,IAAI,CAAC;kBAAEM,eAAe,CAAC,EAAE,CAAC;kBAAEJ,aAAa,CAAC,IAAI,CAAC;kBAAEE,WAAW,CAAC,IAAI,CAAC;kBAAEa,aAAa,CAAC,EAAE,CAAC;kBAAEE,WAAW,CAAC,EAAE,CAAC;kBAAEE,aAAa,CAAC,IAAI,CAAC;kBAAEE,WAAW,CAAC,IAAI,CAAC;kBAAEE,mBAAmB,CAAC,IAAI,CAAC;kBAAEE,iBAAiB,CAAC,IAAI,CAAC;gBAAE,CAAE;gBAACpH,SAAS,EAAC,OAAO;gBAAAM,QAAA,EAAC;cAAK;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzQ,CAAC,eACNhF,OAAA;cAAK8D,KAAK,EAAE;gBAACS,YAAY,EAAC,CAAC;gBAACK,KAAK,EAAC,SAAS;gBAACD,QAAQ,EAAC;cAAE,CAAE;cAAAR,QAAA,gBAACnE,OAAA;gBAAAmE,QAAA,EAAQ;cAAkB;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,wDAA+C;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAElJhF,OAAA;cAAK8D,KAAK,EAAE;gBAACM,OAAO,EAAC,MAAM;gBAACa,GAAG,EAAC,EAAE;gBAACX,UAAU,EAAC,QAAQ;gBAACC,YAAY,EAAC;cAAE,CAAE;cAAAJ,QAAA,gBACtEnE,OAAA;gBAAO8D,KAAK,EAAE;kBAACgO,MAAM,EAAC,CAAC;kBAACnN,QAAQ,EAAC,EAAE;kBAACC,KAAK,EAAC;gBAAS,CAAE;gBAAAT,QAAA,EAAC;cAAS;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvEhF,OAAA;gBAAO6D,SAAS,EAAC,WAAW;gBAACkO,IAAI,EAAC,QAAQ;gBAACpF,GAAG,EAAE,CAAE;gBAACE,GAAG,EAAE,EAAG;gBAAC3H,KAAK,EAAE6E,WAAY;gBAAC9I,QAAQ,EAAEkE,CAAC,IAAE6E,cAAc,CAAC5E,MAAM,CAACD,CAAC,CAACE,MAAM,CAACH,KAAK,CAAC;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvIhF,OAAA;gBAAK8D,KAAK,EAAE;kBAACoN,UAAU,EAAC;gBAAM,CAAE;gBAAA/M,QAAA,gBAC9BnE,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAACW,OAAO,EAAEA,CAAA,KAAI;oBAAEwF,cAAc,CAAEzH,IAAI,CAACoK,GAAG,CAAC,EAAE,EAAE,CAAC5C,WAAW,IAAE,CAAC,IAAE,CAAC,CAAE,CAAC;kBAAE,CAAE;kBAAA5F,QAAA,EAAC;gBAAE;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC3GhF,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAACW,OAAO,EAAEA,CAAA,KAAI;oBAAEwF,cAAc,CAAEzH,IAAI,CAACsK,GAAG,CAAC,CAAC,EAAE,CAAC9C,WAAW,IAAE,CAAC,IAAE,CAAC,CAAE,CAAC;kBAAE,CAAE;kBAACjG,KAAK,EAAE;oBAACoN,UAAU,EAAC;kBAAC,CAAE;kBAAA/M,QAAA,EAAC;gBAAE;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9H,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENhF,OAAA;cAAK6D,SAAS,EAAC,WAAW;cAAAM,QAAA,gBACxBnE,OAAA;gBAAK6D,SAAS,EAAC,WAAW;gBAAAM,QAAA,gBACtBnE,OAAA;kBAAK6D,SAAS,EAAC,aAAa;kBAAAM,QAAA,EAAC;gBAAK;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxChF,OAAA;kBAAO6D,SAAS,EAAC,aAAa;kBAACmO,QAAQ,EAAE/I,KAAK,KAAG,aAAc;kBAAC/D,KAAK,EAAEoF,UAAU,KAAKf,UAAU,GAAC,GAAGA,UAAU,CAACnB,QAAQ,CAACxB,OAAO,CAAC,CAAC,CAAC,KAAK2C,UAAU,CAAChB,SAAS,CAAC3B,OAAO,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,CAAE;kBAAC3F,QAAQ,EAAEkE,CAAC,IAAEoF,aAAa,CAACpF,CAAC,CAACE,MAAM,CAACH,KAAK,CAAE;kBAAC+M,MAAM,EAAG9M,CAAC,IAAG;oBACrO,IAAI8D,KAAK,KAAK,aAAa,EAAE,OAAO,CAAC;oBACrC,MAAMxE,CAAC,GAAGU,CAAC,CAACE,MAAM,CAACH,KAAK,CAAC8B,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAACvC,CAAC,EAAE;oBACR,MAAMyN,KAAK,GAAGzN,CAAC,CAAC0L,KAAK,CAAC,OAAO,CAAC,CAAC5K,GAAG,CAACwC,CAAC,IAAEA,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,CAACiK,MAAM,CAACkB,OAAO,CAAC;oBAC/D,IAAID,KAAK,CAAChP,MAAM,IAAI,CAAC,EAAC;sBAAE,MAAMoF,GAAG,GAAGlD,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,MAAME,GAAG,GAAGhN,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,IAAI,CAACxL,KAAK,CAAC4B,GAAG,CAAC,IAAI,CAAC5B,KAAK,CAAC0L,GAAG,CAAC,EAAE5I,aAAa,CAAC;wBAACpB,QAAQ,EAACE,GAAG;wBAAEC,SAAS,EAAC6J;sBAAG,CAAC,CAAC;oBAAE;kBACpK,CAAE;kBAACC,SAAS,EAAGlN,CAAC,IAAG;oBAAE,IAAIA,CAAC,CAACqB,GAAG,KAAG,OAAO,EAAC;sBAAErB,CAAC,CAACE,MAAM,CAACiN,IAAI,CAAC,CAAC;oBAAE;kBAAE,CAAE;kBAACC,WAAW,EAAC;gBAAU;kBAAA1N,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,eACNhF,OAAA;gBAAK6D,SAAS,EAAC,eAAe;gBAAAM,QAAA,gBAC5BnE,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAACW,OAAO,EAAEA,CAAA,KAAI;oBAAE6K,SAAS,CAAC9F,UAAU,CAAC;kBAAE,CAAE;kBAACiJ,QAAQ,EAAE,CAACjJ,UAAW;kBAAApF,QAAA,eAACnE,OAAA,CAACT,MAAM;oBAAAsF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC5GhF,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAAC2O,QAAQ,EAAEvJ,KAAK,KAAG,aAAc;kBAACzE,OAAO,EAAE,MAAAA,CAAA,KAAU;oBAAE,IAAI;sBAAE,MAAMiO,CAAC,GAAG,MAAMnD,SAAS,CAACC,SAAS,CAACmD,QAAQ,CAAC,CAAC;sBAAEnI,aAAa,CAACkI,CAAC,CAAC;sBAAE,MAAMP,KAAK,GAAGO,CAAC,CAACtC,KAAK,CAAC,OAAO,CAAC,CAAC5K,GAAG,CAACwC,CAAC,IAAEA,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,CAACiK,MAAM,CAACkB,OAAO,CAAC;sBAAE,IAAID,KAAK,CAAChP,MAAM,IAAE,CAAC,EAAC;wBAAE,MAAMoF,GAAG,GAAClD,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;0BAAEE,GAAG,GAAChN,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;wBAAE,IAAI,CAACxL,KAAK,CAAC4B,GAAG,CAAC,IAAE,CAAC5B,KAAK,CAAC0L,GAAG,CAAC,EAAE5I,aAAa,CAAC;0BAACpB,QAAQ,EAACE,GAAG;0BAAEC,SAAS,EAAC6J;wBAAG,CAAC,CAAC;sBAAE;oBAAE,CAAC,CAAC,OAAMjN,CAAC,EAAC,CAAC;kBAAE,CAAE;kBAACwN,KAAK,EAAC,sBAAsB;kBAAAxO,QAAA,eAACnE,OAAA,CAACP,OAAO;oBAAAoF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC/ahF,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAACW,OAAO,EAAEA,CAAA,KAAI;oBAAEiL,UAAU,CAAC,CAAC;oBAAElF,aAAa,CAAC,EAAE,CAAC;oBAAEI,aAAa,CAAC,IAAI,CAAC;oBAAEI,mBAAmB,CAAC,IAAI,CAAC;kBAAE,CAAE;kBAACyH,QAAQ,EAAE,CAACjJ,UAAW;kBAACzF,KAAK,EAAE;oBAACoN,UAAU,EAAC;kBAAC,CAAE;kBAAA/M,QAAA,eAACnE,OAAA,CAACR,OAAO;oBAAAqF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3L,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENhF,OAAA;cAAK6D,SAAS,EAAC,WAAW;cAAAM,QAAA,gBACxBnE,OAAA;gBAAK6D,SAAS,EAAC,WAAW;gBAAAM,QAAA,gBACtBnE,OAAA;kBAAK6D,SAAS,EAAC,aAAa;kBAAAM,QAAA,EAAC;gBAAG;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtChF,OAAA;kBAAO6D,SAAS,EAAC,aAAa;kBAACmO,QAAQ,EAAE/I,KAAK,KAAG,aAAc;kBAAC/D,KAAK,EAAEsF,QAAQ,KAAKf,QAAQ,GAAC,GAAGA,QAAQ,CAACrB,QAAQ,CAACxB,OAAO,CAAC,CAAC,CAAC,KAAK6C,QAAQ,CAAClB,SAAS,CAAC3B,OAAO,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,CAAE;kBAAC3F,QAAQ,EAAEkE,CAAC,IAAEsF,WAAW,CAACtF,CAAC,CAACE,MAAM,CAACH,KAAK,CAAE;kBAAC+M,MAAM,EAAG9M,CAAC,IAAG;oBAC3N,IAAI8D,KAAK,KAAK,aAAa,EAAE,OAAO,CAAC;oBACrC,MAAMxE,CAAC,GAAGU,CAAC,CAACE,MAAM,CAACH,KAAK,CAAC8B,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAACvC,CAAC,EAAE;oBACR,MAAMyN,KAAK,GAAGzN,CAAC,CAAC0L,KAAK,CAAC,OAAO,CAAC,CAAC5K,GAAG,CAACwC,CAAC,IAAEA,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,CAACiK,MAAM,CAACkB,OAAO,CAAC;oBAC/D,IAAID,KAAK,CAAChP,MAAM,IAAI,CAAC,EAAC;sBAAE,MAAMoF,GAAG,GAAGlD,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,MAAME,GAAG,GAAGhN,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;sBAAE,IAAI,CAACxL,KAAK,CAAC4B,GAAG,CAAC,IAAI,CAAC5B,KAAK,CAAC0L,GAAG,CAAC,EAAE1I,WAAW,CAAC;wBAACtB,QAAQ,EAACE,GAAG;wBAAEC,SAAS,EAAC6J;sBAAG,CAAC,CAAC;oBAAE;kBAClK,CAAE;kBAACC,SAAS,EAAGlN,CAAC,IAAG;oBAAE,IAAIA,CAAC,CAACqB,GAAG,KAAG,OAAO,EAAC;sBAAErB,CAAC,CAACE,MAAM,CAACiN,IAAI,CAAC,CAAC;oBAAE;kBAAE,CAAE;kBAACC,WAAW,EAAC;gBAAU;kBAAA1N,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,eACNhF,OAAA;gBAAK6D,SAAS,EAAC,eAAe;gBAAAM,QAAA,gBAC5BnE,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAACW,OAAO,EAAEA,CAAA,KAAI;oBAAE6K,SAAS,CAAC5F,QAAQ,CAAC;kBAAE,CAAE;kBAAC+I,QAAQ,EAAE,CAAC/I,QAAS;kBAAAtF,QAAA,eAACnE,OAAA,CAACT,MAAM;oBAAAsF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxGhF,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAAC2O,QAAQ,EAAEvJ,KAAK,KAAG,aAAc;kBAACzE,OAAO,EAAE,MAAAA,CAAA,KAAU;oBAAE,IAAI;sBAAE,MAAMiO,CAAC,GAAG,MAAMnD,SAAS,CAACC,SAAS,CAACmD,QAAQ,CAAC,CAAC;sBAAEjI,WAAW,CAACgI,CAAC,CAAC;sBAAE,MAAMP,KAAK,GAAGO,CAAC,CAACtC,KAAK,CAAC,OAAO,CAAC,CAAC5K,GAAG,CAACwC,CAAC,IAAEA,CAAC,CAACf,IAAI,CAAC,CAAC,CAAC,CAACiK,MAAM,CAACkB,OAAO,CAAC;sBAAE,IAAID,KAAK,CAAChP,MAAM,IAAE,CAAC,EAAC;wBAAE,MAAMoF,GAAG,GAAClD,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;0BAAEE,GAAG,GAAChN,MAAM,CAAC8M,KAAK,CAAC,CAAC,CAAC,CAAC;wBAAE,IAAI,CAACxL,KAAK,CAAC4B,GAAG,CAAC,IAAE,CAAC5B,KAAK,CAAC0L,GAAG,CAAC,EAAE1I,WAAW,CAAC;0BAACtB,QAAQ,EAACE,GAAG;0BAAEC,SAAS,EAAC6J;wBAAG,CAAC,CAAC;sBAAE;oBAAE,CAAC,CAAC,OAAMjN,CAAC,EAAC,CAAC;kBAAE,CAAE;kBAACwN,KAAK,EAAC,sBAAsB;kBAAAxO,QAAA,eAACnE,OAAA,CAACP,OAAO;oBAAAoF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC3ahF,OAAA;kBAAQ6D,SAAS,EAAC,OAAO;kBAACW,OAAO,EAAEA,CAAA,KAAI;oBAAEkL,QAAQ,CAAC,CAAC;oBAAEjF,WAAW,CAAC,EAAE,CAAC;oBAAEI,WAAW,CAAC,IAAI,CAAC;oBAAEI,iBAAiB,CAAC,IAAI,CAAC;kBAAE,CAAE;kBAACuH,QAAQ,EAAE,CAAC/I,QAAS;kBAAC3F,KAAK,EAAE;oBAACoN,UAAU,EAAC;kBAAC,CAAE;kBAAA/M,QAAA,eAACnE,OAAA,CAACR,OAAO;oBAAAqF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENhF,OAAA;cAAK8D,KAAK,EAAE;gBAAC6B,SAAS,EAAC,CAAC;gBAACvB,OAAO,EAAC,MAAM;gBAACE,UAAU,EAAC,QAAQ;gBAACD,cAAc,EAAC;cAAe,CAAE;cAAAF,QAAA,gBAC1FnE,OAAA;gBAAK6D,SAAS,EAAC,OAAO;gBAAAM,QAAA,GAAC,YAAU,eAAAnE,OAAA;kBAAQ8D,KAAK,EAAE;oBAACc,KAAK,EAAC;kBAAS,CAAE;kBAAAT,QAAA,EAAGoF,UAAU,IAAIE,QAAQ,GAAE,GAAG6E,WAAW,CAAC/E,UAAU,EAACE,QAAQ,CAAC,CAAC7C,OAAO,CAAC,CAAC,CAAC,KAAK,GAAC;gBAAG;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpKhF,OAAA;gBAAK8D,KAAK,EAAE;kBAACM,OAAO,EAAC,MAAM;kBAACE,UAAU,EAAC,QAAQ;kBAACW,GAAG,EAAC,CAAC;kBAACiM,UAAU,EAAC;gBAAE,CAAE;gBAAA/M,QAAA,gBACnEnE,OAAA;kBAAK8D,KAAK,EAAE;oBAACa,QAAQ,EAAC,EAAE;oBAACC,KAAK,EAAC;kBAAS,CAAE;kBAAAT,QAAA,EAAE+G,iBAAiB,GAAG,gCAAgC,GAAG;gBAA2B;kBAAArG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACrIhF,OAAA;kBAAQ6D,SAAS,EAAC,aAAa;kBAACW,OAAO,EAAEwH,oBAAqB;kBAACwG,QAAQ,EAAE,CAACjJ,UAAU,IAAI,CAACE,QAAQ,IAAII,aAAc;kBAAA1F,QAAA,EAAE0F,aAAa,GAAG,gBAAgB,GAAG;gBAAa;kBAAAhF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5K,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDhF,OAAA;UAAK8D,KAAK,EAAE;YAAC6B,SAAS,EAAC;UAAE,CAAE;UAAAxB,QAAA,gBACzBnE,OAAA;YAAK6D,SAAS,EAAC,eAAe;YAAAM,QAAA,GAAC,iBAAe,eAAAnE,OAAA;cAAAmE,QAAA,EAAS,IAAI/C,IAAI,CAAC6I,YAAY,CAAC,CAAC2I,kBAAkB,CAAC;YAAC;cAAA/N,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC7GpB,QAAQ,gBACX5D,OAAA;YAAK8D,KAAK,EAAE;cAAC6B,SAAS,EAAC;YAAE,CAAE;YAAAxB,QAAA,gBACzBnE,OAAA;cAAAmE,QAAA,EAAK0C,kBAAkB,CAACjD,QAAQ,CAAC+H,IAAI;YAAC;cAAA9G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5ChF,OAAA;cAAK6D,SAAS,EAAC,OAAO;cAACC,KAAK,EAAE;gBAACM,OAAO,EAAC,MAAM;gBAAEC,cAAc,EAAC,eAAe;gBAAEC,UAAU,EAAC;cAAQ,CAAE;cAAAH,QAAA,gBAClGnE,OAAA;gBAAAmE,QAAA,gBAAKnE,OAAA;kBAAM6D,SAAS,EAAE,aAAagD,kBAAkB,CAACjD,QAAQ,CAAC8H,KAAK,CAAC,CAACzE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACU,WAAW,CAAC,CAAC,EAAG;kBAAAxD,QAAA,EAAE0C,kBAAkB,CAACjD,QAAQ,CAAC8H,KAAK;gBAAC;kBAAA7G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,YAAG,EAACpB,QAAQ,CAACiP,WAAW;cAAA;gBAAAhO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EACrLpB,QAAQ,CAACmI,UAAU,GAAG,CAAC,MAAM;gBAC5B,MAAMtE,OAAO,GAAGL,6BAA6B,CAACxD,QAAQ,CAACmI,UAAU,CAAC;gBAClE,MAAM+G,OAAO,GAAGrL,OAAO,CAACqI,IAAI,CAAC,CAAC,CAACvI,CAAC,CAAC,KAAK7D,MAAM,CAAC6D,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,KAAK,eAAe,CAAC;gBAClF,IAAImL,OAAO,EAAE;kBACX,MAAM/L,CAAC,GAAG2B,kBAAkB,CAAC,eAAe,EAAEoK,OAAO,CAAC,CAAC,CAAC,CAAC;kBACzD,oBAAO9S,OAAA;oBAAK6D,SAAS,EAAE,SAASkD,CAAC,GAAGA,CAAC,CAAC6B,GAAG,GAAG,WAAW,EAAG;oBAAAzE,QAAA,EAAE0C,kBAAkB,CAACnD,MAAM,CAACoP,OAAO,CAAC,CAAC,CAAC,CAAC;kBAAC;oBAAAjO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAC3G;gBACA,OAAO,IAAI;cACb,CAAC,EAAE,CAAC,GAAG,IAAI;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACNhF,OAAA;cAAI8D,KAAK,EAAE;gBAAC6B,SAAS,EAAC;cAAC,CAAE;cAAAxB,QAAA,EAAC;YAAU;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACxCpB,QAAQ,CAACmI,UAAU,gBAClB/L,OAAA;cAAAmE,QAAA,EACGiD,6BAA6B,CAACxD,QAAQ,CAACmI,UAAU,CAAC,CAChDkF,MAAM,CAAC,CAAC,CAAC1J,CAAC,CAAC,KAAK;gBACf,MAAMf,GAAG,GAAG9C,MAAM,CAAC6D,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;gBACnC,OAAO,CAAC,CAAC,UAAU,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,CAAC,CAACmB,QAAQ,CAACtC,GAAG,CAAC;cAChG,CAAC,CAAC,CACDjB,GAAG,CAAC,CAAC,CAACgC,CAAC,EAAC9C,CAAC,CAAC,KAAG;gBACZ,MAAMS,KAAK,GAAGqB,WAAW,CAACgB,CAAC,EAAE9C,CAAC,CAAC;gBAC/B,MAAMsC,CAAC,GAAG2B,kBAAkB,CAACnB,CAAC,EAAC9C,CAAC,CAAC;gBACjC,oBACEzE,OAAA;kBAAa6D,SAAS,EAAC,kBAAkB;kBAAAM,QAAA,gBACvCnE,OAAA;oBAAK6D,SAAS,EAAC,OAAO;oBAAAM,QAAA,EAAEoD;kBAAC;oBAAA1C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAChChF,OAAA;oBAAK6D,SAAS,EAAC,OAAO;oBAAAM,QAAA,gBAACnE,OAAA;sBAAK6D,SAAS,EAAC,UAAU;sBAAAM,QAAA,EAAEe;oBAAK;sBAAAL,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAAAhF,OAAA;sBAAK6D,SAAS,EAAE,SAASkD,CAAC,CAAC6B,GAAG,EAAG;sBAAAzE,QAAA,EAAE4C,CAAC,CAAC8B;oBAAK;sBAAAhE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GAF7GuC,CAAC;kBAAA1C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGN,CAAC;cAEV,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,gBACJhF,OAAA;cAAAmE,QAAA,EAAK;YAAU;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,gBAENhF,OAAA;YAAK6D,SAAS,EAAC,aAAa;YAACC,KAAK,EAAE;cAAC6B,SAAS,EAAC;YAAE,CAAE;YAAAxB,QAAA,EAAC;UAAiD;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAC3G;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACgE,GAAA,CA1cuBD,GAAG;AAAAgK,GAAA,GAAHhK,GAAG;AAAA,IAAAzC,EAAA,EAAAmC,GAAA,EAAAsK,GAAA;AAAAC,YAAA,CAAA1M,EAAA;AAAA0M,YAAA,CAAAvK,GAAA;AAAAuK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}