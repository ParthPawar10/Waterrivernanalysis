{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver, riverDescriptions } from './locations';\nimport { FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction Calendar({\n  date,\n  onChange\n}) {\n  _s();\n  // full month grid calendar (always visible in sidebar)\n  const base = date ? new Date(date) : new Date();\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\n  React.useEffect(() => {\n    const d = date ? new Date(date) : new Date();\n    setViewMonth(d.getMonth());\n    setViewYear(d.getFullYear());\n  }, [date]);\n  const startOfMonth = (y, m) => new Date(y, m, 1);\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\n  const weeks = [];\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\n  const total = leading + daysInMonth(viewYear, viewMonth);\n  const rows = Math.ceil(total / 7);\n  let day = 1 - leading;\n  for (let r = 0; r < rows; r++) {\n    const week = [];\n    for (let c = 0; c < 7; c++, day++) {\n      const cellDate = new Date(viewYear, viewMonth, day);\n      week.push(cellDate);\n    }\n    weeks.push(week);\n  }\n  const monthName = new Date(viewYear, viewMonth).toLocaleString(undefined, {\n    month: 'long'\n  });\n  const monthNames = Array.from({\n    length: 12\n  }, (_, i) => new Date(2000, i).toLocaleString(undefined, {\n    month: 'long'\n  }));\n  const getYearOptions = center => {\n    const cy = new Date().getFullYear();\n    // provide a wide range: +/- 100 years around the current view year\n    const start = Math.max(center - 100, 1900); // floor to 1900 for safety\n    const end = Math.max(center + 100, cy + 100);\n    const arr = [];\n    for (let y = start; y <= end; y++) arr.push(y);\n    return arr;\n  };\n  const selectDate = d => {\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    onChange && onChange(iso);\n  };\n  const selected = date ? new Date(date) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-calendar\",\n    style: {\n      padding: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cal-head\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '6px 4px',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small\",\n        onClick: () => {\n          const m = viewMonth - 1;\n          if (m < 0) {\n            setViewYear(v => v - 1);\n            setViewMonth(11);\n          } else setViewMonth(m);\n        },\n        children: '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"cal-select\",\n            value: viewMonth,\n            onChange: e => setViewMonth(Number(e.target.value)),\n            \"aria-label\": \"Select month\",\n            style: {\n              padding: 6,\n              borderRadius: 6,\n              minWidth: 130,\n              background: '#fff',\n              color: '#0b3b52',\n              appearance: 'auto'\n            },\n            children: monthNames.map((mn, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: idx,\n              children: mn\n            }, mn, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 42\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"cal-select\",\n            value: viewYear,\n            onChange: e => setViewYear(Number(e.target.value)),\n            \"aria-label\": \"Select year\",\n            style: {\n              padding: 6,\n              borderRadius: 6,\n              minWidth: 110,\n              background: '#fff',\n              color: '#0b3b52',\n              appearance: 'auto'\n            },\n            children: getYearOptions(viewYear).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 50\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"small\",\n          onClick: () => {\n            const m = viewMonth + 1;\n            if (m > 11) {\n              setViewYear(v => v + 1);\n              setViewMonth(0);\n            } else setViewMonth(m);\n          },\n          children: '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7,1fr)',\n        gap: 4,\n        marginTop: 8,\n        color: '#64748b',\n        fontSize: 12,\n        fontWeight: 700,\n        textAlign: 'center'\n      },\n      children: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: weeks.map((week, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7,1fr)',\n          gap: 4,\n          marginBottom: 4\n        },\n        children: week.map(d => {\n          const inMonth = d.getMonth() === viewMonth;\n          const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => inMonth && selectDate(d),\n            style: {\n              padding: 10,\n              borderRadius: 6,\n              border: 'none',\n              background: isSelected ? 'var(--primary)' : inMonth ? '#f8fafc' : 'transparent',\n              color: isSelected ? '#fff' : inMonth ? '#0b3b52' : '#94a3b8',\n              cursor: inMonth ? 'pointer' : 'default'\n            },\n            children: d.getDate()\n          }, d.toISOString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cal-footer\",\n      style: {\n        padding: 8,\n        marginTop: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const td = new Date();\n          const iso = `${td.getFullYear()}-${String(td.getMonth() + 1).padStart(2, '0')}-${String(td.getDate()).padStart(2, '0')}`;\n          setViewMonth(td.getMonth());\n          setViewYear(td.getFullYear());\n          onChange && onChange(iso);\n        },\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"+WjzgPy1E1H6pbTexAGZoB0CTbk=\");\n_c = Calendar;\nfunction MapClickHandler({\n  onMapClick\n}) {\n  _s2();\n  useMapEvents({\n    click: e => onMapClick && onMapClick({\n      latitude: e.latlng.lat,\n      longitude: e.latlng.lng\n    })\n  });\n  return null;\n}\n_s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = MapClickHandler;\nfunction getParameterStatus(key, value) {\n  // value may be numeric or string; handle Water Quality specially\n  if (key === 'Water Quality') {\n    const s = String(value || '').toLowerCase();\n    if (s.includes('non')) return {\n      label: 'Non Complying',\n      cls: 'status-poor'\n    };\n    if (s.includes('comp')) return {\n      label: 'Complying',\n      cls: 'status-good'\n    };\n    return {\n      label: String(value || ''),\n      cls: 'status-na'\n    };\n  }\n  const v = Number(value);\n  switch (key) {\n    case 'pH':\n      if (v >= 6.5 && v <= 8.5) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v >= 6.0 && v <= 9.0) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    case 'DO (mg/L)':\n    case 'DO':\n      if (v >= 5.0) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v >= 3.0) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    case 'BOD (mg/L)':\n    case 'BOD':\n      if (v <= 3.0) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v <= 6.0) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    case 'FC MPN/100ml':\n    case 'TC MPN/100ml':\n    case 'FC':\n    case 'TC':\n      if (isNaN(v)) return {\n        label: String(value),\n        cls: 'status-na'\n      };\n      if (v < 500) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v <= 1000) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    default:\n      return {\n        label: String(value),\n        cls: 'status-na'\n      };\n  }\n}\nexport default function App() {\n  _s3();\n  const [route, setRoute] = useState('home');\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]);\n  const [sampleCount, setSampleCount] = useState(5);\n  const [interpLoading, setInterpLoading] = useState(false);\n  const [startInput, setStartInput] = useState('');\n  const [endInput, setEndInput] = useState('');\n  const [selectMode, setSelectMode] = useState(null);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [startRiver, setStartRiver] = useState(null);\n  const [endRiver, setEndRiver] = useState(null);\n  const [startStationName, setStartStationName] = useState(null);\n  const [endStationName, setEndStationName] = useState(null);\n  const [mapInst, setMapInst] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  });\n\n  // fetch predictions for month/year whenever date changes\n  useEffect(() => {\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number);\n    let mounted = true;\n    (async () => {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\n        const body = await res.json();\n        const byId = {};\n        for (const item of body.predictions || []) {\n          // try match by id or location name\n          const loc = puneLocations.find(l => l.id === item.id || l.name === item.location || l.name === item.location_name);\n          if (loc) byId[loc.id] = item.values || item;\n        }\n        if (mounted) setPredictions(byId);\n      } catch (err) {\n        // ignore\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, [selectedDate]);\n  const handleMapClick = useCallback(pt => {\n    if (selectMode === 'start') setStartPoint(pt);else if (selectMode === 'end') setEndPoint(pt);\n  }, [selectMode]);\n  const handleMarkerClick = loc => {\n    // In interpolate route, if user is picking start or end, set them from known station\n    if (route === 'interpolate' && selectMode === 'start') {\n      const coord = loc.coordinate || loc;\n      setStartPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setStartRiver(loc.river || null);\n      setStartStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    if (route === 'interpolate' && selectMode === 'end') {\n      // guard: do not allow picking end on a different river than start\n      if (startRiver && loc.river && startRiver !== loc.river) {\n        alert('Please pick an end station on the same river as the start station.');\n        setSelectMode(null);\n        return;\n      }\n      const coord = loc.coordinate || loc;\n      setEndPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setEndRiver(loc.river || null);\n      setEndStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    // default behaviour: open details\n    setSelected(loc);\n    // attach available prediction\n    const pred = predictions[loc.id] || null;\n    setSelected(prev => ({\n      ...loc,\n      prediction: pred\n    }));\n  };\n  const performInterpolation = async () => {\n    if (!startPoint || !endPoint) return alert('Pick start and end');\n    setInterpLoading(true);\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\n    const nearestIndex = pt => {\n      let best = 0,\n        bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPoint),\n      ei = nearestIndex(endPoint);\n    const a = Math.min(si, ei),\n      b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true,\n      blend: 'river',\n      start_station_name: startStationName,\n      end_station_name: endStationName\n    };\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) return alert('Server: ' + jb.error);\n      const pts = jb.predictions || [];\n      setInterpPoints(pts);\n      // fit map to interpolated points if we have a map instance\n      try {\n        if (mapInst && pts && pts.length > 0) {\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\n          mapInst.fitBounds(latlngs, {\n            padding: [40, 40]\n          });\n        }\n      } catch (e) {}\n    } catch (err) {\n      alert('Request failed');\n    } finally {\n      setInterpLoading(false);\n    }\n  };\n  function haversineKm(a, b) {\n    if (!a || !b) return 0;\n    const toRad = v => v * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(b.latitude - a.latitude);\n    const dLon = toRad(b.longitude - a.longitude);\n    const lat1 = toRad(a.latitude);\n    const lat2 = toRad(b.latitude);\n    const sinDlat = Math.sin(dLat / 2),\n      sinDlon = Math.sin(dLon / 2);\n    const aa = sinDlat * sinDlat + sinDlon * sinDlon * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1 - aa));\n    return R * c;\n  }\n  const copyCoord = pt => {\n    if (!pt) return;\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\n    try {\n      navigator.clipboard && navigator.clipboard.writeText(s);\n    } catch (e) {}\n  };\n  const clearStart = () => {\n    setStartPoint(null);\n    setInterpPoints([]);\n  };\n  const clearEnd = () => {\n    setEndPoint(null);\n    setInterpPoints([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-hero\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo\",\n                children: /*#__PURE__*/_jsxDEV(FaWater, {\n                  size: 28,\n                  color: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"RiverWatch \\u2014 Pune Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"muted\",\n                  children: \"Water quality predictions for Pune rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col rivers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula\",\n                    children: \"Mula\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mutha\",\n                    children: \"Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula-mutha\",\n                    children: \"Mula-Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula-Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col params\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-names\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"DO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"BOD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"FC/TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 50\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-cta\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setRoute('predict'),\n                children: \"Go to Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"secondary\",\n                onClick: () => setRoute('interpolate'),\n                children: \"Go to Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          style: {\n            height: 'calc(100vh - 36px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [puneCenter.latitude, puneCenter.longitude],\n            zoom: puneCenter.zoom,\n            className: \"map\",\n            whenCreated: m => setMapInst(m),\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n              onMapClick: handleMapClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), puneLocations.map(loc => {\n              const pred = predictions[loc.id] || null;\n              const entries = pred ? canonicalizePredictionEntries(pred) : [];\n              const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n              const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\n              const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\n              return /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [loc.coordinate.latitude, loc.coordinate.longitude],\n                pathOptions: {\n                  color: getRiverColor(loc.river),\n                  fillColor: getRiverColor(loc.river),\n                  fillOpacity: 0.9\n                },\n                radius: 8,\n                eventHandlers: {\n                  click: () => handleMarkerClick(loc)\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-card\",\n                    style: {\n                      minWidth: 260\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-title\",\n                          children: cleanQualityString(loc.name)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 398,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-sub muted\",\n                          style: {\n                            display: 'flex',\n                            gap: 8,\n                            alignItems: 'center',\n                            marginTop: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                            children: cleanQualityString(loc.river)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 400,\n                            columnNumber: 33\n                          }, this), overallValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${overallStatus ? overallStatus.cls : 'status-na'}`,\n                            children: overallValue\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 401,\n                            columnNumber: 49\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 399,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 397,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 27\n                    }, this), pred ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-grid\",\n                      children: entries.filter(([k]) => {\n                        const key = String(k).toLowerCase();\n                        return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n                      }).map(([k, v]) => {\n                        const value = formatValue(k, v);\n                        const s = getParameterStatus(k, v);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"param-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-name\",\n                            children: k\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 418,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-value\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"val-text\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 420,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: `badge ${s.cls}`,\n                              style: {\n                                marginLeft: 8\n                              },\n                              children: s.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 421,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 419,\n                            columnNumber: 39\n                          }, this)]\n                        }, k, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this)\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this);\n            }), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [startPoint.latitude, startPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 58\n            }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [endPoint.latitude, endPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 56\n            }, this) : null, route === 'interpolate' && interpPoints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                positions: interpPoints.map(p => [p.latitude, p.longitude]),\n                pathOptions: {\n                  color: '#0077b6',\n                  weight: 3,\n                  opacity: 0.7\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), interpPoints.map((pt, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [pt.latitude, pt.longitude],\n                radius: 6,\n                pathOptions: {\n                  color: '#0077b6',\n                  fillColor: '#00b4d8',\n                  fillOpacity: 0.9\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minWidth: 220\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Interpolated\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 443,\n                          columnNumber: 38\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`,\n                        children: cleanQualityString(pt['Water Quality'])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 31\n                    }, this), (() => {\n                      const rawPH = pt['pH'];\n                      const pHVal = rawPH === null || rawPH === undefined ? '—' : Number(rawPH).toFixed(3);\n                      const pHStatus = getParameterStatus('pH', pt['pH']);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          marginTop: 8,\n                          borderTop: '1px solid #edf2f7',\n                          paddingTop: 8\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 13,\n                            color: '#334155',\n                            fontWeight: 700\n                          },\n                          children: \"pH\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 18,\n                              fontWeight: 800,\n                              color: '#0b3b52'\n                            },\n                            children: pHVal\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 456,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${pHStatus.cls}`,\n                            children: pHStatus.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 457,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 35\n                      }, this);\n                    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: (() => {\n                        const entries = canonicalizePredictionEntries(pt);\n                        const find = substr => entries.find(([k]) => k && k.toLowerCase().includes(substr));\n                        const showOrder = [['pH', 'pH'], ['do', 'DO (mg/L)'], ['bod', 'BOD (mg/L)']];\n                        return showOrder.map(([substr, displayKey]) => {\n                          const ent = find(substr);\n                          if (!ent) return null;\n                          const [k, v] = ent;\n                          const s = getParameterStatus(k, v);\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                              alignItems: 'center',\n                              marginTop: 6\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                color: '#334155'\n                              },\n                              children: displayKey\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 476,\n                              columnNumber: 51\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: 8\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  fontWeight: 700\n                                },\n                                children: formatValue(k, v)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 478,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: `badge ${s.cls}`,\n                                children: s.label\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 479,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 477,\n                              columnNumber: 51\n                            }, this)]\n                          }, k, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 475,\n                            columnNumber: 49\n                          }, this);\n                        });\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"detail-panel\",\n        style: {\n          width: 360\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8,\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('home'),\n            className: \"small\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('interpolate'),\n            className: \"small primary\",\n            children: \"Interpolate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), route === 'interpolate' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls-row\",\n              style: {\n                marginBottom: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n                className: selectMode === 'start' ? 'active small primary' : '',\n                children: \"Pick Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n                className: selectMode === 'end' ? 'active small primary' : '',\n                children: \"Pick End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectMode(null);\n                  setInterpPoints([]);\n                  setStartPoint(null);\n                  setEndPoint(null);\n                },\n                className: \"small\",\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 8,\n                color: '#0b3b52',\n                fontSize: 13\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick stations only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 75\n              }, this), \" \\u2014 interpolation will use river-linear blending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 12,\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 0,\n                  fontSize: 13,\n                  color: '#475569'\n                },\n                children: \"Points k:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-box\",\n                type: \"number\",\n                min: 1,\n                max: 50,\n                value: sampleCount,\n                onChange: e => setSampleCount(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.min(50, (sampleCount || 1) + 1));\n                  },\n                  children: \"+1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.max(1, (sampleCount || 1) - 1));\n                  },\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: \"-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: startInput || (startPoint ? `${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setStartInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(startPoint);\n                  },\n                  disabled: !startPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setStartInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 435\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearStart();\n                    setStartInput('');\n                    setStartRiver(null);\n                  },\n                  disabled: !startPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 167\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: endInput || (endPoint ? `${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setEndInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(endPoint);\n                  },\n                  disabled: !endPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setEndInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 431\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearEnd();\n                    setEndInput('');\n                    setEndRiver(null);\n                  },\n                  disabled: !endPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 159\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Distance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#233249'\n                  },\n                  children: startPoint && endPoint ? `${haversineKm(startPoint, endPoint).toFixed(2)} km` : '—'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 12\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-primary\",\n                  onClick: performInterpolation,\n                  disabled: !startPoint || !endPoint || interpLoading,\n                  children: interpLoading ? 'Interpolating…' : 'Interpolate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(selectedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cleanQualityString(selected.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                  children: cleanQualityString(selected.river)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 24\n                }, this), \" \\u2022 \", selected.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this), selected.prediction ? (() => {\n                const entries = canonicalizePredictionEntries(selected.prediction);\n                const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n                if (overall) {\n                  const s = getParameterStatus('Water Quality', overall[1]);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `badge ${s ? s.cls : 'status-na'}`,\n                    children: cleanQualityString(String(overall[1]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 30\n                  }, this);\n                }\n                return null;\n              })() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: canonicalizePredictionEntries(selected.prediction).filter(([k]) => {\n                const key = String(k).toLowerCase();\n                return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n              }).map(([k, v]) => {\n                const value = formatValue(k, v);\n                const s = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"value\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"val-text\",\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `badge ${s.cls}`,\n                      children: s.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 29\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            style: {\n              marginTop: 12\n            },\n            children: \"Select a location on the map to see details here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"mEwHC7N0oqoIArNwcyRjRj89aao=\");\n_c3 = App;\nfunction formatValue(key, value) {\n  if (value === null || value === undefined) return '—';\n  const n = Number(value);\n  if (!Number.isNaN(n)) {\n    if (/pH/i.test(key)) return n.toFixed(2);\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\n    return String(n);\n  }\n  return String(value);\n}\nfunction cleanQualityString(quality) {\n  if (quality === null || quality === undefined) return quality;\n  let s = String(quality).trim();\n  if (!s) return s;\n  // normalize whitespace\n  s = s.replace(/\\s+/g, ' ');\n  // remove duplicated trailing punctuation and normalize\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\n  if (m && m[1]) return m[1].trim();\n  // fallback: if full-string repeated twice (older regex)\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\n  return m2 ? m2[1].trim() : s;\n}\nfunction canonicalizePredictionEntries(pred) {\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\n  if (!pred || typeof pred !== 'object') return [];\n  const map = new Map();\n  for (const [k, v] of Object.entries(pred)) {\n    const key = String(k).trim();\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\n    // map some common aliases\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\n    map.set(canonical, {\n      key: key,\n      value: v\n    });\n  }\n  // return in insertion order but using original key casing for display\n  return Array.from(map.values()).map(x => [x.key, x.value]);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"MapClickHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MapContainer","TileLayer","Marker","Popup","CircleMarker","Polyline","useMapEvents","L","FaWater","puneLocations","puneCenter","getRiverColor","riverPaths","preSampledRiver","riverDescriptions","FaCopy","FaTrash","FaPaste","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Calendar","date","onChange","_s","base","Date","viewMonth","setViewMonth","getMonth","viewYear","setViewYear","getFullYear","d","startOfMonth","y","m","daysInMonth","getDate","weeks","firstDay","getDay","leading","total","rows","Math","ceil","day","r","week","c","cellDate","push","monthName","toLocaleString","undefined","month","monthNames","Array","from","length","_","i","getYearOptions","center","cy","start","max","end","arr","selectDate","iso","String","padStart","selected","className","style","padding","children","display","justifyContent","alignItems","gap","onClick","v","fileName","_jsxFileName","lineNumber","columnNumber","value","e","Number","target","borderRadius","minWidth","background","color","appearance","map","mn","idx","gridTemplateColumns","marginTop","fontSize","fontWeight","textAlign","marginBottom","inMonth","isSelected","border","cursor","toISOString","td","_c","MapClickHandler","onMapClick","_s2","click","latitude","latlng","lat","longitude","lng","_c2","getParameterStatus","key","s","toLowerCase","includes","label","cls","isNaN","App","_s3","route","setRoute","predictions","setPredictions","setSelected","interpPoints","setInterpPoints","sampleCount","setSampleCount","interpLoading","setInterpLoading","startInput","setStartInput","endInput","setEndInput","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","startRiver","setStartRiver","endRiver","setEndRiver","startStationName","setStartStationName","endStationName","setEndStationName","mapInst","setMapInst","selectedDate","setSelectedDate","slice","split","mounted","res","fetch","body","json","byId","item","loc","find","l","id","name","location","location_name","values","err","handleMapClick","pt","handleMarkerClick","coord","coordinate","toFixed","river","alert","pred","prev","prediction","performInterpolation","nearestIndex","best","bestD","Infinity","dlat","dlng","d2","si","ei","a","min","b","sub","locations","points","year","pick_from_input","blend","start_station_name","end_station_name","method","headers","JSON","stringify","jb","error","pts","latlngs","p","fitBounds","haversineKm","toRad","PI","R","dLat","dLon","lat1","lat2","sinDlat","sin","sinDlon","aa","cos","atan2","sqrt","copyCoord","navigator","clipboard","writeText","clearStart","clearEnd","flex","size","height","zoom","whenCreated","url","entries","canonicalizePredictionEntries","overallEntry","k","overallValue","cleanQualityString","overallStatus","pathOptions","fillColor","fillOpacity","radius","eventHandlers","replace","filter","formatValue","marginLeft","position","positions","weight","opacity","rawPH","pHVal","pHStatus","borderTop","paddingTop","substr","showOrder","displayKey","ent","width","margin","type","readOnly","onBlur","trim","parts","x","Boolean","lon","onKeyDown","blur","placeholder","disabled","t","readText","title","toLocaleDateString","description","overall","_c3","n","test","quality","match","m2","Map","Object","norm","canonical","set","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver, riverDescriptions } from './locations';\r\nimport { FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction Calendar({ date, onChange }) {\r\n  // full month grid calendar (always visible in sidebar)\r\n  const base = date ? new Date(date) : new Date();\r\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\r\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\r\n\r\n  React.useEffect(() => {\r\n    const d = date ? new Date(date) : new Date();\r\n    setViewMonth(d.getMonth());\r\n    setViewYear(d.getFullYear());\r\n  }, [date]);\r\n\r\n  const startOfMonth = (y, m) => new Date(y, m, 1);\r\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\r\n\r\n  const weeks = [];\r\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\r\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\r\n  const total = leading + daysInMonth(viewYear, viewMonth);\r\n  const rows = Math.ceil(total / 7);\r\n\r\n  let day = 1 - leading;\r\n  for (let r = 0; r < rows; r++) {\r\n    const week = [];\r\n    for (let c = 0; c < 7; c++, day++) {\r\n      const cellDate = new Date(viewYear, viewMonth, day);\r\n      week.push(cellDate);\r\n    }\r\n    weeks.push(week);\r\n  }\r\n\r\n  const monthName = new Date(viewYear, viewMonth).toLocaleString(undefined, { month: 'long' });\r\n  const monthNames = Array.from({length:12}, (_,i)=> new Date(2000, i).toLocaleString(undefined, { month: 'long' }));\r\n  const getYearOptions = (center) => {\r\n  const cy = (new Date()).getFullYear();\r\n  // provide a wide range: +/- 100 years around the current view year\r\n  const start = Math.max(center - 100, 1900); // floor to 1900 for safety\r\n  const end = Math.max(center + 100, cy + 100);\r\n  const arr = [];\r\n  for (let y = start; y <= end; y++) arr.push(y);\r\n  return arr;\r\n  };\r\n\r\n  const selectDate = (d) => {\r\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\r\n    onChange && onChange(iso);\r\n  };\r\n\r\n  const selected = date ? new Date(date) : null;\r\n\r\n  return (\r\n    <div className=\"inline-calendar\" style={{padding:8}}>\r\n      <div className=\"cal-head\" style={{display:'flex',justifyContent:'space-between',alignItems:'center',padding:'6px 4px',gap:8}}>\r\n        <button className=\"small\" onClick={() => { const m = viewMonth - 1; if (m < 0) { setViewYear(v => v - 1); setViewMonth(11); } else setViewMonth(m); }}>{'◀'}</button>\r\n\r\n        <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n          <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n            <select\r\n              className=\"cal-select\"\r\n              value={viewMonth}\r\n              onChange={e=>setViewMonth(Number(e.target.value))}\r\n              aria-label=\"Select month\"\r\n              style={{padding:6,borderRadius:6,minWidth:130,background:'#fff',color:'#0b3b52',appearance:'auto'}}\r\n            >\r\n              {monthNames.map((mn,idx)=> <option key={mn} value={idx}>{mn}</option>)}\r\n            </select>\r\n            <select\r\n              className=\"cal-select\"\r\n              value={viewYear}\r\n              onChange={e=>setViewYear(Number(e.target.value))}\r\n              aria-label=\"Select year\"\r\n              style={{padding:6,borderRadius:6,minWidth:110,background:'#fff',color:'#0b3b52',appearance:'auto'}}\r\n            >\r\n              {getYearOptions(viewYear).map(y => <option key={y} value={y}>{y}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n          <button className=\"small\" onClick={() => { const m = viewMonth + 1; if (m > 11) { setViewYear(v => v + 1); setViewMonth(0); } else setViewMonth(m); }}>{'▶'}</button>\r\n        </div>\r\n      </div>\r\n      <div style={{display:'grid',gridTemplateColumns:'repeat(7,1fr)',gap:4,marginTop:8,color:'#64748b',fontSize:12,fontWeight:700,textAlign:'center'}}>\r\n        {['Mo','Tu','We','Th','Fr','Sa','Su'].map(d=> <div key={d}>{d}</div>)}\r\n      </div>\r\n  <div style={{marginTop:8}}>\r\n        {weeks.map((week, i) => (\r\n          <div key={i} style={{display:'grid',gridTemplateColumns:'repeat(7,1fr)',gap:4,marginBottom:4}}>\r\n            {week.map((d) => {\r\n              const inMonth = d.getMonth() === viewMonth;\r\n              const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\r\n              return (\r\n                <button\r\n                  key={d.toISOString()}\r\n                  onClick={() => inMonth && selectDate(d)}\r\n                  style={{\r\n                    padding:10,\r\n                    borderRadius:6,\r\n                    border:'none',\r\n                    background: isSelected ? 'var(--primary)' : (inMonth ? '#f8fafc' : 'transparent'),\r\n                    color: isSelected ? '#fff' : (inMonth ? '#0b3b52' : '#94a3b8'),\r\n                    cursor: inMonth ? 'pointer' : 'default'\r\n                  }}\r\n                >{d.getDate()}</button>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"cal-footer\" style={{padding:8,marginTop:6}}>\r\n        <button onClick={() => {\r\n          const td = new Date();\r\n          const iso = `${td.getFullYear()}-${String(td.getMonth() + 1).padStart(2, '0')}-${String(td.getDate()).padStart(2, '0')}`;\r\n          setViewMonth(td.getMonth());\r\n          setViewYear(td.getFullYear());\r\n          onChange && onChange(iso);\r\n        }}>Today</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MapClickHandler({ onMapClick }) {\r\n  useMapEvents({ click: (e) => onMapClick && onMapClick({ latitude: e.latlng.lat, longitude: e.latlng.lng }) });\r\n  return null;\r\n}\r\n\r\nfunction getParameterStatus(key, value) {\r\n  // value may be numeric or string; handle Water Quality specially\r\n  if (key === 'Water Quality') {\r\n    const s = String(value || '').toLowerCase();\r\n    if (s.includes('non')) return { label: 'Non Complying', cls: 'status-poor' };\r\n    if (s.includes('comp')) return { label: 'Complying', cls: 'status-good' };\r\n    return { label: String(value || ''), cls: 'status-na' };\r\n  }\r\n\r\n  const v = Number(value);\r\n  switch (key) {\r\n    case 'pH':\r\n      if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n      if (v >= 6.0 && v <= 9.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    case 'DO (mg/L)':\r\n    case 'DO':\r\n      if (v >= 5.0) return { label: 'Good', cls: 'status-good' };\r\n      if (v >= 3.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    case 'BOD (mg/L)':\r\n    case 'BOD':\r\n      if (v <= 3.0) return { label: 'Good', cls: 'status-good' };\r\n      if (v <= 6.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    case 'FC MPN/100ml':\r\n    case 'TC MPN/100ml':\r\n    case 'FC':\r\n    case 'TC':\r\n      if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n      if (v < 500) return { label: 'Good', cls: 'status-good' };\r\n      if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    default:\r\n      return { label: String(value), cls: 'status-na' };\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const [route, setRoute] = useState('home');\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]);\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [interpLoading, setInterpLoading] = useState(false);\r\n  const [startInput, setStartInput] = useState('');\r\n  const [endInput, setEndInput] = useState('');\r\n  const [selectMode, setSelectMode] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [startRiver, setStartRiver] = useState(null);\r\n  const [endRiver, setEndRiver] = useState(null);\r\n  const [startStationName, setStartStationName] = useState(null);\r\n  const [endStationName, setEndStationName] = useState(null);\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`;\r\n  });\r\n\r\n  // fetch predictions for month/year whenever date changes\r\n  useEffect(() => {\r\n    const [y, m] = selectedDate.slice(0,7).split('-').map(Number);\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\r\n        const body = await res.json();\r\n        const byId = {};\r\n        for (const item of (body.predictions || [])) {\r\n          // try match by id or location name\r\n          const loc = puneLocations.find(l => l.id === item.id || l.name === item.location || l.name === item.location_name);\r\n          if (loc) byId[loc.id] = item.values || item;\r\n        }\r\n        if (mounted) setPredictions(byId);\r\n      } catch (err) {\r\n        // ignore\r\n      }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, [selectedDate]);\r\n\r\n  const handleMapClick = useCallback((pt) => {\r\n    if (selectMode === 'start') setStartPoint(pt);\r\n    else if (selectMode === 'end') setEndPoint(pt);\r\n  }, [selectMode]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    // In interpolate route, if user is picking start or end, set them from known station\r\n    if (route === 'interpolate' && selectMode === 'start') {\r\n      const coord = loc.coordinate || loc;\r\n      setStartPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setStartRiver(loc.river || null);\r\n  setStartStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    if (route === 'interpolate' && selectMode === 'end') {\r\n      // guard: do not allow picking end on a different river than start\r\n      if (startRiver && loc.river && startRiver !== loc.river) {\r\n        alert('Please pick an end station on the same river as the start station.');\r\n        setSelectMode(null);\r\n        return;\r\n      }\r\n      const coord = loc.coordinate || loc;\r\n      setEndPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setEndRiver(loc.river || null);\r\n  setEndStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    // default behaviour: open details\r\n    setSelected(loc);\r\n    // attach available prediction\r\n    const pred = predictions[loc.id] || null;\r\n    setSelected(prev => ({...loc, prediction: pred}));\r\n  };\r\n\r\n  const performInterpolation = async () => {\r\n  if (!startPoint || !endPoint) return alert('Pick start and end');\r\n  setInterpLoading(true);\r\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\r\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\r\n    const nearestIndex = (pt) => {\r\n      let best = 0, bestD = Infinity;\r\n      for (let i=0;i<preSampledRiver.length;i++){\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat*dlat + dlng*dlng;\r\n        if (d2 < bestD){ bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPoint), ei = nearestIndex(endPoint);\r\n    const a = Math.min(si, ei), b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b+1);\r\n    const d = new Date(selectedDate);\r\n  const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true, blend: 'river', start_station_name: startStationName, end_station_name: endStationName };\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) return alert('Server: '+jb.error);\r\n      const pts = jb.predictions || [];\r\n      setInterpPoints(pts);\r\n      // fit map to interpolated points if we have a map instance\r\n      try{\r\n        if (mapInst && pts && pts.length > 0){\r\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\r\n          mapInst.fitBounds(latlngs, { padding: [40,40] });\r\n        }\r\n      }catch(e){}\r\n    } catch (err) { alert('Request failed'); }\r\n    finally { setInterpLoading(false); }\r\n  };\r\n\r\n  function haversineKm(a, b) {\r\n    if (!a || !b) return 0;\r\n    const toRad = v => v * Math.PI / 180;\r\n    const R = 6371;\r\n    const dLat = toRad(b.latitude - a.latitude);\r\n    const dLon = toRad(b.longitude - a.longitude);\r\n    const lat1 = toRad(a.latitude);\r\n    const lat2 = toRad(b.latitude);\r\n    const sinDlat = Math.sin(dLat/2), sinDlon = Math.sin(dLon/2);\r\n    const aa = sinDlat*sinDlat + sinDlon*sinDlon * Math.cos(lat1)*Math.cos(lat2);\r\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1-aa));\r\n    return R * c;\r\n  }\r\n\r\n  const copyCoord = (pt) => {\r\n    if (!pt) return;\r\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\r\n    try { navigator.clipboard && navigator.clipboard.writeText(s); } catch(e) {}\r\n  };\r\n\r\n  const clearStart = () => { setStartPoint(null); setInterpPoints([]); };\r\n  const clearEnd = () => { setEndPoint(null); setInterpPoints([]); };\r\n\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <main className=\"main\" style={{display:'flex', gap:20}}>\r\n        <div style={{flex:1}}>\r\n          {route === 'home' ? (\r\n            <div className=\"home-page\">\r\n              <div className=\"home-card\">\r\n                <div className=\"home-hero\">\r\n                  <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                  <div>\r\n                    <h1>RiverWatch — Pune Rivers</h1>\r\n                    <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                  </div>\r\n                </div>\r\n                <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.</p>\r\n                <div className=\"columns\">\r\n                  <div className=\"col rivers\">\r\n                    <h3>Rivers</h3>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula\">Mula</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mutha\">Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula-mutha\">Mula-Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula-Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col center\">\r\n                    <h3>About</h3>\r\n                    <p>This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.</p>\r\n                  </div>\r\n                  <div className=\"col params\">\r\n                    <h3>Parameters</h3>\r\n                    <ul className=\"param-names\">\r\n                      <li><strong>pH</strong> <div className=\"desc\">Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.</div></li>\r\n                      <li><strong>DO</strong> <div className=\"desc\">Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.</div></li>\r\n                      <li><strong>BOD</strong> <div className=\"desc\">Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.</div></li>\r\n                      <li><strong>FC/TC</strong> <div className=\"desc\">Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.</div></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"home-cta\">\r\n                  <button onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                  <button className=\"secondary\" onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-content\" style={{height: 'calc(100vh - 36px)'}}>\r\n              <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m=>setMapInst(m)} style={{height:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MapClickHandler onMapClick={handleMapClick} />\r\n                {puneLocations.map(loc => {\r\n                  const pred = predictions[loc.id] || null;\r\n                  const entries = pred ? canonicalizePredictionEntries(pred) : [];\r\n                  const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                  const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\r\n                  const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\r\n\r\n                  return (\r\n                    <CircleMarker key={loc.id} center={[loc.coordinate.latitude, loc.coordinate.longitude]} pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity:0.9 }} radius={8} eventHandlers={{ click: () => handleMarkerClick(loc) }}>\r\n                      <Popup>\r\n                        <div className=\"popup-card\" style={{minWidth:260}}>\r\n                          <div className=\"popup-header\">\r\n                            <div>\r\n                              <div className=\"popup-title\">{cleanQualityString(loc.name)}</div>\r\n                              <div className=\"popup-sub muted\" style={{display:'flex',gap:8,alignItems:'center',marginTop:8}}>\r\n                                <span className={`river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(loc.river)}</span>\r\n                                {overallValue ? <div className={`badge ${overallStatus ? overallStatus.cls : 'status-na'}`}>{overallValue}</div> : null}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {pred ? (\r\n                            <div className=\"popup-grid\">\r\n                              {entries\r\n                                .filter(([k]) => {\r\n                                  const key = String(k).toLowerCase();\r\n                                  return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                                })\r\n                                .map(([k,v]) => {\r\n                                  const value = formatValue(k, v);\r\n                                  const s = getParameterStatus(k, v);\r\n                                  return (\r\n                                    <div className=\"param-row\" key={k}>\r\n                                      <div className=\"param-name\">{k}</div>\r\n                                      <div className=\"param-value\">\r\n                                        <span className=\"val-text\">{value}</span>\r\n                                        <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          ) : <div style={{marginTop:8}}>Loading...</div>}\r\n                        </div>\r\n                      </Popup>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n                {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n                {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n                {route === 'interpolate' && interpPoints.length > 0 && (\r\n                  <>\r\n                    <Polyline positions={interpPoints.map(p => [p.latitude, p.longitude])} pathOptions={{color:'#0077b6', weight:3, opacity:0.7}} />\r\n                    {interpPoints.map((pt, i) => (\r\n                      <CircleMarker key={i} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{color:'#0077b6', fillColor:'#00b4d8', fillOpacity:0.9}}>\r\n                          <Popup>\r\n                            <div style={{minWidth:220}}>\r\n                              <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n                                <div><strong>Interpolated</strong></div>\r\n                                <div className={`badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`}>{cleanQualityString(pt['Water Quality'])}</div>\r\n                              </div>\r\n\r\n                              {/* prominent pH row */}\r\n                              {(() => {\r\n                                const rawPH = pt['pH'];\r\n                                const pHVal = (rawPH === null || rawPH === undefined) ? '—' : (Number(rawPH).toFixed(3));\r\n                                const pHStatus = getParameterStatus('pH', pt['pH']);\r\n                                return (\r\n                                  <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:8,borderTop:'1px solid #edf2f7',paddingTop:8}}>\r\n                                    <div style={{fontSize:13,color:'#334155',fontWeight:700}}>pH</div>\r\n                                    <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                      <div style={{fontSize:18,fontWeight:800,color:'#0b3b52'}}>{pHVal}</div>\r\n                                      <div className={`badge ${pHStatus.cls}`}>{pHStatus.label}</div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })()}\r\n\r\n                                        {/* show only the three parameters the user requested: pH, DO, BOD */}\r\n                                        <div style={{marginTop:8}}>\r\n                                          {(() => {\r\n                                            const entries = canonicalizePredictionEntries(pt);\r\n                                            const find = (substr) => entries.find(([k]) => k && k.toLowerCase().includes(substr));\r\n                                            const showOrder = [ ['pH','pH'], ['do','DO (mg/L)'], ['bod','BOD (mg/L)'] ];\r\n                                            return showOrder.map(([substr, displayKey]) => {\r\n                                              const ent = find(substr);\r\n                                              if (!ent) return null;\r\n                                              const [k, v] = ent;\r\n                                              const s = getParameterStatus(k, v);\r\n                                              return (\r\n                                                <div key={k} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:6}}>\r\n                                                  <div style={{color:'#334155'}}>{displayKey}</div>\r\n                                                  <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                                    <div style={{fontWeight:700}}>{formatValue(k,v)}</div>\r\n                                                    <div className={`badge ${s.cls}`}>{s.label}</div>\r\n                                                  </div>\r\n                                                </div>\r\n                                              );\r\n                                            });\r\n                                          })()}\r\n                                        </div>\r\n                            </div>\r\n                          </Popup>\r\n                        </CircleMarker>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </MapContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* right sidebar: show only on inner pages (not on Home) */}\r\n        {route !== 'home' && (\r\n          <aside className=\"detail-panel\" style={{width:360}}>\r\n          <div style={{display:'flex', justifyContent:'flex-end', gap:8, padding:8}}>\r\n            <button onClick={()=>setRoute('home')} className=\"small\">Home</button>\r\n            <button onClick={()=>setRoute('interpolate')} className=\"small primary\">Interpolate</button>\r\n          </div>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d=>setSelectedDate(d)} />\r\n          </div>\r\n\r\n          {route === 'interpolate' && (\r\n            <div style={{marginTop:12}}>\r\n              <div className=\"control-card\">\r\n                <div className=\"controls-row\" style={{marginBottom:8}}>\r\n                  <button onClick={()=>setSelectMode(selectMode==='start'?null:'start')} className={selectMode==='start'?'active small primary':''}>Pick Start</button>\r\n                  <button onClick={()=>setSelectMode(selectMode==='end'?null:'end')} className={selectMode==='end'?'active small primary':''}>Pick End</button>\r\n                  <button onClick={()=>{ setSelectMode(null); setInterpPoints([]); setStartPoint(null); setEndPoint(null); }} className=\"small\">Reset</button>\r\n                </div>\r\n                <div style={{marginBottom:8,color:'#0b3b52',fontSize:13}}><strong>Pick stations only</strong> — interpolation will use river-linear blending</div>\r\n\r\n                <div style={{display:'flex',gap:12,alignItems:'center',marginBottom:10}}>\r\n                  <label style={{margin:0,fontSize:13,color:'#475569'}}>Points k:</label>\r\n                  <input className=\"input-box\" type=\"number\" min={1} max={50} value={sampleCount} onChange={e=>setSampleCount(Number(e.target.value))} />\r\n                  <div style={{marginLeft:'auto'}}>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.min(50, (sampleCount||1)+1) ); }}>+1</button>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.max(1, (sampleCount||1)-1) ); }} style={{marginLeft:6}}>-1</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">Start</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={startInput || (startPoint?`${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}`:'')} onChange={e=>setStartInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(startPoint); }} disabled={!startPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setStartInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearStart(); setStartInput(''); setStartRiver(null); }} disabled={!startPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">End</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={endInput || (endPoint?`${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}`:'')} onChange={e=>setEndInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(endPoint); }} disabled={!endPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setEndInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearEnd(); setEndInput(''); setEndRiver(null); }} disabled={!endPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{marginTop:8,display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n                  <div className=\"muted\">Distance: <strong style={{color:'#233249'}}>{(startPoint && endPoint)?`${haversineKm(startPoint,endPoint).toFixed(2)} km`:'—'}</strong></div>\r\n                  <div style={{marginLeft:12}}>\r\n                    <button className=\"btn-primary\" onClick={performInterpolation} disabled={!startPoint || !endPoint || interpLoading}>{interpLoading ? 'Interpolating…' : 'Interpolate'}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{marginTop:16}}>\r\n            <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n                {selected ? (\r\n              <div style={{marginTop:12}}>\r\n                <h3>{cleanQualityString(selected.name)}</h3>\r\n                <div className=\"muted\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n                  <div><span className={`river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(selected.river)}</span> • {selected.description}</div>\r\n                  {selected.prediction ? (() => {\r\n                    const entries = canonicalizePredictionEntries(selected.prediction);\r\n                    const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                    if (overall) {\r\n                      const s = getParameterStatus('Water Quality', overall[1]);\r\n                      return <div className={`badge ${s ? s.cls : 'status-na'}`}>{cleanQualityString(String(overall[1]))}</div>;\r\n                    }\r\n                    return null;\r\n                  })() : null}\r\n                </div>\r\n                <h4 style={{marginTop:8}}>Prediction</h4>\r\n                {selected.prediction ? (\r\n                  <div>\r\n                    {canonicalizePredictionEntries(selected.prediction)\r\n                      .filter(([k]) => {\r\n                        const key = String(k).toLowerCase();\r\n                        return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                      })\r\n                      .map(([k,v])=>{\r\n                        const value = formatValue(k, v);\r\n                        const s = getParameterStatus(k,v);\r\n                        return (\r\n                          <div key={k} className=\"inline-param-row\">\r\n                            <div className=\"label\">{k}</div>\r\n                            <div className=\"value\"><div className=\"val-text\">{value}</div><div className={`badge ${s.cls}`}>{s.label}</div></div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : <div>Loading...</div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"placeholder\" style={{marginTop:12}}>Select a location on the map to see details here.</div>\r\n            )}\r\n          </div>\r\n          </aside>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatValue(key, value) {\r\n  if (value === null || value === undefined) return '—';\r\n  const n = Number(value);\r\n  if (!Number.isNaN(n)) {\r\n    if (/pH/i.test(key)) return n.toFixed(2);\r\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\r\n    return String(n);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nfunction cleanQualityString(quality) {\r\n  if (quality === null || quality === undefined) return quality;\r\n  let s = String(quality).trim();\r\n  if (!s) return s;\r\n  // normalize whitespace\r\n  s = s.replace(/\\s+/g, ' ');\r\n  // remove duplicated trailing punctuation and normalize\r\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\r\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\r\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\r\n  if (m && m[1]) return m[1].trim();\r\n  // fallback: if full-string repeated twice (older regex)\r\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\r\n  return m2 ? m2[1].trim() : s;\r\n}\r\n\r\nfunction canonicalizePredictionEntries(pred) {\r\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\r\n  if (!pred || typeof pred !== 'object') return [];\r\n  const map = new Map();\r\n  for (const [k, v] of Object.entries(pred)) {\r\n    const key = String(k).trim();\r\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\r\n    // map some common aliases\r\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\r\n    map.set(canonical, { key: key, value: v });\r\n  }\r\n  // return in insertion order but using original key casing for display\r\n  return Array.from(map.values()).map(x => [x.key, x.value]);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}