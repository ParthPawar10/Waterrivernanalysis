{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver, riverDescriptions } from './locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction Calendar({\n  date,\n  onChange\n}) {\n  _s();\n  // full month grid calendar (always visible in sidebar)\n  const base = date ? new Date(date) : new Date();\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\n  React.useEffect(() => {\n    const d = date ? new Date(date) : new Date();\n    setViewMonth(d.getMonth());\n    setViewYear(d.getFullYear());\n  }, [date]);\n  const startOfMonth = (y, m) => new Date(y, m, 1);\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\n  const weeks = [];\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\n  const total = leading + daysInMonth(viewYear, viewMonth);\n  const rows = Math.ceil(total / 7);\n  let day = 1 - leading;\n  for (let r = 0; r < rows; r++) {\n    const week = [];\n    for (let c = 0; c < 7; c++, day++) {\n      const cellDate = new Date(viewYear, viewMonth, day);\n      week.push(cellDate);\n    }\n    weeks.push(week);\n  }\n  const monthName = new Date(viewYear, viewMonth).toLocaleString(undefined, {\n    month: 'long'\n  });\n  const selectDate = d => {\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    onChange && onChange(iso);\n  };\n  const selected = date ? new Date(date) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '6px 4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small\",\n        onClick: () => {\n          const m = viewMonth - 1;\n          if (m < 0) {\n            setViewYear(v => v - 1);\n            setViewMonth(11);\n          } else setViewMonth(m);\n        },\n        children: '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 700\n        },\n        children: [monthName, \", \", viewYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small\",\n        onClick: () => {\n          const m = viewMonth + 1;\n          if (m > 11) {\n            setViewYear(v => v + 1);\n            setViewMonth(0);\n          } else setViewMonth(m);\n        },\n        children: '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7,1fr)',\n        gap: 4,\n        marginTop: 8,\n        color: '#64748b',\n        fontSize: 12,\n        fontWeight: 700,\n        textAlign: 'center'\n      },\n      children: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: weeks.map((week, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7,1fr)',\n          gap: 4,\n          marginBottom: 4\n        },\n        children: week.map(d => {\n          const inMonth = d.getMonth() === viewMonth;\n          const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => inMonth && selectDate(d),\n            style: {\n              padding: 10,\n              borderRadius: 6,\n              border: 'none',\n              background: isSelected ? 'var(--primary)' : inMonth ? '#f8fafc' : 'transparent',\n              color: isSelected ? '#fff' : inMonth ? '#0b3b52' : '#94a3b8',\n              cursor: inMonth ? 'pointer' : 'default'\n            },\n            children: d.getDate()\n          }, d.toISOString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"+WjzgPy1E1H6pbTexAGZoB0CTbk=\");\n_c = Calendar;\nfunction MapClickHandler({\n  onMapClick\n}) {\n  _s2();\n  useMapEvents({\n    click: e => onMapClick && onMapClick({\n      latitude: e.latlng.lat,\n      longitude: e.latlng.lng\n    })\n  });\n  return null;\n}\n_s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = MapClickHandler;\nfunction getParameterStatus(key, value) {\n  // value may be numeric or string; handle Water Quality specially\n  if (key === 'Water Quality') {\n    const s = String(value || '').toLowerCase();\n    if (s.includes('non')) return {\n      label: 'Non Complying',\n      cls: 'status-poor'\n    };\n    if (s.includes('comp')) return {\n      label: 'Complying',\n      cls: 'status-good'\n    };\n    return {\n      label: String(value || ''),\n      cls: 'status-na'\n    };\n  }\n  const v = Number(value);\n  switch (key) {\n    case 'pH':\n      if (v >= 6.5 && v <= 8.5) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v >= 6.0 && v <= 9.0) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    case 'DO (mg/L)':\n    case 'DO':\n      if (v >= 5.0) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v >= 3.0) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    case 'BOD (mg/L)':\n    case 'BOD':\n      if (v <= 3.0) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v <= 6.0) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    case 'FC MPN/100ml':\n    case 'TC MPN/100ml':\n    case 'FC':\n    case 'TC':\n      if (isNaN(v)) return {\n        label: String(value),\n        cls: 'status-na'\n      };\n      if (v < 500) return {\n        label: 'Good',\n        cls: 'status-good'\n      };\n      if (v <= 1000) return {\n        label: 'Moderate',\n        cls: 'status-moderate'\n      };\n      return {\n        label: 'Poor',\n        cls: 'status-poor'\n      };\n    default:\n      return {\n        label: String(value),\n        cls: 'status-na'\n      };\n  }\n}\nexport default function App() {\n  _s3();\n  const [route, setRoute] = useState('home');\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]);\n  const [sampleCount, setSampleCount] = useState(5);\n  const [selectMode, setSelectMode] = useState(null);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [mapInst, setMapInst] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  });\n\n  // fetch predictions for month/year whenever date changes\n  useEffect(() => {\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number);\n    let mounted = true;\n    (async () => {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\n        const body = await res.json();\n        const byId = {};\n        for (const item of body.predictions || []) {\n          // try match by id or location name\n          const loc = puneLocations.find(l => l.id === item.id || l.name === item.location || l.name === item.location_name);\n          if (loc) byId[loc.id] = item.values || item;\n        }\n        if (mounted) setPredictions(byId);\n      } catch (err) {\n        // ignore\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, [selectedDate]);\n  const handleMapClick = useCallback(pt => {\n    if (selectMode === 'start') setStartPoint(pt);else if (selectMode === 'end') setEndPoint(pt);\n  }, [selectMode]);\n  const handleMarkerClick = loc => {\n    setSelected(loc);\n    // attach available prediction\n    const pred = predictions[loc.id] || null;\n    setSelected(prev => ({\n      ...loc,\n      prediction: pred\n    }));\n  };\n  const performInterpolation = async () => {\n    if (!startPoint || !endPoint) return alert('Pick start and end');\n    // find nearest indices in preSampledRiver\n    const nearestIndex = pt => {\n      let best = 0,\n        bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPoint),\n      ei = nearestIndex(endPoint);\n    const a = Math.min(si, ei),\n      b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true\n    };\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) return alert('Server: ' + jb.error);\n      setInterpPoints(jb.predictions || []);\n    } catch (err) {\n      alert('Request failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-hero\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo\",\n                children: /*#__PURE__*/_jsxDEV(FaWater, {\n                  size: 28,\n                  color: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"RiverWatch \\u2014 Pune Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"muted\",\n                  children: \"Water quality predictions for Pune rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col rivers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula\",\n                    children: \"Mula\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mutha\",\n                    children: \"Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula-mutha\",\n                    children: \"Mula-Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula-Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col params\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-names\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"DO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"BOD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"FC/TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 50\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-cta\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setRoute('predict'),\n                children: \"Go to Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"secondary\",\n                onClick: () => setRoute('interpolate'),\n                children: \"Go to Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          style: {\n            height: 'calc(100vh - 36px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [puneCenter.latitude, puneCenter.longitude],\n            zoom: puneCenter.zoom,\n            className: \"map\",\n            whenCreated: m => setMapInst(m),\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n              onMapClick: handleMapClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), puneLocations.map(loc => {\n              const pred = predictions[loc.id] || null;\n              const entries = pred ? canonicalizePredictionEntries(pred) : [];\n              const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n              const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\n              const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\n              return /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [loc.coordinate.latitude, loc.coordinate.longitude],\n                pathOptions: {\n                  color: getRiverColor(loc.river),\n                  fillColor: getRiverColor(loc.river),\n                  fillOpacity: 0.9\n                },\n                radius: 8,\n                eventHandlers: {\n                  click: () => handleMarkerClick(loc)\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-card\",\n                    style: {\n                      minWidth: 260\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-title\",\n                          children: cleanQualityString(loc.name)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-sub muted\",\n                          style: {\n                            display: 'flex',\n                            gap: 8,\n                            alignItems: 'center',\n                            marginTop: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                            children: cleanQualityString(loc.river)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 285,\n                            columnNumber: 33\n                          }, this), overallValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${overallStatus ? overallStatus.cls : 'status-na'}`,\n                            children: overallValue\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 286,\n                            columnNumber: 49\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 27\n                    }, this), pred ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-grid\",\n                      children: entries.filter(([k]) => {\n                        const key = String(k).toLowerCase();\n                        return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n                      }).map(([k, v]) => {\n                        const value = formatValue(k, v);\n                        const s = getParameterStatus(k, v);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"param-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-name\",\n                            children: k\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 303,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-value\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"val-text\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 305,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: `badge ${s.cls}`,\n                              style: {\n                                marginLeft: 8\n                              },\n                              children: s.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 306,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 304,\n                            columnNumber: 39\n                          }, this)]\n                        }, k, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 302,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this)\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this);\n            }), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [startPoint.latitude, startPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 58\n            }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [endPoint.latitude, endPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 56\n            }, this) : null, route === 'interpolate' && interpPoints.map((pt, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n              center: [pt.latitude, pt.longitude],\n              radius: 6,\n              pathOptions: {\n                color: '#0077b6',\n                fillColor: '#00b4d8',\n                fillOpacity: 0.9\n              },\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    minWidth: 180\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Interpolated\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 30\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"muted\",\n                    children: [\"Nearest: \", pt.nearest_location || '—']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    style: {\n                      marginTop: 6\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"pH: \", pt['pH']]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"DO: \", pt['DO (mg/L)']]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"detail-panel\",\n        style: {\n          width: 360\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8,\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('home'),\n            className: \"small\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('interpolate'),\n            className: \"small primary\",\n            children: \"Interpolate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), route === 'interpolate' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n              className: selectMode === 'start' ? 'active' : '',\n              children: \"Pick Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n              className: selectMode === 'end' ? 'active' : '',\n              children: \"Pick End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectMode(null);\n                setInterpPoints([]);\n                setStartPoint(null);\n                setEndPoint(null);\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Points k: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 1,\n                max: 50,\n                value: sampleCount,\n                onChange: e => setSampleCount(Number(e.target.value)),\n                style: {\n                  width: 80,\n                  marginLeft: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Start: \", startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"End: \", endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: performInterpolation,\n              children: \"Interpolate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(selectedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cleanQualityString(selected.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                  children: cleanQualityString(selected.river)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 24\n                }, this), \" \\u2022 \", selected.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), selected.prediction ? (() => {\n                const entries = canonicalizePredictionEntries(selected.prediction);\n                const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n                if (overall) {\n                  const s = getParameterStatus('Water Quality', overall[1]);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `badge ${s ? s.cls : 'status-na'}`,\n                    children: cleanQualityString(String(overall[1]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 30\n                  }, this);\n                }\n                return null;\n              })() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: canonicalizePredictionEntries(selected.prediction).filter(([k]) => {\n                const key = String(k).toLowerCase();\n                return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n              }).map(([k, v]) => {\n                const value = formatValue(k, v);\n                const s = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"value\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"val-text\",\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `badge ${s.cls}`,\n                      children: s.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 29\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            style: {\n              marginTop: 12\n            },\n            children: \"Select a location on the map to see details here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"eLPDTZx3ExnXMiJ/O9U/CvYaXdQ=\");\n_c3 = App;\nfunction formatValue(key, value) {\n  if (value === null || value === undefined) return '—';\n  const n = Number(value);\n  if (!Number.isNaN(n)) {\n    if (/pH/i.test(key)) return n.toFixed(2);\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\n    return String(n);\n  }\n  return String(value);\n}\nfunction cleanQualityString(quality) {\n  if (quality === null || quality === undefined) return quality;\n  let s = String(quality).trim();\n  if (!s) return s;\n  // normalize whitespace\n  s = s.replace(/\\s+/g, ' ');\n  // remove duplicated trailing punctuation and normalize\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\n  if (m && m[1]) return m[1].trim();\n  // fallback: if full-string repeated twice (older regex)\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\n  return m2 ? m2[1].trim() : s;\n}\nfunction canonicalizePredictionEntries(pred) {\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\n  if (!pred || typeof pred !== 'object') return [];\n  const map = new Map();\n  for (const [k, v] of Object.entries(pred)) {\n    const key = String(k).trim();\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\n    // map some common aliases\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\n    map.set(canonical, {\n      key: key,\n      value: v\n    });\n  }\n  // return in insertion order but using original key casing for display\n  return Array.from(map.values()).map(x => [x.key, x.value]);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"MapClickHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MapContainer","TileLayer","Marker","Popup","CircleMarker","useMapEvents","L","FaWater","puneLocations","puneCenter","getRiverColor","riverPaths","preSampledRiver","riverDescriptions","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Calendar","date","onChange","_s","base","Date","viewMonth","setViewMonth","getMonth","viewYear","setViewYear","getFullYear","d","startOfMonth","y","m","daysInMonth","getDate","weeks","firstDay","getDay","leading","total","rows","Math","ceil","day","r","week","c","cellDate","push","monthName","toLocaleString","undefined","month","selectDate","iso","String","padStart","selected","style","padding","children","display","justifyContent","alignItems","className","onClick","v","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","gridTemplateColumns","gap","marginTop","color","fontSize","textAlign","map","i","marginBottom","inMonth","isSelected","borderRadius","border","background","cursor","toISOString","_c","MapClickHandler","onMapClick","_s2","click","e","latitude","latlng","lat","longitude","lng","_c2","getParameterStatus","key","value","s","toLowerCase","includes","label","cls","Number","isNaN","App","_s3","route","setRoute","predictions","setPredictions","setSelected","interpPoints","setInterpPoints","sampleCount","setSampleCount","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","mapInst","setMapInst","selectedDate","setSelectedDate","slice","split","mounted","res","fetch","body","json","byId","item","loc","find","l","id","name","location","location_name","values","err","handleMapClick","pt","handleMarkerClick","pred","prev","prediction","performInterpolation","alert","nearestIndex","best","bestD","Infinity","length","dlat","dlng","d2","si","ei","a","min","b","max","sub","locations","points","year","pick_from_input","method","headers","JSON","stringify","jb","error","flex","size","height","center","zoom","whenCreated","url","entries","canonicalizePredictionEntries","overallEntry","k","overallValue","cleanQualityString","overallStatus","coordinate","pathOptions","river","fillColor","fillOpacity","radius","eventHandlers","minWidth","replace","filter","formatValue","marginLeft","position","nearest_location","width","type","target","toFixed","toLocaleDateString","description","overall","_c3","n","test","quality","trim","match","m2","Map","Object","norm","canonical","set","Array","from","x","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver, riverDescriptions } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction Calendar({ date, onChange }) {\r\n  // full month grid calendar (always visible in sidebar)\r\n  const base = date ? new Date(date) : new Date();\r\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\r\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\r\n\r\n  React.useEffect(() => {\r\n    const d = date ? new Date(date) : new Date();\r\n    setViewMonth(d.getMonth());\r\n    setViewYear(d.getFullYear());\r\n  }, [date]);\r\n\r\n  const startOfMonth = (y, m) => new Date(y, m, 1);\r\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\r\n\r\n  const weeks = [];\r\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\r\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\r\n  const total = leading + daysInMonth(viewYear, viewMonth);\r\n  const rows = Math.ceil(total / 7);\r\n\r\n  let day = 1 - leading;\r\n  for (let r = 0; r < rows; r++) {\r\n    const week = [];\r\n    for (let c = 0; c < 7; c++, day++) {\r\n      const cellDate = new Date(viewYear, viewMonth, day);\r\n      week.push(cellDate);\r\n    }\r\n    weeks.push(week);\r\n  }\r\n\r\n  const monthName = new Date(viewYear, viewMonth).toLocaleString(undefined, { month: 'long' });\r\n\r\n  const selectDate = (d) => {\r\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\r\n    onChange && onChange(iso);\r\n  };\r\n\r\n  const selected = date ? new Date(date) : null;\r\n\r\n  return (\r\n    <div style={{padding:8}}>\r\n      <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',padding:'6px 4px'}}>\r\n        <button className=\"small\" onClick={() => { const m = viewMonth - 1; if (m < 0) { setViewYear(v => v - 1); setViewMonth(11); } else setViewMonth(m); }}>{'◀'}</button>\r\n        <div style={{fontWeight:700}}>{monthName}, {viewYear}</div>\r\n        <button className=\"small\" onClick={() => { const m = viewMonth + 1; if (m > 11) { setViewYear(v => v + 1); setViewMonth(0); } else setViewMonth(m); }}>{'▶'}</button>\r\n      </div>\r\n      <div style={{display:'grid',gridTemplateColumns:'repeat(7,1fr)',gap:4,marginTop:8,color:'#64748b',fontSize:12,fontWeight:700,textAlign:'center'}}>\r\n        {['Mo','Tu','We','Th','Fr','Sa','Su'].map(d=> <div key={d}>{d}</div>)}\r\n      </div>\r\n      <div style={{marginTop:8}}>\r\n        {weeks.map((week, i) => (\r\n          <div key={i} style={{display:'grid',gridTemplateColumns:'repeat(7,1fr)',gap:4,marginBottom:4}}>\r\n            {week.map((d) => {\r\n              const inMonth = d.getMonth() === viewMonth;\r\n              const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\r\n              return (\r\n                <button\r\n                  key={d.toISOString()}\r\n                  onClick={() => inMonth && selectDate(d)}\r\n                  style={{\r\n                    padding:10,\r\n                    borderRadius:6,\r\n                    border:'none',\r\n                    background: isSelected ? 'var(--primary)' : (inMonth ? '#f8fafc' : 'transparent'),\r\n                    color: isSelected ? '#fff' : (inMonth ? '#0b3b52' : '#94a3b8'),\r\n                    cursor: inMonth ? 'pointer' : 'default'\r\n                  }}\r\n                >{d.getDate()}</button>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MapClickHandler({ onMapClick }) {\r\n  useMapEvents({ click: (e) => onMapClick && onMapClick({ latitude: e.latlng.lat, longitude: e.latlng.lng }) });\r\n  return null;\r\n}\r\n\r\nfunction getParameterStatus(key, value) {\r\n  // value may be numeric or string; handle Water Quality specially\r\n  if (key === 'Water Quality') {\r\n    const s = String(value || '').toLowerCase();\r\n    if (s.includes('non')) return { label: 'Non Complying', cls: 'status-poor' };\r\n    if (s.includes('comp')) return { label: 'Complying', cls: 'status-good' };\r\n    return { label: String(value || ''), cls: 'status-na' };\r\n  }\r\n\r\n  const v = Number(value);\r\n  switch (key) {\r\n    case 'pH':\r\n      if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n      if (v >= 6.0 && v <= 9.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    case 'DO (mg/L)':\r\n    case 'DO':\r\n      if (v >= 5.0) return { label: 'Good', cls: 'status-good' };\r\n      if (v >= 3.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    case 'BOD (mg/L)':\r\n    case 'BOD':\r\n      if (v <= 3.0) return { label: 'Good', cls: 'status-good' };\r\n      if (v <= 6.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    case 'FC MPN/100ml':\r\n    case 'TC MPN/100ml':\r\n    case 'FC':\r\n    case 'TC':\r\n      if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n      if (v < 500) return { label: 'Good', cls: 'status-good' };\r\n      if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n      return { label: 'Poor', cls: 'status-poor' };\r\n    default:\r\n      return { label: String(value), cls: 'status-na' };\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const [route, setRoute] = useState('home');\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]);\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [selectMode, setSelectMode] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`;\r\n  });\r\n\r\n  // fetch predictions for month/year whenever date changes\r\n  useEffect(() => {\r\n    const [y, m] = selectedDate.slice(0,7).split('-').map(Number);\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\r\n        const body = await res.json();\r\n        const byId = {};\r\n        for (const item of (body.predictions || [])) {\r\n          // try match by id or location name\r\n          const loc = puneLocations.find(l => l.id === item.id || l.name === item.location || l.name === item.location_name);\r\n          if (loc) byId[loc.id] = item.values || item;\r\n        }\r\n        if (mounted) setPredictions(byId);\r\n      } catch (err) {\r\n        // ignore\r\n      }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, [selectedDate]);\r\n\r\n  const handleMapClick = useCallback((pt) => {\r\n    if (selectMode === 'start') setStartPoint(pt);\r\n    else if (selectMode === 'end') setEndPoint(pt);\r\n  }, [selectMode]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    setSelected(loc);\r\n    // attach available prediction\r\n    const pred = predictions[loc.id] || null;\r\n    setSelected(prev => ({...loc, prediction: pred}));\r\n  };\r\n\r\n  const performInterpolation = async () => {\r\n    if (!startPoint || !endPoint) return alert('Pick start and end');\r\n    // find nearest indices in preSampledRiver\r\n    const nearestIndex = (pt) => {\r\n      let best = 0, bestD = Infinity;\r\n      for (let i=0;i<preSampledRiver.length;i++){\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat*dlat + dlng*dlng;\r\n        if (d2 < bestD){ bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPoint), ei = nearestIndex(endPoint);\r\n    const a = Math.min(si, ei), b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b+1);\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true };\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) return alert('Server: '+jb.error);\r\n      setInterpPoints(jb.predictions || []);\r\n    } catch (err) { alert('Request failed'); }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <main className=\"main\" style={{display:'flex', gap:20}}>\r\n        <div style={{flex:1}}>\r\n          {route === 'home' ? (\r\n            <div className=\"home-page\">\r\n              <div className=\"home-card\">\r\n                <div className=\"home-hero\">\r\n                  <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                  <div>\r\n                    <h1>RiverWatch — Pune Rivers</h1>\r\n                    <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                  </div>\r\n                </div>\r\n                <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.</p>\r\n                <div className=\"columns\">\r\n                  <div className=\"col rivers\">\r\n                    <h3>Rivers</h3>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula\">Mula</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mutha\">Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula-mutha\">Mula-Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula-Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col center\">\r\n                    <h3>About</h3>\r\n                    <p>This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.</p>\r\n                  </div>\r\n                  <div className=\"col params\">\r\n                    <h3>Parameters</h3>\r\n                    <ul className=\"param-names\">\r\n                      <li><strong>pH</strong> <div className=\"desc\">Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.</div></li>\r\n                      <li><strong>DO</strong> <div className=\"desc\">Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.</div></li>\r\n                      <li><strong>BOD</strong> <div className=\"desc\">Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.</div></li>\r\n                      <li><strong>FC/TC</strong> <div className=\"desc\">Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.</div></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"home-cta\">\r\n                  <button onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                  <button className=\"secondary\" onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-content\" style={{height: 'calc(100vh - 36px)'}}>\r\n              <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m=>setMapInst(m)} style={{height:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MapClickHandler onMapClick={handleMapClick} />\r\n                {puneLocations.map(loc => {\r\n                  const pred = predictions[loc.id] || null;\r\n                  const entries = pred ? canonicalizePredictionEntries(pred) : [];\r\n                  const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                  const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\r\n                  const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\r\n\r\n                  return (\r\n                    <CircleMarker key={loc.id} center={[loc.coordinate.latitude, loc.coordinate.longitude]} pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity:0.9 }} radius={8} eventHandlers={{ click: () => handleMarkerClick(loc) }}>\r\n                      <Popup>\r\n                        <div className=\"popup-card\" style={{minWidth:260}}>\r\n                          <div className=\"popup-header\">\r\n                            <div>\r\n                              <div className=\"popup-title\">{cleanQualityString(loc.name)}</div>\r\n                              <div className=\"popup-sub muted\" style={{display:'flex',gap:8,alignItems:'center',marginTop:8}}>\r\n                                <span className={`river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(loc.river)}</span>\r\n                                {overallValue ? <div className={`badge ${overallStatus ? overallStatus.cls : 'status-na'}`}>{overallValue}</div> : null}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {pred ? (\r\n                            <div className=\"popup-grid\">\r\n                              {entries\r\n                                .filter(([k]) => {\r\n                                  const key = String(k).toLowerCase();\r\n                                  return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                                })\r\n                                .map(([k,v]) => {\r\n                                  const value = formatValue(k, v);\r\n                                  const s = getParameterStatus(k, v);\r\n                                  return (\r\n                                    <div className=\"param-row\" key={k}>\r\n                                      <div className=\"param-name\">{k}</div>\r\n                                      <div className=\"param-value\">\r\n                                        <span className=\"val-text\">{value}</span>\r\n                                        <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          ) : <div style={{marginTop:8}}>Loading...</div>}\r\n                        </div>\r\n                      </Popup>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n                {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n                {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n                {route === 'interpolate' && interpPoints.map((pt, i) => (\r\n                  <CircleMarker key={i} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{color:'#0077b6', fillColor:'#00b4d8', fillOpacity:0.9}}>\r\n                    <Popup>\r\n                      <div style={{minWidth:180}}>\r\n                        <div><strong>Interpolated</strong></div>\r\n                        <div className=\"muted\">Nearest: {pt.nearest_location || '—'}</div>\r\n                        <ul style={{marginTop:6}}>\r\n                          <li>pH: {pt['pH']}</li>\r\n                          <li>DO: {pt['DO (mg/L)']}</li>\r\n                        </ul>\r\n                      </div>\r\n                    </Popup>\r\n                  </CircleMarker>\r\n                ))}\r\n              </MapContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* right sidebar: show only on inner pages (not on Home) */}\r\n        {route !== 'home' && (\r\n          <aside className=\"detail-panel\" style={{width:360}}>\r\n          <div style={{display:'flex', justifyContent:'flex-end', gap:8, padding:8}}>\r\n            <button onClick={()=>setRoute('home')} className=\"small\">Home</button>\r\n            <button onClick={()=>setRoute('interpolate')} className=\"small primary\">Interpolate</button>\r\n          </div>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d=>setSelectedDate(d)} />\r\n          </div>\r\n\r\n          {route === 'interpolate' && (\r\n            <div style={{marginTop:12}}>\r\n              <div className=\"controls-row\">\r\n                <button onClick={()=>setSelectMode(selectMode==='start'?null:'start')} className={selectMode==='start'?'active':''}>Pick Start</button>\r\n                <button onClick={()=>setSelectMode(selectMode==='end'?null:'end')} className={selectMode==='end'?'active':''}>Pick End</button>\r\n                <button onClick={()=>{ setSelectMode(null); setInterpPoints([]); setStartPoint(null); setEndPoint(null); }}>Reset</button>\r\n              </div>\r\n              <div style={{marginTop:8}}>\r\n                <label>Points k: <input type=\"number\" min={1} max={50} value={sampleCount} onChange={e=>setSampleCount(Number(e.target.value))} style={{width:80, marginLeft:8}}/></label>\r\n              </div>\r\n              <div style={{marginTop:8}}>\r\n                <div>Start: {startPoint?`${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}`:'—'}</div>\r\n                <div>End: {endPoint?`${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}`:'—'}</div>\r\n              </div>\r\n              <div style={{marginTop:8}}>\r\n                <button onClick={performInterpolation}>Interpolate</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{marginTop:16}}>\r\n            <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n                {selected ? (\r\n              <div style={{marginTop:12}}>\r\n                <h3>{cleanQualityString(selected.name)}</h3>\r\n                <div className=\"muted\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n                  <div><span className={`river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(selected.river)}</span> • {selected.description}</div>\r\n                  {selected.prediction ? (() => {\r\n                    const entries = canonicalizePredictionEntries(selected.prediction);\r\n                    const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                    if (overall) {\r\n                      const s = getParameterStatus('Water Quality', overall[1]);\r\n                      return <div className={`badge ${s ? s.cls : 'status-na'}`}>{cleanQualityString(String(overall[1]))}</div>;\r\n                    }\r\n                    return null;\r\n                  })() : null}\r\n                </div>\r\n                <h4 style={{marginTop:8}}>Prediction</h4>\r\n                {selected.prediction ? (\r\n                  <div>\r\n                    {canonicalizePredictionEntries(selected.prediction)\r\n                      .filter(([k]) => {\r\n                        const key = String(k).toLowerCase();\r\n                        return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                      })\r\n                      .map(([k,v])=>{\r\n                        const value = formatValue(k, v);\r\n                        const s = getParameterStatus(k,v);\r\n                        return (\r\n                          <div key={k} className=\"inline-param-row\">\r\n                            <div className=\"label\">{k}</div>\r\n                            <div className=\"value\"><div className=\"val-text\">{value}</div><div className={`badge ${s.cls}`}>{s.label}</div></div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : <div>Loading...</div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"placeholder\" style={{marginTop:12}}>Select a location on the map to see details here.</div>\r\n            )}\r\n          </div>\r\n          </aside>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatValue(key, value) {\r\n  if (value === null || value === undefined) return '—';\r\n  const n = Number(value);\r\n  if (!Number.isNaN(n)) {\r\n    if (/pH/i.test(key)) return n.toFixed(2);\r\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\r\n    return String(n);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nfunction cleanQualityString(quality) {\r\n  if (quality === null || quality === undefined) return quality;\r\n  let s = String(quality).trim();\r\n  if (!s) return s;\r\n  // normalize whitespace\r\n  s = s.replace(/\\s+/g, ' ');\r\n  // remove duplicated trailing punctuation and normalize\r\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\r\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\r\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\r\n  if (m && m[1]) return m[1].trim();\r\n  // fallback: if full-string repeated twice (older regex)\r\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\r\n  return m2 ? m2[1].trim() : s;\r\n}\r\n\r\nfunction canonicalizePredictionEntries(pred) {\r\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\r\n  if (!pred || typeof pred !== 'object') return [];\r\n  const map = new Map();\r\n  for (const [k, v] of Object.entries(pred)) {\r\n    const key = String(k).trim();\r\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\r\n    // map some common aliases\r\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\r\n    map.set(canonical, { key: key, value: v });\r\n  }\r\n  // return in insertion order but using original key casing for display\r\n  return Array.from(map.values()).map(x => [x.key, x.value]);\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,YAAY,QAAQ,eAAe;AAClG,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,SAASC,OAAO,QAAQ,gBAAgB;AAExC,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,EAAEC,UAAU,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvH,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAE1E,OAAOb,CAAC,CAACc,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CjB,CAAC,CAACc,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gEAAgE;EAC/EC,OAAO,EAAE,6DAA6D;EACtEC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC;EACA,MAAMC,IAAI,GAAGH,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAII,IAAI,CAAC,CAAC;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,KAAK,CAACE,QAAQ,CAACkC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,KAAK,CAACE,QAAQ,CAACkC,IAAI,CAACO,WAAW,CAAC,CAAC,CAAC;EAElE3C,KAAK,CAACC,SAAS,CAAC,MAAM;IACpB,MAAM2C,CAAC,GAAGX,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAII,IAAI,CAAC,CAAC;IAC5CE,YAAY,CAACK,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;IAC1BE,WAAW,CAACE,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,MAAMY,YAAY,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC;EAChD,MAAMC,WAAW,GAAGA,CAACF,CAAC,EAAEC,CAAC,KAAK,IAAIV,IAAI,CAACS,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;EAE7D,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,QAAQ,GAAGN,YAAY,CAACJ,QAAQ,EAAEH,SAAS,CAAC,CAACc,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAMC,OAAO,GAAG,CAACF,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACpC,MAAMG,KAAK,GAAGD,OAAO,GAAGL,WAAW,CAACP,QAAQ,EAAEH,SAAS,CAAC;EACxD,MAAMiB,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACH,KAAK,GAAG,CAAC,CAAC;EAEjC,IAAII,GAAG,GAAG,CAAC,GAAGL,OAAO;EACrB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,EAAEI,CAAC,EAAE,EAAE;IAC7B,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAEH,GAAG,EAAE,EAAE;MACjC,MAAMI,QAAQ,GAAG,IAAIzB,IAAI,CAACI,QAAQ,EAAEH,SAAS,EAAEoB,GAAG,CAAC;MACnDE,IAAI,CAACG,IAAI,CAACD,QAAQ,CAAC;IACrB;IACAZ,KAAK,CAACa,IAAI,CAACH,IAAI,CAAC;EAClB;EAEA,MAAMI,SAAS,GAAG,IAAI3B,IAAI,CAACI,QAAQ,EAAEH,SAAS,CAAC,CAAC2B,cAAc,CAACC,SAAS,EAAE;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC;EAE5F,MAAMC,UAAU,GAAIxB,CAAC,IAAK;IACxB,MAAMyB,GAAG,GAAG,GAAGzB,CAAC,CAACD,WAAW,CAAC,CAAC,IAAI2B,MAAM,CAAC1B,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC+B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAAC1B,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACsB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACrHrC,QAAQ,IAAIA,QAAQ,CAACmC,GAAG,CAAC;EAC3B,CAAC;EAED,MAAMG,QAAQ,GAAGvC,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAI;EAE7C,oBACEd,OAAA;IAAKsD,KAAK,EAAE;MAACC,OAAO,EAAC;IAAC,CAAE;IAAAC,QAAA,gBACtBxD,OAAA;MAAKsD,KAAK,EAAE;QAACG,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,eAAe;QAACC,UAAU,EAAC,QAAQ;QAACJ,OAAO,EAAC;MAAS,CAAE;MAAAC,QAAA,gBAChGxD,OAAA;QAAQ4D,SAAS,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAE,MAAMjC,CAAC,GAAGT,SAAS,GAAG,CAAC;UAAE,IAAIS,CAAC,GAAG,CAAC,EAAE;YAAEL,WAAW,CAACuC,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;YAAE1C,YAAY,CAAC,EAAE,CAAC;UAAE,CAAC,MAAMA,YAAY,CAACQ,CAAC,CAAC;QAAE,CAAE;QAAA4B,QAAA,EAAE;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACrKlE,OAAA;QAAKsD,KAAK,EAAE;UAACa,UAAU,EAAC;QAAG,CAAE;QAAAX,QAAA,GAAEX,SAAS,EAAC,IAAE,EAACvB,QAAQ;MAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DlE,OAAA;QAAQ4D,SAAS,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAM;UAAE,MAAMjC,CAAC,GAAGT,SAAS,GAAG,CAAC;UAAE,IAAIS,CAAC,GAAG,EAAE,EAAE;YAAEL,WAAW,CAACuC,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;YAAE1C,YAAY,CAAC,CAAC,CAAC;UAAE,CAAC,MAAMA,YAAY,CAACQ,CAAC,CAAC;QAAE,CAAE;QAAA4B,QAAA,EAAE;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClK,CAAC,eACNlE,OAAA;MAAKsD,KAAK,EAAE;QAACG,OAAO,EAAC,MAAM;QAACW,mBAAmB,EAAC,eAAe;QAACC,GAAG,EAAC,CAAC;QAACC,SAAS,EAAC,CAAC;QAACC,KAAK,EAAC,SAAS;QAACC,QAAQ,EAAC,EAAE;QAACL,UAAU,EAAC,GAAG;QAACM,SAAS,EAAC;MAAQ,CAAE;MAAAjB,QAAA,EAC9I,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAACkB,GAAG,CAACjD,CAAC,iBAAGzB,OAAA;QAAAwD,QAAA,EAAc/B;MAAC,GAALA,CAAC;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACNlE,OAAA;MAAKsD,KAAK,EAAE;QAACgB,SAAS,EAAC;MAAC,CAAE;MAAAd,QAAA,EACvBzB,KAAK,CAAC2C,GAAG,CAAC,CAACjC,IAAI,EAAEkC,CAAC,kBACjB3E,OAAA;QAAasD,KAAK,EAAE;UAACG,OAAO,EAAC,MAAM;UAACW,mBAAmB,EAAC,eAAe;UAACC,GAAG,EAAC,CAAC;UAACO,YAAY,EAAC;QAAC,CAAE;QAAApB,QAAA,EAC3Ff,IAAI,CAACiC,GAAG,CAAEjD,CAAC,IAAK;UACf,MAAMoD,OAAO,GAAGpD,CAAC,CAACJ,QAAQ,CAAC,CAAC,KAAKF,SAAS;UAC1C,MAAM2D,UAAU,GAAGzB,QAAQ,IAAI5B,CAAC,CAACD,WAAW,CAAC,CAAC,KAAK6B,QAAQ,CAAC7B,WAAW,CAAC,CAAC,IAAIC,CAAC,CAACJ,QAAQ,CAAC,CAAC,KAAKgC,QAAQ,CAAChC,QAAQ,CAAC,CAAC,IAAII,CAAC,CAACK,OAAO,CAAC,CAAC,KAAKuB,QAAQ,CAACvB,OAAO,CAAC,CAAC;UACvJ,oBACE9B,OAAA;YAEE6D,OAAO,EAAEA,CAAA,KAAMgB,OAAO,IAAI5B,UAAU,CAACxB,CAAC,CAAE;YACxC6B,KAAK,EAAE;cACLC,OAAO,EAAC,EAAE;cACVwB,YAAY,EAAC,CAAC;cACdC,MAAM,EAAC,MAAM;cACbC,UAAU,EAAEH,UAAU,GAAG,gBAAgB,GAAID,OAAO,GAAG,SAAS,GAAG,aAAc;cACjFN,KAAK,EAAEO,UAAU,GAAG,MAAM,GAAID,OAAO,GAAG,SAAS,GAAG,SAAU;cAC9DK,MAAM,EAAEL,OAAO,GAAG,SAAS,GAAG;YAChC,CAAE;YAAArB,QAAA,EACF/B,CAAC,CAACK,OAAO,CAAC;UAAC,GAVNL,CAAC,CAAC0D,WAAW,CAAC,CAAC;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUA,CAAC;QAE3B,CAAC;MAAC,GAlBMS,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClD,EAAA,CA5EQH,QAAQ;AAAAuE,EAAA,GAARvE,QAAQ;AA8EjB,SAASwE,eAAeA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,GAAA;EACvCjG,YAAY,CAAC;IAAEkG,KAAK,EAAGC,CAAC,IAAKH,UAAU,IAAIA,UAAU,CAAC;MAAEI,QAAQ,EAAED,CAAC,CAACE,MAAM,CAACC,GAAG;MAAEC,SAAS,EAAEJ,CAAC,CAACE,MAAM,CAACG;IAAI,CAAC;EAAE,CAAC,CAAC;EAC7G,OAAO,IAAI;AACb;AAACP,GAAA,CAHQF,eAAe;EAAA,QACtB/F,YAAY;AAAA;AAAAyG,GAAA,GADLV,eAAe;AAKxB,SAASW,kBAAkBA,CAACC,GAAG,EAAEC,KAAK,EAAE;EACtC;EACA,IAAID,GAAG,KAAK,eAAe,EAAE;IAC3B,MAAME,CAAC,GAAGhD,MAAM,CAAC+C,KAAK,IAAI,EAAE,CAAC,CAACE,WAAW,CAAC,CAAC;IAC3C,IAAID,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO;MAAEC,KAAK,EAAE,eAAe;MAAEC,GAAG,EAAE;IAAc,CAAC;IAC5E,IAAIJ,CAAC,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO;MAAEC,KAAK,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAc,CAAC;IACzE,OAAO;MAAED,KAAK,EAAEnD,MAAM,CAAC+C,KAAK,IAAI,EAAE,CAAC;MAAEK,GAAG,EAAE;IAAY,CAAC;EACzD;EAEA,MAAMzC,CAAC,GAAG0C,MAAM,CAACN,KAAK,CAAC;EACvB,QAAQD,GAAG;IACT,KAAK,IAAI;MACP,IAAInC,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;MACtE,IAAIzC,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE;MAAkB,CAAC;MAC9E,OAAO;QAAED,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;IAC9C,KAAK,WAAW;IAChB,KAAK,IAAI;MACP,IAAIzC,CAAC,IAAI,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;MAC1D,IAAIzC,CAAC,IAAI,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE;MAAkB,CAAC;MAClE,OAAO;QAAED,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;IAC9C,KAAK,YAAY;IACjB,KAAK,KAAK;MACR,IAAIzC,CAAC,IAAI,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;MAC1D,IAAIzC,CAAC,IAAI,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE;MAAkB,CAAC;MAClE,OAAO;QAAED,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;IAC9C,KAAK,cAAc;IACnB,KAAK,cAAc;IACnB,KAAK,IAAI;IACT,KAAK,IAAI;MACP,IAAIE,KAAK,CAAC3C,CAAC,CAAC,EAAE,OAAO;QAAEwC,KAAK,EAAEnD,MAAM,CAAC+C,KAAK,CAAC;QAAEK,GAAG,EAAE;MAAY,CAAC;MAC/D,IAAIzC,CAAC,GAAG,GAAG,EAAE,OAAO;QAAEwC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;MACzD,IAAIzC,CAAC,IAAI,IAAI,EAAE,OAAO;QAAEwC,KAAK,EAAE,UAAU;QAAEC,GAAG,EAAE;MAAkB,CAAC;MACnE,OAAO;QAAED,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAc,CAAC;IAC9C;MACE,OAAO;QAAED,KAAK,EAAEnD,MAAM,CAAC+C,KAAK,CAAC;QAAEK,GAAG,EAAE;MAAY,CAAC;EACrD;AACF;AAEA,eAAe,SAASG,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG9H,QAAQ,CAAC,MAAM,CAAC;EAC1C,MAAM,CAAC+H,WAAW,EAAEC,cAAc,CAAC,GAAGhI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACsE,QAAQ,EAAE2D,WAAW,CAAC,GAAGjI,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkI,YAAY,EAAEC,eAAe,CAAC,GAAGnI,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoI,WAAW,EAAEC,cAAc,CAAC,GAAGrI,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsI,UAAU,EAAEC,aAAa,CAAC,GAAGvI,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACwI,UAAU,EAAEC,aAAa,CAAC,GAAGzI,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC0I,QAAQ,EAAEC,WAAW,CAAC,GAAG3I,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC4I,OAAO,EAAEC,UAAU,CAAC,GAAG7I,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC8I,YAAY,EAAEC,eAAe,CAAC,GAAG/I,QAAQ,CAAC,MAAM;IACrD,MAAM0C,CAAC,GAAG,IAAIP,IAAI,CAAC,CAAC;IACpB,OAAO,GAAGO,CAAC,CAACD,WAAW,CAAC,CAAC,IAAI2B,MAAM,CAAC1B,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC+B,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC,IAAID,MAAM,CAAC1B,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACsB,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC,EAAE;EAC9G,CAAC,CAAC;;EAEF;EACAtE,SAAS,CAAC,MAAM;IACd,MAAM,CAAC6C,CAAC,EAAEC,CAAC,CAAC,GAAGiG,YAAY,CAACE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACtD,GAAG,CAAC8B,MAAM,CAAC;IAC7D,IAAIyB,OAAO,GAAG,IAAI;IAClB,CAAC,YAAY;MACX,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGlI,QAAQ,sBAAsB2B,CAAC,SAASD,CAAC,EAAE,CAAC;QACvE,MAAMyG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,MAAMC,IAAI,GAAG,CAAC,CAAC;QACf,KAAK,MAAMC,IAAI,IAAKH,IAAI,CAACtB,WAAW,IAAI,EAAE,EAAG;UAC3C;UACA,MAAM0B,GAAG,GAAG/I,aAAa,CAACgJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,IAAID,CAAC,CAACE,IAAI,KAAKL,IAAI,CAACM,QAAQ,IAAIH,CAAC,CAACE,IAAI,KAAKL,IAAI,CAACO,aAAa,CAAC;UAClH,IAAIN,GAAG,EAAEF,IAAI,CAACE,GAAG,CAACG,EAAE,CAAC,GAAGJ,IAAI,CAACQ,MAAM,IAAIR,IAAI;QAC7C;QACA,IAAIN,OAAO,EAAElB,cAAc,CAACuB,IAAI,CAAC;MACnC,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZ;MAAA;IAEJ,CAAC,EAAE,CAAC;IACJ,OAAO,MAAM;MAAEf,OAAO,GAAG,KAAK;IAAE,CAAC;EACnC,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMoB,cAAc,GAAGjK,WAAW,CAAEkK,EAAE,IAAK;IACzC,IAAI7B,UAAU,KAAK,OAAO,EAAEG,aAAa,CAAC0B,EAAE,CAAC,CAAC,KACzC,IAAI7B,UAAU,KAAK,KAAK,EAAEK,WAAW,CAACwB,EAAE,CAAC;EAChD,CAAC,EAAE,CAAC7B,UAAU,CAAC,CAAC;EAEhB,MAAM8B,iBAAiB,GAAIX,GAAG,IAAK;IACjCxB,WAAW,CAACwB,GAAG,CAAC;IAChB;IACA,MAAMY,IAAI,GAAGtC,WAAW,CAAC0B,GAAG,CAACG,EAAE,CAAC,IAAI,IAAI;IACxC3B,WAAW,CAACqC,IAAI,KAAK;MAAC,GAAGb,GAAG;MAAEc,UAAU,EAAEF;IAAI,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAAChC,UAAU,IAAI,CAACE,QAAQ,EAAE,OAAO+B,KAAK,CAAC,oBAAoB,CAAC;IAChE;IACA,MAAMC,YAAY,GAAIP,EAAE,IAAK;MAC3B,IAAIQ,IAAI,GAAG,CAAC;QAAEC,KAAK,GAAGC,QAAQ;MAC9B,KAAK,IAAIjF,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC9E,eAAe,CAACgK,MAAM,EAAClF,CAAC,EAAE,EAAC;QACxC,MAAMmF,IAAI,GAAGjK,eAAe,CAAC8E,CAAC,CAAC,CAACe,QAAQ,GAAGwD,EAAE,CAACxD,QAAQ;QACtD,MAAMqE,IAAI,GAAGlK,eAAe,CAAC8E,CAAC,CAAC,CAACkB,SAAS,GAAGqD,EAAE,CAACrD,SAAS;QACxD,MAAMmE,EAAE,GAAGF,IAAI,GAACA,IAAI,GAAGC,IAAI,GAACA,IAAI;QAChC,IAAIC,EAAE,GAAGL,KAAK,EAAC;UAAEA,KAAK,GAAGK,EAAE;UAAEN,IAAI,GAAG/E,CAAC;QAAE;MACzC;MACA,OAAO+E,IAAI;IACb,CAAC;IACD,MAAMO,EAAE,GAAGR,YAAY,CAAClC,UAAU,CAAC;MAAE2C,EAAE,GAAGT,YAAY,CAAChC,QAAQ,CAAC;IAChE,MAAM0C,CAAC,GAAG9H,IAAI,CAAC+H,GAAG,CAACH,EAAE,EAAEC,EAAE,CAAC;MAAEG,CAAC,GAAGhI,IAAI,CAACiI,GAAG,CAACL,EAAE,EAAEC,EAAE,CAAC;IAChD,MAAMK,GAAG,GAAG1K,eAAe,CAACkI,KAAK,CAACoC,CAAC,EAAEE,CAAC,GAAC,CAAC,CAAC;IACzC,MAAM5I,CAAC,GAAG,IAAIP,IAAI,CAAC2G,YAAY,CAAC;IAChC,MAAMO,IAAI,GAAG;MAAEoC,SAAS,EAAED,GAAG;MAAEE,MAAM,EAAEtD,WAAW;MAAEnE,KAAK,EAAEvB,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAC,CAAC;MAAEqJ,IAAI,EAAEjJ,CAAC,CAACD,WAAW,CAAC,CAAC;MAAEmJ,eAAe,EAAE;IAAK,CAAC;IACzH,IAAI;MACF,MAAMzC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGlI,QAAQ,sBAAsB,EAAE;QAAE2K,MAAM,EAAC,MAAM;QAAEC,OAAO,EAAC;UAAC,cAAc,EAAC;QAAkB,CAAC;QAAEzC,IAAI,EAAE0C,IAAI,CAACC,SAAS,CAAC3C,IAAI;MAAE,CAAC,CAAC;MACtJ,MAAM4C,EAAE,GAAG,MAAM9C,GAAG,CAACG,IAAI,CAAC,CAAC;MAC3B,IAAI2C,EAAE,CAACC,KAAK,EAAE,OAAOzB,KAAK,CAAC,UAAU,GAACwB,EAAE,CAACC,KAAK,CAAC;MAC/C/D,eAAe,CAAC8D,EAAE,CAAClE,WAAW,IAAI,EAAE,CAAC;IACvC,CAAC,CAAC,OAAOkC,GAAG,EAAE;MAAEQ,KAAK,CAAC,gBAAgB,CAAC;IAAE;EAC3C,CAAC;EAED,oBACExJ,OAAA;IAAK4D,SAAS,EAAC,MAAM;IAAAJ,QAAA,eACnBxD,OAAA;MAAM4D,SAAS,EAAC,MAAM;MAACN,KAAK,EAAE;QAACG,OAAO,EAAC,MAAM;QAAEY,GAAG,EAAC;MAAE,CAAE;MAAAb,QAAA,gBACrDxD,OAAA;QAAKsD,KAAK,EAAE;UAAC4H,IAAI,EAAC;QAAC,CAAE;QAAA1H,QAAA,EAClBoD,KAAK,KAAK,MAAM,gBACf5G,OAAA;UAAK4D,SAAS,EAAC,WAAW;UAAAJ,QAAA,eACxBxD,OAAA;YAAK4D,SAAS,EAAC,WAAW;YAAAJ,QAAA,gBACxBxD,OAAA;cAAK4D,SAAS,EAAC,WAAW;cAAAJ,QAAA,gBACxBxD,OAAA;gBAAK4D,SAAS,EAAC,MAAM;gBAAAJ,QAAA,eAACxD,OAAA,CAACR,OAAO;kBAAC2L,IAAI,EAAE,EAAG;kBAAC5G,KAAK,EAAC;gBAAM;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9DlE,OAAA;gBAAAwD,QAAA,gBACExD,OAAA;kBAAAwD,QAAA,EAAI;gBAAwB;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjClE,OAAA;kBAAG4D,SAAS,EAAC,OAAO;kBAAAJ,QAAA,EAAC;gBAAyC;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNlE,OAAA;cAAAwD,QAAA,EAAG;YAAgK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvKlE,OAAA;cAAK4D,SAAS,EAAC,SAAS;cAAAJ,QAAA,gBACtBxD,OAAA;gBAAK4D,SAAS,EAAC,YAAY;gBAAAJ,QAAA,gBACzBxD,OAAA;kBAAAwD,QAAA,EAAI;gBAAM;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACflE,OAAA;kBAAK4D,SAAS,EAAC,YAAY;kBAAAJ,QAAA,gBACzBxD,OAAA;oBAAM4D,SAAS,EAAC,uBAAuB;oBAAAJ,QAAA,EAAC;kBAAI;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACnDlE,OAAA;oBAAK4D,SAAS,EAAC,YAAY;oBAAAJ,QAAA,GAAE,CAAC1D,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,EAAEkI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAjE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClF,CAAC,eACNlE,OAAA;kBAAK4D,SAAS,EAAC,YAAY;kBAAAJ,QAAA,gBACzBxD,OAAA;oBAAM4D,SAAS,EAAC,wBAAwB;oBAAAJ,QAAA,EAAC;kBAAK;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACrDlE,OAAA;oBAAK4D,SAAS,EAAC,YAAY;oBAAAJ,QAAA,GAAE,CAAC1D,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAEkI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAjE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnF,CAAC,eACNlE,OAAA;kBAAK4D,SAAS,EAAC,YAAY;kBAAAJ,QAAA,gBACzBxD,OAAA;oBAAM4D,SAAS,EAAC,6BAA6B;oBAAAJ,QAAA,EAAC;kBAAU;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC/DlE,OAAA;oBAAK4D,SAAS,EAAC,YAAY;oBAAAJ,QAAA,GAAE,CAAC1D,iBAAiB,CAAC,YAAY,CAAC,IAAI,EAAE,EAAEkI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAAjE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNlE,OAAA;gBAAK4D,SAAS,EAAC,YAAY;gBAAAJ,QAAA,gBACzBxD,OAAA;kBAAAwD,QAAA,EAAI;gBAAK;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdlE,OAAA;kBAAAwD,QAAA,EAAG;gBAA0d;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9d,CAAC,eACNlE,OAAA;gBAAK4D,SAAS,EAAC,YAAY;gBAAAJ,QAAA,gBACzBxD,OAAA;kBAAAwD,QAAA,EAAI;gBAAU;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnBlE,OAAA;kBAAI4D,SAAS,EAAC,aAAa;kBAAAJ,QAAA,gBACzBxD,OAAA;oBAAAwD,QAAA,gBAAIxD,OAAA;sBAAAwD,QAAA,EAAQ;oBAAE;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAlE,OAAA;sBAAK4D,SAAS,EAAC,MAAM;sBAAAJ,QAAA,EAAC;oBAAwL;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjPlE,OAAA;oBAAAwD,QAAA,gBAAIxD,OAAA;sBAAAwD,QAAA,EAAQ;oBAAE;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAlE,OAAA;sBAAK4D,SAAS,EAAC,MAAM;sBAAAJ,QAAA,EAAC;oBAAwL;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACjPlE,OAAA;oBAAAwD,QAAA,gBAAIxD,OAAA;sBAAAwD,QAAA,EAAQ;oBAAG;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAlE,OAAA;sBAAK4D,SAAS,EAAC,MAAM;sBAAAJ,QAAA,EAAC;oBAAwL;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClPlE,OAAA;oBAAAwD,QAAA,gBAAIxD,OAAA;sBAAAwD,QAAA,EAAQ;oBAAK;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,eAAAlE,OAAA;sBAAK4D,SAAS,EAAC,MAAM;sBAAAJ,QAAA,EAAC;oBAA4M;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNlE,OAAA;cAAK4D,SAAS,EAAC,UAAU;cAAAJ,QAAA,gBACvBxD,OAAA;gBAAQ6D,OAAO,EAAEA,CAAA,KAAMgD,QAAQ,CAAC,SAAS,CAAE;gBAAArD,QAAA,EAAC;cAAa;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClElE,OAAA;gBAAQ4D,SAAS,EAAC,WAAW;gBAACC,OAAO,EAAEA,CAAA,KAAMgD,QAAQ,CAAC,aAAa,CAAE;gBAAArD,QAAA,EAAC;cAAiB;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENlE,OAAA;UAAK4D,SAAS,EAAC,cAAc;UAACN,KAAK,EAAE;YAAC8H,MAAM,EAAE;UAAoB,CAAE;UAAA5H,QAAA,eAClExD,OAAA,CAACf,YAAY;YAACoM,MAAM,EAAE,CAAC3L,UAAU,CAACgG,QAAQ,EAAEhG,UAAU,CAACmG,SAAS,CAAE;YAACyF,IAAI,EAAE5L,UAAU,CAAC4L,IAAK;YAAC1H,SAAS,EAAC,KAAK;YAAC2H,WAAW,EAAE3J,CAAC,IAAEgG,UAAU,CAAChG,CAAC,CAAE;YAAC0B,KAAK,EAAE;cAAC8H,MAAM,EAAC;YAAM,CAAE;YAAA5H,QAAA,gBAC9JxD,OAAA,CAACd,SAAS;cAACsM,GAAG,EAAC;YAAoD;cAAAzH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtElE,OAAA,CAACqF,eAAe;cAACC,UAAU,EAAE2D;YAAe;cAAAlF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC9CzE,aAAa,CAACiF,GAAG,CAAC8D,GAAG,IAAI;cACxB,MAAMY,IAAI,GAAGtC,WAAW,CAAC0B,GAAG,CAACG,EAAE,CAAC,IAAI,IAAI;cACxC,MAAM8C,OAAO,GAAGrC,IAAI,GAAGsC,6BAA6B,CAACtC,IAAI,CAAC,GAAG,EAAE;cAC/D,MAAMuC,YAAY,GAAGF,OAAO,CAAChD,IAAI,CAAC,CAAC,CAACmD,CAAC,CAAC,KAAKzI,MAAM,CAACyI,CAAC,CAAC,CAACxF,WAAW,CAAC,CAAC,KAAK,eAAe,CAAC;cACvF,MAAMyF,YAAY,GAAGF,YAAY,GAAGG,kBAAkB,CAAC3I,MAAM,CAACwI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cACtF,MAAMI,aAAa,GAAGJ,YAAY,GAAG3F,kBAAkB,CAAC,eAAe,EAAE2F,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cAEhG,oBACE3L,OAAA,CAACX,YAAY;gBAAcgM,MAAM,EAAE,CAAC7C,GAAG,CAACwD,UAAU,CAACtG,QAAQ,EAAE8C,GAAG,CAACwD,UAAU,CAACnG,SAAS,CAAE;gBAACoG,WAAW,EAAE;kBAAE1H,KAAK,EAAE5E,aAAa,CAAC6I,GAAG,CAAC0D,KAAK,CAAC;kBAAEC,SAAS,EAAExM,aAAa,CAAC6I,GAAG,CAAC0D,KAAK,CAAC;kBAAEE,WAAW,EAAC;gBAAI,CAAE;gBAACC,MAAM,EAAE,CAAE;gBAACC,aAAa,EAAE;kBAAE9G,KAAK,EAAEA,CAAA,KAAM2D,iBAAiB,CAACX,GAAG;gBAAE,CAAE;gBAAAhF,QAAA,eAChQxD,OAAA,CAACZ,KAAK;kBAAAoE,QAAA,eACJxD,OAAA;oBAAK4D,SAAS,EAAC,YAAY;oBAACN,KAAK,EAAE;sBAACiJ,QAAQ,EAAC;oBAAG,CAAE;oBAAA/I,QAAA,gBAChDxD,OAAA;sBAAK4D,SAAS,EAAC,cAAc;sBAAAJ,QAAA,eAC3BxD,OAAA;wBAAAwD,QAAA,gBACExD,OAAA;0BAAK4D,SAAS,EAAC,aAAa;0BAAAJ,QAAA,EAAEsI,kBAAkB,CAACtD,GAAG,CAACI,IAAI;wBAAC;0BAAA7E,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eACjElE,OAAA;0BAAK4D,SAAS,EAAC,iBAAiB;0BAACN,KAAK,EAAE;4BAACG,OAAO,EAAC,MAAM;4BAACY,GAAG,EAAC,CAAC;4BAACV,UAAU,EAAC,QAAQ;4BAACW,SAAS,EAAC;0BAAC,CAAE;0BAAAd,QAAA,gBAC7FxD,OAAA;4BAAM4D,SAAS,EAAE,aAAakI,kBAAkB,CAACtD,GAAG,CAAC0D,KAAK,CAAC,CAACM,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACpG,WAAW,CAAC,CAAC,EAAG;4BAAA5C,QAAA,EAAEsI,kBAAkB,CAACtD,GAAG,CAAC0D,KAAK;0BAAC;4BAAAnI,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAO,CAAC,EACvI2H,YAAY,gBAAG7L,OAAA;4BAAK4D,SAAS,EAAE,SAASmI,aAAa,GAAGA,aAAa,CAACxF,GAAG,GAAG,WAAW,EAAG;4BAAA/C,QAAA,EAAEqI;0BAAY;4BAAA9H,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,GAAG,IAAI;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpH,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EAELkF,IAAI,gBACHpJ,OAAA;sBAAK4D,SAAS,EAAC,YAAY;sBAAAJ,QAAA,EACxBiI,OAAO,CACLgB,MAAM,CAAC,CAAC,CAACb,CAAC,CAAC,KAAK;wBACf,MAAM3F,GAAG,GAAG9C,MAAM,CAACyI,CAAC,CAAC,CAACxF,WAAW,CAAC,CAAC;wBACnC,OAAO,CAAC,CAAC,UAAU,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,CAAC,CAACC,QAAQ,CAACJ,GAAG,CAAC;sBAChG,CAAC,CAAC,CACDvB,GAAG,CAAC,CAAC,CAACkH,CAAC,EAAC9H,CAAC,CAAC,KAAK;wBACd,MAAMoC,KAAK,GAAGwG,WAAW,CAACd,CAAC,EAAE9H,CAAC,CAAC;wBAC/B,MAAMqC,CAAC,GAAGH,kBAAkB,CAAC4F,CAAC,EAAE9H,CAAC,CAAC;wBAClC,oBACE9D,OAAA;0BAAK4D,SAAS,EAAC,WAAW;0BAAAJ,QAAA,gBACxBxD,OAAA;4BAAK4D,SAAS,EAAC,YAAY;4BAAAJ,QAAA,EAAEoI;0BAAC;4BAAA7H,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAM,CAAC,eACrClE,OAAA;4BAAK4D,SAAS,EAAC,aAAa;4BAAAJ,QAAA,gBAC1BxD,OAAA;8BAAM4D,SAAS,EAAC,UAAU;8BAAAJ,QAAA,EAAE0C;4BAAK;8BAAAnC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAO,CAAC,eACzClE,OAAA;8BAAM4D,SAAS,EAAE,SAASuC,CAAC,CAACI,GAAG,EAAG;8BAACjD,KAAK,EAAE;gCAACqJ,UAAU,EAAC;8BAAC,CAAE;8BAAAnJ,QAAA,EAAE2C,CAAC,CAACG;4BAAK;8BAAAvC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAO,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACvE,CAAC;wBAAA,GALwB0H,CAAC;0BAAA7H,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAM5B,CAAC;sBAEV,CAAC;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,gBACJlE,OAAA;sBAAKsD,KAAK,EAAE;wBAACgB,SAAS,EAAC;sBAAC,CAAE;sBAAAd,QAAA,EAAC;oBAAU;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC,GApCSsE,GAAG,CAACG,EAAE;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAqCX,CAAC;YAEnB,CAAC,CAAC,EACD0C,KAAK,KAAK,aAAa,IAAIW,UAAU,gBAAGvH,OAAA,CAACb,MAAM;cAACyN,QAAQ,EAAE,CAACrF,UAAU,CAAC7B,QAAQ,EAAE6B,UAAU,CAAC1B,SAAS,CAAE;cAAArC,QAAA,eAACxD,OAAA,CAACZ,KAAK;gBAAAoE,QAAA,EAAC;cAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAAG,IAAI,EAC3I0C,KAAK,KAAK,aAAa,IAAIa,QAAQ,gBAAGzH,OAAA,CAACb,MAAM;cAACyN,QAAQ,EAAE,CAACnF,QAAQ,CAAC/B,QAAQ,EAAE+B,QAAQ,CAAC5B,SAAS,CAAE;cAAArC,QAAA,eAACxD,OAAA,CAACZ,KAAK;gBAAAoE,QAAA,EAAC;cAAG;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GAAG,IAAI,EACnI0C,KAAK,KAAK,aAAa,IAAIK,YAAY,CAACvC,GAAG,CAAC,CAACwE,EAAE,EAAEvE,CAAC,kBACjD3E,OAAA,CAACX,YAAY;cAASgM,MAAM,EAAE,CAACnC,EAAE,CAACxD,QAAQ,EAAEwD,EAAE,CAACrD,SAAS,CAAE;cAACwG,MAAM,EAAE,CAAE;cAACJ,WAAW,EAAE;gBAAC1H,KAAK,EAAC,SAAS;gBAAE4H,SAAS,EAAC,SAAS;gBAAEC,WAAW,EAAC;cAAG,CAAE;cAAA5I,QAAA,eACzIxD,OAAA,CAACZ,KAAK;gBAAAoE,QAAA,eACJxD,OAAA;kBAAKsD,KAAK,EAAE;oBAACiJ,QAAQ,EAAC;kBAAG,CAAE;kBAAA/I,QAAA,gBACzBxD,OAAA;oBAAAwD,QAAA,eAAKxD,OAAA;sBAAAwD,QAAA,EAAQ;oBAAY;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxClE,OAAA;oBAAK4D,SAAS,EAAC,OAAO;oBAAAJ,QAAA,GAAC,WAAS,EAAC0F,EAAE,CAAC2D,gBAAgB,IAAI,GAAG;kBAAA;oBAAA9I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAClElE,OAAA;oBAAIsD,KAAK,EAAE;sBAACgB,SAAS,EAAC;oBAAC,CAAE;oBAAAd,QAAA,gBACvBxD,OAAA;sBAAAwD,QAAA,GAAI,MAAI,EAAC0F,EAAE,CAAC,IAAI,CAAC;oBAAA;sBAAAnF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACvBlE,OAAA;sBAAAwD,QAAA,GAAI,MAAI,EAAC0F,EAAE,CAAC,WAAW,CAAC;oBAAA;sBAAAnF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC,GAVSS,CAAC;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWN,CACf,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGL0C,KAAK,KAAK,MAAM,iBACf5G,OAAA;QAAO4D,SAAS,EAAC,cAAc;QAACN,KAAK,EAAE;UAACwJ,KAAK,EAAC;QAAG,CAAE;QAAAtJ,QAAA,gBACnDxD,OAAA;UAAKsD,KAAK,EAAE;YAACG,OAAO,EAAC,MAAM;YAAEC,cAAc,EAAC,UAAU;YAAEW,GAAG,EAAC,CAAC;YAAEd,OAAO,EAAC;UAAC,CAAE;UAAAC,QAAA,gBACxExD,OAAA;YAAQ6D,OAAO,EAAEA,CAAA,KAAIgD,QAAQ,CAAC,MAAM,CAAE;YAACjD,SAAS,EAAC,OAAO;YAAAJ,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtElE,OAAA;YAAQ6D,OAAO,EAAEA,CAAA,KAAIgD,QAAQ,CAAC,aAAa,CAAE;YAACjD,SAAS,EAAC,eAAe;YAAAJ,QAAA,EAAC;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACNlE,OAAA;UAAK4D,SAAS,EAAC,iBAAiB;UAAAJ,QAAA,eAC9BxD,OAAA,CAACa,QAAQ;YAACC,IAAI,EAAE+G,YAAa;YAAC9G,QAAQ,EAAEU,CAAC,IAAEqG,eAAe,CAACrG,CAAC;UAAE;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,EAEL0C,KAAK,KAAK,aAAa,iBACtB5G,OAAA;UAAKsD,KAAK,EAAE;YAACgB,SAAS,EAAC;UAAE,CAAE;UAAAd,QAAA,gBACzBxD,OAAA;YAAK4D,SAAS,EAAC,cAAc;YAAAJ,QAAA,gBAC3BxD,OAAA;cAAQ6D,OAAO,EAAEA,CAAA,KAAIyD,aAAa,CAACD,UAAU,KAAG,OAAO,GAAC,IAAI,GAAC,OAAO,CAAE;cAACzD,SAAS,EAAEyD,UAAU,KAAG,OAAO,GAAC,QAAQ,GAAC,EAAG;cAAA7D,QAAA,EAAC;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvIlE,OAAA;cAAQ6D,OAAO,EAAEA,CAAA,KAAIyD,aAAa,CAACD,UAAU,KAAG,KAAK,GAAC,IAAI,GAAC,KAAK,CAAE;cAACzD,SAAS,EAAEyD,UAAU,KAAG,KAAK,GAAC,QAAQ,GAAC,EAAG;cAAA7D,QAAA,EAAC;YAAQ;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/HlE,OAAA;cAAQ6D,OAAO,EAAEA,CAAA,KAAI;gBAAEyD,aAAa,CAAC,IAAI,CAAC;gBAAEJ,eAAe,CAAC,EAAE,CAAC;gBAAEM,aAAa,CAAC,IAAI,CAAC;gBAAEE,WAAW,CAAC,IAAI,CAAC;cAAE,CAAE;cAAAlE,QAAA,EAAC;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvH,CAAC,eACNlE,OAAA;YAAKsD,KAAK,EAAE;cAACgB,SAAS,EAAC;YAAC,CAAE;YAAAd,QAAA,eACxBxD,OAAA;cAAAwD,QAAA,GAAO,YAAU,eAAAxD,OAAA;gBAAO+M,IAAI,EAAC,QAAQ;gBAAC3C,GAAG,EAAE,CAAE;gBAACE,GAAG,EAAE,EAAG;gBAACpE,KAAK,EAAEiB,WAAY;gBAACpG,QAAQ,EAAE0E,CAAC,IAAE2B,cAAc,CAACZ,MAAM,CAACf,CAAC,CAACuH,MAAM,CAAC9G,KAAK,CAAC,CAAE;gBAAC5C,KAAK,EAAE;kBAACwJ,KAAK,EAAC,EAAE;kBAAEH,UAAU,EAAC;gBAAC;cAAE;gBAAA5I,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvK,CAAC,eACNlE,OAAA;YAAKsD,KAAK,EAAE;cAACgB,SAAS,EAAC;YAAC,CAAE;YAAAd,QAAA,gBACxBxD,OAAA;cAAAwD,QAAA,GAAK,SAAO,EAAC+D,UAAU,GAAC,GAAGA,UAAU,CAAC7B,QAAQ,CAACuH,OAAO,CAAC,CAAC,CAAC,KAAK1F,UAAU,CAAC1B,SAAS,CAACoH,OAAO,CAAC,CAAC,CAAC,EAAE,GAAC,GAAG;YAAA;cAAAlJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1GlE,OAAA;cAAAwD,QAAA,GAAK,OAAK,EAACiE,QAAQ,GAAC,GAAGA,QAAQ,CAAC/B,QAAQ,CAACuH,OAAO,CAAC,CAAC,CAAC,KAAKxF,QAAQ,CAAC5B,SAAS,CAACoH,OAAO,CAAC,CAAC,CAAC,EAAE,GAAC,GAAG;YAAA;cAAAlJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/F,CAAC,eACNlE,OAAA;YAAKsD,KAAK,EAAE;cAACgB,SAAS,EAAC;YAAC,CAAE;YAAAd,QAAA,eACxBxD,OAAA;cAAQ6D,OAAO,EAAE0F,oBAAqB;cAAA/F,QAAA,EAAC;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDlE,OAAA;UAAKsD,KAAK,EAAE;YAACgB,SAAS,EAAC;UAAE,CAAE;UAAAd,QAAA,gBACzBxD,OAAA;YAAK4D,SAAS,EAAC,eAAe;YAAAJ,QAAA,GAAC,iBAAe,eAAAxD,OAAA;cAAAwD,QAAA,EAAS,IAAItC,IAAI,CAAC2G,YAAY,CAAC,CAACqF,kBAAkB,CAAC;YAAC;cAAAnJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC7Gb,QAAQ,gBACXrD,OAAA;YAAKsD,KAAK,EAAE;cAACgB,SAAS,EAAC;YAAE,CAAE;YAAAd,QAAA,gBACzBxD,OAAA;cAAAwD,QAAA,EAAKsI,kBAAkB,CAACzI,QAAQ,CAACuF,IAAI;YAAC;cAAA7E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5ClE,OAAA;cAAK4D,SAAS,EAAC,OAAO;cAACN,KAAK,EAAE;gBAACG,OAAO,EAAC,MAAM;gBAAEC,cAAc,EAAC,eAAe;gBAAEC,UAAU,EAAC;cAAQ,CAAE;cAAAH,QAAA,gBAClGxD,OAAA;gBAAAwD,QAAA,gBAAKxD,OAAA;kBAAM4D,SAAS,EAAE,aAAakI,kBAAkB,CAACzI,QAAQ,CAAC6I,KAAK,CAAC,CAACM,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACpG,WAAW,CAAC,CAAC,EAAG;kBAAA5C,QAAA,EAAEsI,kBAAkB,CAACzI,QAAQ,CAAC6I,KAAK;gBAAC;kBAAAnI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,YAAG,EAACb,QAAQ,CAAC8J,WAAW;cAAA;gBAAApJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EACrLb,QAAQ,CAACiG,UAAU,GAAG,CAAC,MAAM;gBAC5B,MAAMmC,OAAO,GAAGC,6BAA6B,CAACrI,QAAQ,CAACiG,UAAU,CAAC;gBAClE,MAAM8D,OAAO,GAAG3B,OAAO,CAAChD,IAAI,CAAC,CAAC,CAACmD,CAAC,CAAC,KAAKzI,MAAM,CAACyI,CAAC,CAAC,CAACxF,WAAW,CAAC,CAAC,KAAK,eAAe,CAAC;gBAClF,IAAIgH,OAAO,EAAE;kBACX,MAAMjH,CAAC,GAAGH,kBAAkB,CAAC,eAAe,EAAEoH,OAAO,CAAC,CAAC,CAAC,CAAC;kBACzD,oBAAOpN,OAAA;oBAAK4D,SAAS,EAAE,SAASuC,CAAC,GAAGA,CAAC,CAACI,GAAG,GAAG,WAAW,EAAG;oBAAA/C,QAAA,EAAEsI,kBAAkB,CAAC3I,MAAM,CAACiK,OAAO,CAAC,CAAC,CAAC,CAAC;kBAAC;oBAAArJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAC3G;gBACA,OAAO,IAAI;cACb,CAAC,EAAE,CAAC,GAAG,IAAI;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACNlE,OAAA;cAAIsD,KAAK,EAAE;gBAACgB,SAAS,EAAC;cAAC,CAAE;cAAAd,QAAA,EAAC;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACxCb,QAAQ,CAACiG,UAAU,gBAClBtJ,OAAA;cAAAwD,QAAA,EACGkI,6BAA6B,CAACrI,QAAQ,CAACiG,UAAU,CAAC,CAChDmD,MAAM,CAAC,CAAC,CAACb,CAAC,CAAC,KAAK;gBACf,MAAM3F,GAAG,GAAG9C,MAAM,CAACyI,CAAC,CAAC,CAACxF,WAAW,CAAC,CAAC;gBACnC,OAAO,CAAC,CAAC,UAAU,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,eAAe,CAAC,CAACC,QAAQ,CAACJ,GAAG,CAAC;cAChG,CAAC,CAAC,CACDvB,GAAG,CAAC,CAAC,CAACkH,CAAC,EAAC9H,CAAC,CAAC,KAAG;gBACZ,MAAMoC,KAAK,GAAGwG,WAAW,CAACd,CAAC,EAAE9H,CAAC,CAAC;gBAC/B,MAAMqC,CAAC,GAAGH,kBAAkB,CAAC4F,CAAC,EAAC9H,CAAC,CAAC;gBACjC,oBACE9D,OAAA;kBAAa4D,SAAS,EAAC,kBAAkB;kBAAAJ,QAAA,gBACvCxD,OAAA;oBAAK4D,SAAS,EAAC,OAAO;oBAAAJ,QAAA,EAAEoI;kBAAC;oBAAA7H,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAChClE,OAAA;oBAAK4D,SAAS,EAAC,OAAO;oBAAAJ,QAAA,gBAACxD,OAAA;sBAAK4D,SAAS,EAAC,UAAU;sBAAAJ,QAAA,EAAE0C;oBAAK;sBAAAnC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAAAlE,OAAA;sBAAK4D,SAAS,EAAE,SAASuC,CAAC,CAACI,GAAG,EAAG;sBAAA/C,QAAA,EAAE2C,CAAC,CAACG;oBAAK;sBAAAvC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GAF7G0H,CAAC;kBAAA7H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGN,CAAC;cAEV,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,gBACJlE,OAAA;cAAAwD,QAAA,EAAK;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,gBAENlE,OAAA;YAAK4D,SAAS,EAAC,aAAa;YAACN,KAAK,EAAE;cAACgB,SAAS,EAAC;YAAE,CAAE;YAAAd,QAAA,EAAC;UAAiD;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAC3G;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACyC,GAAA,CAtRuBD,GAAG;AAAA2G,GAAA,GAAH3G,GAAG;AAwR3B,SAASgG,WAAWA,CAACzG,GAAG,EAAEC,KAAK,EAAE;EAC/B,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKnD,SAAS,EAAE,OAAO,GAAG;EACrD,MAAMuK,CAAC,GAAG9G,MAAM,CAACN,KAAK,CAAC;EACvB,IAAI,CAACM,MAAM,CAACC,KAAK,CAAC6G,CAAC,CAAC,EAAE;IACpB,IAAI,KAAK,CAACC,IAAI,CAACtH,GAAG,CAAC,EAAE,OAAOqH,CAAC,CAACL,OAAO,CAAC,CAAC,CAAC;IACxC,IAAI,mBAAmB,CAACM,IAAI,CAACtH,GAAG,CAAC,EAAE,OAAOqH,CAAC,CAACL,OAAO,CAAC,CAAC,CAAC;IACtD,OAAO9J,MAAM,CAACmK,CAAC,CAAC;EAClB;EACA,OAAOnK,MAAM,CAAC+C,KAAK,CAAC;AACtB;AAEA,SAAS4F,kBAAkBA,CAAC0B,OAAO,EAAE;EACnC,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKzK,SAAS,EAAE,OAAOyK,OAAO;EAC7D,IAAIrH,CAAC,GAAGhD,MAAM,CAACqK,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC;EAC9B,IAAI,CAACtH,CAAC,EAAE,OAAOA,CAAC;EAChB;EACAA,CAAC,GAAGA,CAAC,CAACqG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAC1B;EACArG,CAAC,GAAGA,CAAC,CAACqG,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACiB,IAAI,CAAC,CAAC;EAC3C;EACA,MAAM7L,CAAC,GAAGuE,CAAC,CAACuH,KAAK,CAAC,yBAAyB,CAAC;EAC5C,IAAI9L,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,EAAE,OAAOA,CAAC,CAAC,CAAC,CAAC,CAAC6L,IAAI,CAAC,CAAC;EACjC;EACA,MAAME,EAAE,GAAGxH,CAAC,CAACuH,KAAK,CAAC,cAAc,CAAC;EAClC,OAAOC,EAAE,GAAGA,EAAE,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,GAAGtH,CAAC;AAC9B;AAEA,SAASuF,6BAA6BA,CAACtC,IAAI,EAAE;EAC3C;EACA,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;EAChD,MAAM1E,GAAG,GAAG,IAAIkJ,GAAG,CAAC,CAAC;EACrB,KAAK,MAAM,CAAChC,CAAC,EAAE9H,CAAC,CAAC,IAAI+J,MAAM,CAACpC,OAAO,CAACrC,IAAI,CAAC,EAAE;IACzC,MAAMnD,GAAG,GAAG9C,MAAM,CAACyI,CAAC,CAAC,CAAC6B,IAAI,CAAC,CAAC;IAC5B,MAAMK,IAAI,GAAG7H,GAAG,CAACG,WAAW,CAAC,CAAC,CAACoG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACnD;IACA,MAAMuB,SAAS,GAAGD,IAAI,KAAK,eAAe,GAAG,eAAe,GAAGA,IAAI;IACnEpJ,GAAG,CAACsJ,GAAG,CAACD,SAAS,EAAE;MAAE9H,GAAG,EAAEA,GAAG;MAAEC,KAAK,EAAEpC;IAAE,CAAC,CAAC;EAC5C;EACA;EACA,OAAOmK,KAAK,CAACC,IAAI,CAACxJ,GAAG,CAACqE,MAAM,CAAC,CAAC,CAAC,CAACrE,GAAG,CAACyJ,CAAC,IAAI,CAACA,CAAC,CAAClI,GAAG,EAAEkI,CAAC,CAACjI,KAAK,CAAC,CAAC;AAC5D;AAAC,IAAAd,EAAA,EAAAW,GAAA,EAAAsH,GAAA;AAAAe,YAAA,CAAAhJ,EAAA;AAAAgJ,YAAA,CAAArI,GAAA;AAAAqI,YAAA,CAAAf,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}