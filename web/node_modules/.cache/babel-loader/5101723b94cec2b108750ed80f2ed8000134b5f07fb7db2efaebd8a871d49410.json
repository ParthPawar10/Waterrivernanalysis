{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// ensure leaflet marker icons load correctly when not using bundled images\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction Calendar({\n  date,\n  onChange\n}) {\n  _s();\n  const currentYear = new Date().getFullYear();\n  const [viewMonth, setViewMonth] = useState(date ? new Date(date).getMonth() : new Date().getMonth());\n  const [viewYear, setViewYear] = useState(date ? new Date(date).getFullYear() : new Date().getFullYear());\n  useEffect(() => {\n    if (date) {\n      const d = new Date(date);\n      setViewMonth(d.getMonth());\n      setViewYear(d.getFullYear());\n    }\n  }, [date]);\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const years = Array.from({\n    length: 101\n  }, (_, i) => currentYear - 50 + i);\n  const handleDateSelect = day => {\n    const selectedDate = new Date(viewYear, viewMonth, day);\n    const iso = selectedDate.toISOString().split('T')[0];\n    onChange && onChange(iso);\n  };\n  const getDaysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\n  const getFirstDayOfMonth = (year, month) => (new Date(year, month, 1).getDay() + 6) % 7; // Monday = 0\n\n  const renderCalendarGrid = () => {\n    const daysInMonth = getDaysInMonth(viewYear, viewMonth);\n    const firstDay = getFirstDayOfMonth(viewYear, viewMonth);\n    const selectedDate = date ? new Date(date) : null;\n    const days = [];\n    const totalCells = Math.ceil((daysInMonth + firstDay) / 7) * 7;\n    for (let i = 0; i < totalCells; i++) {\n      const dayNumber = i - firstDay + 1;\n      const isValidDay = dayNumber > 0 && dayNumber <= daysInMonth;\n      const currentDate = isValidDay ? new Date(viewYear, viewMonth, dayNumber) : null;\n      const isSelected = selectedDate && currentDate && currentDate.getTime() === selectedDate.getTime();\n      days.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => isValidDay && handleDateSelect(dayNumber),\n        disabled: !isValidDay,\n        style: {\n          padding: '10px',\n          border: 'none',\n          borderRadius: '8px',\n          background: isSelected ? 'var(--primary)' : isValidDay ? '#f8fafc' : 'transparent',\n          color: isSelected ? '#fff' : isValidDay ? '#0b3b52' : 'transparent',\n          cursor: isValidDay ? 'pointer' : 'default',\n          fontWeight: isSelected ? '700' : '500',\n          fontSize: '14px',\n          minHeight: '40px',\n          transition: 'all 0.2s ease'\n        },\n        onMouseEnter: e => {\n          if (isValidDay && !isSelected) {\n            e.target.style.background = '#e2e8f0';\n          }\n        },\n        onMouseLeave: e => {\n          if (isValidDay && !isSelected) {\n            e.target.style.background = '#f8fafc';\n          }\n        },\n        children: isValidDay ? dayNumber : ''\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px',\n      background: '#fff',\n      borderRadius: '12px',\n      border: '1px solid #e6eefb',\n      boxShadow: '0 2px 8px rgba(0,0,0,0.04)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '12px',\n        marginBottom: '20px',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: viewMonth,\n        onChange: e => setViewMonth(Number(e.target.value)),\n        style: {\n          padding: '10px 14px',\n          borderRadius: '8px',\n          border: '1px solid #e6eefb',\n          background: '#fff',\n          minWidth: '140px',\n          fontSize: '14px',\n          fontWeight: '600',\n          color: '#0b3b52',\n          cursor: 'pointer'\n        },\n        children: monthNames.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: viewYear,\n        onChange: e => setViewYear(Number(e.target.value)),\n        style: {\n          padding: '10px 14px',\n          borderRadius: '8px',\n          border: '1px solid #e6eefb',\n          background: '#fff',\n          minWidth: '100px',\n          fontSize: '14px',\n          fontWeight: '600',\n          color: '#0b3b52',\n          cursor: 'pointer'\n        },\n        children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '8px',\n        marginBottom: '16px',\n        textAlign: 'center'\n      },\n      children: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          fontWeight: '700',\n          color: '#64748b',\n          padding: '8px'\n        },\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '4px'\n      },\n      children: renderCalendarGrid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"jNcmkPuk3FBSDpfZW4bkveKbzaQ=\");\n_c = Calendar;\nfunction formatValue(key, value) {\n  if (value === null || value === undefined) return '—';\n  const n = Number(value);\n  if (!Number.isNaN(n)) {\n    if (/pH/i.test(key)) return n.toFixed(3);\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\n    return String(n);\n  }\n  return String(value);\n}\nfunction cleanQualityString(quality) {\n  if (quality === null || quality === undefined) return quality;\n  let s = String(quality).trim();\n  if (!s) return s;\n  // normalize whitespace\n  s = s.replace(/\\s+/g, ' ');\n  // remove duplicated trailing punctuation and normalize\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\n  if (m && m[1]) return m[1].trim();\n  // fallback: if full-string repeated twice (older regex)\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\n  return m2 ? m2[1].trim() : s;\n}\nfunction canonicalizePredictionEntries(pred) {\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\n  if (!pred || typeof pred !== 'object') return [];\n  const map = new Map();\n  for (const [k, v] of Object.entries(pred)) {\n    const key = String(k).trim();\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\n    // map some common aliases\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\n    map.set(canonical, {\n      key: key,\n      value: v\n    });\n  }\n  // return in insertion order but using original key casing for display\n  return Array.from(map.values()).map(x => [x.key, x.value]);\n}\n\n// small helper component to forward map click events into lat/lon objects\nfunction MapClickHandler({\n  onMapClick\n}) {\n  _s2();\n  useMapEvents({\n    click: e => {\n      onMapClick && onMapClick({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n    }\n  });\n  return null;\n}\n\n// basic parameter status mapping used by badges in the UI\n_s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = MapClickHandler;\nfunction getParameterStatus(param, value) {\n  if (value === null || value === undefined) return {\n    cls: 'status-na',\n    label: 'N/A'\n  };\n  const key = String(param || '').toLowerCase();\n  const v = Number(value);\n  if (key.includes('water quality')) {\n    const s = String(value || '').toLowerCase();\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (s.includes('moderate') || s.includes('borderline')) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: String(value),\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('pH')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 6.5 && v <= 8.5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 6 && v < 6.5) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('do')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 3) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('bod')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 3) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 6) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('fc mpn/100ml')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 500) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 1000) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('tc mpn/100ml')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 1000) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 2000) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  return {\n    label: String(value),\n    cls: 'status-na'\n  };\n}\nexport default function App() {\n  _s3();\n  const [route, setRoute] = useState('home');\n  const [mapInst, setMapInst] = useState(null);\n  const [selectMode, setSelectMode] = useState(null);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]);\n  const [interpLoading, setInterpLoading] = useState(false);\n  const [sampleCount, setSampleCount] = useState(5);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [startInput, setStartInput] = useState('');\n  const [endInput, setEndInput] = useState('');\n  const [startRiver, setStartRiver] = useState(null);\n  const [endRiver, setEndRiver] = useState(null);\n  const [startStationName, setStartStationName] = useState(null);\n  const [endStationName, setEndStationName] = useState(null);\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\n  const handleMapClick = useCallback(pt => {\n    if (selectMode === 'start') setStartPoint(pt);else if (selectMode === 'end') setEndPoint(pt);\n  }, [selectMode]);\n  const handleMarkerClick = loc => {\n    // In interpolate route, if user is picking start or end, set them from known station\n    if (route === 'interpolate' && selectMode === 'start') {\n      const coord = loc.coordinate || loc;\n      setStartPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setStartRiver(loc.river || null);\n      setStartStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    if (route === 'interpolate' && selectMode === 'end') {\n      // guard: do not allow picking end on a different river than start\n      if (startRiver && loc.river && startRiver !== loc.river) {\n        alert('Please pick an end station on the same river as the start station.');\n        setSelectMode(null);\n        return;\n      }\n      const coord = loc.coordinate || loc;\n      setEndPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setEndRiver(loc.river || null);\n      setEndStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    // default behaviour: open details\n    setSelected(loc);\n    // attach available prediction\n    const pred = predictions[loc.id] || null;\n    setSelected(prev => ({\n      ...loc,\n      prediction: pred\n    }));\n  };\n  const performInterpolation = async () => {\n    if (!startPoint || !endPoint) return alert('Pick start and end');\n    setInterpLoading(true);\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\n    const nearestIndex = pt => {\n      let best = 0,\n        bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPoint),\n      ei = nearestIndex(endPoint);\n    const a = Math.min(si, ei),\n      b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true,\n      blend: 'river'\n    };\n    // include explicit station-name override only when user forces index medians\n    if (forceIndexMedians && startStationName && endStationName) {\n      body.start_station_name = startStationName;\n      body.end_station_name = endStationName;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) return alert('Server: ' + jb.error);\n      const pts = jb.predictions || [];\n      setInterpPoints(pts);\n      // fit map to interpolated points if we have a map instance\n      try {\n        if (mapInst && pts && pts.length > 0) {\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\n          mapInst.fitBounds(latlngs, {\n            padding: [40, 40]\n          });\n        }\n      } catch (e) {}\n    } catch (err) {\n      alert('Request failed');\n    } finally {\n      setInterpLoading(false);\n    }\n  };\n  function haversineKm(a, b) {\n    if (!a || !b) return 0;\n    const toRad = v => v * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(b.latitude - a.latitude);\n    const dLon = toRad(b.longitude - a.longitude);\n    const lat1 = toRad(a.latitude);\n    const lat2 = toRad(b.latitude);\n    const sinDlat = Math.sin(dLat / 2),\n      sinDlon = Math.sin(dLon / 2);\n    const aa = sinDlat * sinDlat + sinDlon * sinDlon * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1 - aa));\n    return R * c;\n  }\n  const copyCoord = pt => {\n    if (!pt) return;\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\n    try {\n      navigator.clipboard && navigator.clipboard.writeText(s);\n    } catch (e) {}\n  };\n  const clearStart = () => {\n    setStartPoint(null);\n    setInterpPoints([]);\n  };\n  const clearEnd = () => {\n    setEndPoint(null);\n    setInterpPoints([]);\n  };\n\n  // Fetch predictions for all stations when app loads or selectedDate changes\n  useEffect(() => {\n    async function fetchPredictions() {\n      if (!selectedDate) return;\n      try {\n        const d = new Date(selectedDate);\n        const month = d.getMonth() + 1;\n        const year = d.getFullYear();\n        const res = await fetch(`${API_BASE}/predict_all?month=${month}&year=${year}`);\n        const jb = await res.json();\n        if (jb && jb.predictions) {\n          // Map predictions to station id\n          const preds = {};\n          jb.predictions.forEach(pred => {\n            // Find location by name\n            const loc = puneLocations.find(l => l.name === pred.location);\n            if (loc && loc.id) preds[loc.id] = pred;\n          });\n          setPredictions(preds);\n        }\n      } catch (err) {\n        // Optionally handle error\n      }\n    }\n    fetchPredictions();\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-hero\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo\",\n                children: /*#__PURE__*/_jsxDEV(FaWater, {\n                  size: 28,\n                  color: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"RiverWatch \\u2014 Pune Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"muted\",\n                  children: \"Water quality predictions for Pune rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col rivers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula\",\n                    children: \"Mula\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mutha\",\n                    children: \"Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula-mutha\",\n                    children: \"Mula-Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula-Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col params\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-names\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"DO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"BOD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"FC/TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 50\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-cta\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setRoute('predict'),\n                children: \"Go to Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"secondary\",\n                onClick: () => setRoute('interpolate'),\n                children: \"Go to Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          style: {\n            height: 'calc(100vh - 36px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [puneCenter.latitude, puneCenter.longitude],\n            zoom: puneCenter.zoom,\n            className: \"map\",\n            whenCreated: m => setMapInst(m),\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n              onMapClick: handleMapClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), puneLocations.map(loc => {\n              const pred = predictions[loc.id] || null;\n              const entries = pred ? canonicalizePredictionEntries(pred) : [];\n              const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n              const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\n              const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\n              return /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [loc.coordinate.latitude, loc.coordinate.longitude],\n                pathOptions: {\n                  color: getRiverColor(loc.river),\n                  fillColor: getRiverColor(loc.river),\n                  fillOpacity: 0.9\n                },\n                radius: 8,\n                eventHandlers: {\n                  click: () => handleMarkerClick(loc)\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-card\",\n                    style: {\n                      minWidth: 260\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-title\",\n                          children: cleanQualityString(loc.name)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 498,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-sub muted\",\n                          style: {\n                            display: 'flex',\n                            gap: 8,\n                            alignItems: 'center',\n                            marginTop: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                            children: cleanQualityString(loc.river)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 500,\n                            columnNumber: 33\n                          }, this), overallValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${overallStatus ? overallStatus.cls : 'status-na'}`,\n                            children: overallValue\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 501,\n                            columnNumber: 49\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 499,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 27\n                    }, this), pred ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-grid\",\n                      children: entries.filter(([k]) => {\n                        const key = String(k).toLowerCase();\n                        return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n                      }).map(([k, v]) => {\n                        const value = formatValue(k, v);\n                        const s = getParameterStatus(k, v);\n                        // For pH, show value and status side by side\n                        if (String(k).toLowerCase() === 'pH') {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-row\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"param-name\",\n                              children: k\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 520,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"param-value\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"val-text\",\n                                children: value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 522,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: `badge ${s.cls}`,\n                                style: {\n                                  marginLeft: 8\n                                },\n                                children: s.label\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 523,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 521,\n                              columnNumber: 41\n                            }, this)]\n                          }, k, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 519,\n                            columnNumber: 39\n                          }, this);\n                        }\n                        // For other parameters, show value and status as before\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"param-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-name\",\n                            children: k\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 531,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-value\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"val-text\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 533,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: `badge ${s.cls}`,\n                              style: {\n                                marginLeft: 8\n                              },\n                              children: s.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 534,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 532,\n                            columnNumber: 39\n                          }, this)]\n                        }, k, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 530,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this)\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this);\n            }), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [startPoint.latitude, startPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 58\n            }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [endPoint.latitude, endPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 56\n            }, this) : null, route === 'interpolate' && interpPoints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                positions: interpPoints.map(p => [p.latitude, p.longitude]),\n                pathOptions: {\n                  color: '#0077b6',\n                  weight: 3,\n                  opacity: 0.7\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 21\n              }, this), interpPoints.map((pt, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [pt.latitude, pt.longitude],\n                radius: 6,\n                pathOptions: {\n                  color: '#0077b6',\n                  fillColor: '#00b4d8',\n                  fillOpacity: 0.9\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minWidth: 220\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Interpolated\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 556,\n                          columnNumber: 36\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`,\n                        children: cleanQualityString(pt['Water Quality'])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 557,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 29\n                    }, this), ['pH', 'DO (mg/L)', 'BOD (mg/L)'].map((param, idx) => {\n                      const val = pt[param];\n                      const valStr = val === null || val === undefined ? '—' : Number(val).toFixed(3);\n                      const status = getParameterStatus(param, val);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          marginTop: idx === 0 ? 8 : 4,\n                          borderTop: idx === 0 ? '1px solid #edf2f7' : 'none',\n                          paddingTop: idx === 0 ? 8 : 0\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 13,\n                            color: '#334155',\n                            fontWeight: 700\n                          },\n                          children: param\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 566,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 18,\n                              fontWeight: 800,\n                              color: '#0b3b52'\n                            },\n                            children: valStr\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 568,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${status.cls}`,\n                            children: status.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 569,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 567,\n                          columnNumber: 35\n                        }, this)]\n                      }, param, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 33\n                      }, this);\n                    }), ['FC MPN/100ml', 'TC MPN/100ml'].map(param => {\n                      if (pt[param] !== undefined && pt[param] !== null) {\n                        const val = pt[param];\n                        const valStr = val === null || val === undefined ? '—' : Number(val).toFixed(2);\n                        const status = getParameterStatus(param, val);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            marginTop: 4\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 13,\n                              color: '#334155',\n                              fontWeight: 700\n                            },\n                            children: param\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 582,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: 8\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                fontSize: 15,\n                                fontWeight: 700,\n                                color: '#0b3b52'\n                              },\n                              children: valStr\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 584,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: `badge ${status.cls}`,\n                              children: status.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 585,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 583,\n                            columnNumber: 37\n                          }, this)]\n                        }, param, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 581,\n                          columnNumber: 35\n                        }, this);\n                      }\n                      return null;\n                    }), pt && pt.t_frac !== undefined && pt.t_frac !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8,\n                        fontSize: 12,\n                        color: '#64748b'\n                      },\n                      children: [\"Blend t: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: Number(pt.t_frac).toFixed(3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 31\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 25\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"detail-panel\",\n        style: {\n          width: 360\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8,\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('home'),\n            className: \"small\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('interpolate'),\n            className: \"small primary\",\n            children: \"Interpolate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), route === 'interpolate' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls-row\",\n              style: {\n                marginBottom: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n                className: selectMode === 'start' ? 'active small primary' : '',\n                children: \"Pick Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n                className: selectMode === 'end' ? 'active small primary' : '',\n                children: \"Pick End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectMode(null);\n                  setInterpPoints([]);\n                  setStartPoint(null);\n                  setEndPoint(null);\n                  setStartInput('');\n                  setEndInput('');\n                  setStartRiver(null);\n                  setEndRiver(null);\n                  setStartStationName(null);\n                  setEndStationName(null);\n                },\n                className: \"small\",\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 8,\n                color: '#0b3b52',\n                fontSize: 13\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick stations only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 75\n              }, this), \" \\u2014 interpolation will use river-linear blending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 12,\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 0,\n                  fontSize: 13,\n                  color: '#475569'\n                },\n                children: \"Points k:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-box\",\n                type: \"number\",\n                min: 1,\n                max: 50,\n                value: sampleCount,\n                onChange: e => setSampleCount(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.min(50, (sampleCount || 1) + 1));\n                  },\n                  children: \"+1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.max(1, (sampleCount || 1) - 1));\n                  },\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: \"-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: startInput || (startPoint ? `${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setStartInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(startPoint);\n                  },\n                  disabled: !startPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setStartInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 435\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearStart();\n                    setStartInput('');\n                    setStartRiver(null);\n                    setStartStationName(null);\n                  },\n                  disabled: !startPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 194\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: endInput || (endPoint ? `${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setEndInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(endPoint);\n                  },\n                  disabled: !endPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setEndInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 431\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearEnd();\n                    setEndInput('');\n                    setEndRiver(null);\n                    setEndStationName(null);\n                  },\n                  disabled: !endPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 184\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Distance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#233249'\n                  },\n                  children: startPoint && endPoint ? `${haversineKm(startPoint, endPoint).toFixed(2)} km` : '—'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 8,\n                  marginLeft: 12\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12,\n                    color: '#475569'\n                  },\n                  children: forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-primary\",\n                  onClick: performInterpolation,\n                  disabled: !startPoint || !endPoint || interpLoading,\n                  children: interpLoading ? 'Interpolating…' : 'Interpolate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedDate ? new Date(selectedDate).toLocaleDateString() : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cleanQualityString(selected.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                  children: cleanQualityString(selected.river)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 24\n                }, this), \" \\u2022 \", selected.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), selected.prediction ? (() => {\n                const entries = canonicalizePredictionEntries(selected.prediction);\n                const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n                if (overall) {\n                  const s = getParameterStatus('Water Quality', overall[1]);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `badge ${s ? s.cls : 'status-na'}`,\n                    children: cleanQualityString(String(overall[1]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 30\n                  }, this);\n                }\n                return null;\n              })() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: canonicalizePredictionEntries(selected.prediction).filter(([k]) => {\n                const key = String(k).toLowerCase();\n                return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n              }).map(([k, v]) => {\n                const value = formatValue(k, v);\n                const s = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"value\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"val-text\",\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `badge ${s.cls}`,\n                      children: s.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 29\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            style: {\n              marginTop: 12\n            },\n            children: \"Select a location on the map to see details here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"hR/42s9VX7cVD1feNx7qF95sfIk=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"MapClickHandler\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MapContainer","TileLayer","Marker","Popup","CircleMarker","Polyline","useMapEvents","L","FaWater","FaCopy","FaTrash","FaPaste","puneLocations","puneCenter","getRiverColor","preSampledRiver","riverDescriptions","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Calendar","date","onChange","_s","currentYear","Date","getFullYear","viewMonth","setViewMonth","getMonth","viewYear","setViewYear","d","monthNames","years","Array","from","length","_","i","handleDateSelect","day","selectedDate","iso","toISOString","split","getDaysInMonth","year","month","getDate","getFirstDayOfMonth","getDay","renderCalendarGrid","daysInMonth","firstDay","days","totalCells","Math","ceil","dayNumber","isValidDay","currentDate","isSelected","getTime","push","onClick","disabled","style","padding","border","borderRadius","background","color","cursor","fontWeight","fontSize","minHeight","transition","onMouseEnter","e","target","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","boxShadow","display","gap","marginBottom","justifyContent","value","Number","minWidth","map","index","gridTemplateColumns","textAlign","_c","formatValue","key","undefined","n","isNaN","test","toFixed","String","cleanQualityString","quality","s","trim","replace","m","match","m2","canonicalizePredictionEntries","pred","Map","k","v","Object","entries","norm","toLowerCase","canonical","set","values","x","MapClickHandler","onMapClick","_s2","click","latitude","latlng","lat","longitude","lng","_c2","getParameterStatus","param","cls","label","includes","App","_s3","route","setRoute","mapInst","setMapInst","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","interpPoints","setInterpPoints","interpLoading","setInterpLoading","sampleCount","setSampleCount","setSelectedDate","predictions","setPredictions","selected","setSelected","startInput","setStartInput","endInput","setEndInput","startRiver","setStartRiver","endRiver","setEndRiver","startStationName","setStartStationName","endStationName","setEndStationName","forceIndexMedians","setForceIndexMedians","handleMapClick","pt","handleMarkerClick","loc","coord","coordinate","river","name","alert","id","prev","prediction","performInterpolation","nearestIndex","best","bestD","Infinity","dlat","dlng","d2","si","ei","a","min","b","max","sub","slice","body","locations","points","pick_from_input","blend","start_station_name","end_station_name","res","fetch","method","headers","JSON","stringify","jb","json","error","pts","latlngs","p","fitBounds","err","haversineKm","toRad","PI","R","dLat","dLon","lat1","lat2","sinDlat","sin","sinDlon","aa","cos","c","atan2","sqrt","copyCoord","navigator","clipboard","writeText","clearStart","clearEnd","fetchPredictions","preds","forEach","find","l","location","className","flex","size","height","center","zoom","whenCreated","url","overallEntry","overallValue","overallStatus","pathOptions","fillColor","fillOpacity","radius","eventHandlers","alignItems","marginTop","filter","marginLeft","position","positions","weight","opacity","idx","val","valStr","status","borderTop","paddingTop","t_frac","width","margin","type","readOnly","onBlur","parts","Boolean","lon","onKeyDown","blur","placeholder","t","readText","title","toLocaleDateString","description","overall","_c3","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\n// ensure leaflet marker icons load correctly when not using bundled images\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction Calendar({ date, onChange }) {\r\n  const currentYear = new Date().getFullYear();\r\n  const [viewMonth, setViewMonth] = useState(date ? new Date(date).getMonth() : new Date().getMonth());\r\n  const [viewYear, setViewYear] = useState(date ? new Date(date).getFullYear() : new Date().getFullYear());\r\n\r\n  useEffect(() => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      setViewMonth(d.getMonth());\r\n      setViewYear(d.getFullYear());\r\n    }\r\n  }, [date]);\r\n\r\n  const monthNames = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  const years = Array.from({ length: 101 }, (_, i) => currentYear - 50 + i);\r\n\r\n  const handleDateSelect = (day) => {\r\n    const selectedDate = new Date(viewYear, viewMonth, day);\r\n    const iso = selectedDate.toISOString().split('T')[0];\r\n    onChange && onChange(iso);\r\n  };\r\n\r\n  const getDaysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\r\n  const getFirstDayOfMonth = (year, month) => (new Date(year, month, 1).getDay() + 6) % 7; // Monday = 0\r\n\r\n  const renderCalendarGrid = () => {\r\n    const daysInMonth = getDaysInMonth(viewYear, viewMonth);\r\n    const firstDay = getFirstDayOfMonth(viewYear, viewMonth);\r\n    const selectedDate = date ? new Date(date) : null;\r\n    \r\n    const days = [];\r\n    const totalCells = Math.ceil((daysInMonth + firstDay) / 7) * 7;\r\n\r\n    for (let i = 0; i < totalCells; i++) {\r\n      const dayNumber = i - firstDay + 1;\r\n      const isValidDay = dayNumber > 0 && dayNumber <= daysInMonth;\r\n      \r\n      const currentDate = isValidDay ? new Date(viewYear, viewMonth, dayNumber) : null;\r\n      const isSelected = selectedDate && currentDate && \r\n        currentDate.getTime() === selectedDate.getTime();\r\n\r\n      days.push(\r\n        <button\r\n          key={i}\r\n          onClick={() => isValidDay && handleDateSelect(dayNumber)}\r\n          disabled={!isValidDay}\r\n          style={{\r\n            padding: '10px',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n            background: isSelected ? 'var(--primary)' : (isValidDay ? '#f8fafc' : 'transparent'),\r\n            color: isSelected ? '#fff' : (isValidDay ? '#0b3b52' : 'transparent'),\r\n            cursor: isValidDay ? 'pointer' : 'default',\r\n            fontWeight: isSelected ? '700' : '500',\r\n            fontSize: '14px',\r\n            minHeight: '40px',\r\n            transition: 'all 0.2s ease'\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            if (isValidDay && !isSelected) {\r\n              e.target.style.background = '#e2e8f0';\r\n            }\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            if (isValidDay && !isSelected) {\r\n              e.target.style.background = '#f8fafc';\r\n            }\r\n          }}\r\n        >\r\n          {isValidDay ? dayNumber : ''}\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      padding: '16px', \r\n      background: '#fff', \r\n      borderRadius: '12px', \r\n      border: '1px solid #e6eefb',\r\n      boxShadow: '0 2px 8px rgba(0,0,0,0.04)'\r\n    }}>\r\n      <div style={{ \r\n        display: 'flex', \r\n        gap: '12px', \r\n        marginBottom: '20px', \r\n        justifyContent: 'center' \r\n      }}>\r\n        <select\r\n          value={viewMonth}\r\n          onChange={(e) => setViewMonth(Number(e.target.value))}\r\n          style={{\r\n            padding: '10px 14px',\r\n            borderRadius: '8px',\r\n            border: '1px solid #e6eefb',\r\n            background: '#fff',\r\n            minWidth: '140px',\r\n            fontSize: '14px',\r\n            fontWeight: '600',\r\n            color: '#0b3b52',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          {monthNames.map((month, index) => (\r\n            <option key={index} value={index}>{month}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={viewYear}\r\n          onChange={(e) => setViewYear(Number(e.target.value))}\r\n          style={{\r\n            padding: '10px 14px',\r\n            borderRadius: '8px',\r\n            border: '1px solid #e6eefb',\r\n            background: '#fff',\r\n            minWidth: '100px',\r\n            fontSize: '14px',\r\n            fontWeight: '600',\r\n            color: '#0b3b52',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          {years.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(7, 1fr)', \r\n        gap: '8px', \r\n        marginBottom: '16px', \r\n        textAlign: 'center' \r\n      }}>\r\n        {['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(day => (\r\n          <div key={day} style={{ \r\n            fontSize: '12px', \r\n            fontWeight: '700', \r\n            color: '#64748b', \r\n            padding: '8px' \r\n          }}>\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(7, 1fr)', \r\n        gap: '4px' \r\n      }}>\r\n        {renderCalendarGrid()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatValue(key, value) {\r\n  if (value === null || value === undefined) return '—';\r\n  const n = Number(value);\r\n  if (!Number.isNaN(n)) {\r\n  if (/pH/i.test(key)) return n.toFixed(3);\r\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\r\n    return String(n);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nfunction cleanQualityString(quality) {\r\n  if (quality === null || quality === undefined) return quality;\r\n  let s = String(quality).trim();\r\n  if (!s) return s;\r\n  // normalize whitespace\r\n  s = s.replace(/\\s+/g, ' ');\r\n  // remove duplicated trailing punctuation and normalize\r\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\r\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\r\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\r\n  if (m && m[1]) return m[1].trim();\r\n  // fallback: if full-string repeated twice (older regex)\r\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\r\n  return m2 ? m2[1].trim() : s;\r\n}\r\n\r\nfunction canonicalizePredictionEntries(pred) {\r\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\r\n  if (!pred || typeof pred !== 'object') return [];\r\n  const map = new Map();\r\n  for (const [k, v] of Object.entries(pred)) {\r\n    const key = String(k).trim();\r\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\r\n    // map some common aliases\r\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\r\n    map.set(canonical, { key: key, value: v });\r\n  }\r\n  // return in insertion order but using original key casing for display\r\n  return Array.from(map.values()).map(x => [x.key, x.value]);\r\n}\r\n\r\n// small helper component to forward map click events into lat/lon objects\r\nfunction MapClickHandler({ onMapClick }) {\r\n  useMapEvents({ click: (e) => { onMapClick && onMapClick({ latitude: e.latlng.lat, longitude: e.latlng.lng }); } });\r\n  return null;\r\n}\r\n\r\n// basic parameter status mapping used by badges in the UI\r\nfunction getParameterStatus(param, value) {\r\n  if (value === null || value === undefined) return { cls: 'status-na', label: 'N/A' };\r\n  const key = String(param || '').toLowerCase();\r\n  const v = Number(value);\r\n  if (key.includes('water quality')) {\r\n    const s = String(value || '').toLowerCase();\r\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return { label: 'Good', cls: 'status-good' };\r\n    if (s.includes('moderate') || s.includes('borderline')) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: String(value), cls: 'status-poor' };\r\n  }\r\n  if (key.includes('pH')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 6 && v < 6.5) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('do')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 3) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('bod')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 3) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 6) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('fc mpn/100ml')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 500) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('tc mpn/100ml')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 1000) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 2000) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  return { label: String(value), cls: 'status-na' };\r\n}\r\n\r\nexport default function App() {\r\n  const [route, setRoute] = useState('home');\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectMode, setSelectMode] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]);\r\n  const [interpLoading, setInterpLoading] = useState(false);\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [startInput, setStartInput] = useState('');\r\n  const [endInput, setEndInput] = useState('');\r\n  const [startRiver, setStartRiver] = useState(null);\r\n  const [endRiver, setEndRiver] = useState(null);\r\n  const [startStationName, setStartStationName] = useState(null);\r\n  const [endStationName, setEndStationName] = useState(null);\r\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\r\n\r\n  const handleMapClick = useCallback((pt) => {\r\n    if (selectMode === 'start') setStartPoint(pt);\r\n    else if (selectMode === 'end') setEndPoint(pt);\r\n  }, [selectMode]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    // In interpolate route, if user is picking start or end, set them from known station\r\n    if (route === 'interpolate' && selectMode === 'start') {\r\n      const coord = loc.coordinate || loc;\r\n      setStartPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setStartRiver(loc.river || null);\r\n  setStartStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    if (route === 'interpolate' && selectMode === 'end') {\r\n      // guard: do not allow picking end on a different river than start\r\n      if (startRiver && loc.river && startRiver !== loc.river) {\r\n        alert('Please pick an end station on the same river as the start station.');\r\n        setSelectMode(null);\r\n        return;\r\n      }\r\n      const coord = loc.coordinate || loc;\r\n      setEndPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setEndRiver(loc.river || null);\r\n  setEndStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    // default behaviour: open details\r\n    setSelected(loc);\r\n    // attach available prediction\r\n    const pred = predictions[loc.id] || null;\r\n    setSelected(prev => ({...loc, prediction: pred}));\r\n  };\r\n\r\n  const performInterpolation = async () => {\r\n  if (!startPoint || !endPoint) return alert('Pick start and end');\r\n  setInterpLoading(true);\r\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\r\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\r\n    const nearestIndex = (pt) => {\r\n      let best = 0, bestD = Infinity;\r\n      for (let i=0;i<preSampledRiver.length;i++){\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat*dlat + dlng*dlng;\r\n        if (d2 < bestD){ bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPoint), ei = nearestIndex(endPoint);\r\n    const a = Math.min(si, ei), b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b+1);\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true, blend: 'river' };\r\n    // include explicit station-name override only when user forces index medians\r\n    if (forceIndexMedians && startStationName && endStationName) {\r\n      body.start_station_name = startStationName;\r\n      body.end_station_name = endStationName;\r\n    }\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) return alert('Server: '+jb.error);\r\n      const pts = jb.predictions || [];\r\n      setInterpPoints(pts);\r\n      // fit map to interpolated points if we have a map instance\r\n      try{\r\n        if (mapInst && pts && pts.length > 0){\r\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\r\n          mapInst.fitBounds(latlngs, { padding: [40,40] });\r\n        }\r\n      }catch(e){}\r\n    } catch (err) { alert('Request failed'); }\r\n    finally { setInterpLoading(false); }\r\n  };\r\n\r\n  function haversineKm(a, b) {\r\n    if (!a || !b) return 0;\r\n    const toRad = v => v * Math.PI / 180;\r\n    const R = 6371;\r\n    const dLat = toRad(b.latitude - a.latitude);\r\n    const dLon = toRad(b.longitude - a.longitude);\r\n    const lat1 = toRad(a.latitude);\r\n    const lat2 = toRad(b.latitude);\r\n    const sinDlat = Math.sin(dLat/2), sinDlon = Math.sin(dLon/2);\r\n    const aa = sinDlat*sinDlat + sinDlon*sinDlon * Math.cos(lat1)*Math.cos(lat2);\r\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1-aa));\r\n    return R * c;\r\n  }\r\n\r\n  const copyCoord = (pt) => {\r\n    if (!pt) return;\r\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\r\n    try { navigator.clipboard && navigator.clipboard.writeText(s); } catch(e) {}\r\n  };\r\n\r\n  const clearStart = () => { setStartPoint(null); setInterpPoints([]); };\r\n  const clearEnd = () => { setEndPoint(null); setInterpPoints([]); };\r\n\r\n  // Fetch predictions for all stations when app loads or selectedDate changes\r\n  useEffect(() => {\r\n    async function fetchPredictions() {\r\n      if (!selectedDate) return;\r\n      try {\r\n        const d = new Date(selectedDate);\r\n        const month = d.getMonth() + 1;\r\n        const year = d.getFullYear();\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${month}&year=${year}`);\r\n        const jb = await res.json();\r\n        if (jb && jb.predictions) {\r\n          // Map predictions to station id\r\n          const preds = {};\r\n          jb.predictions.forEach((pred) => {\r\n            // Find location by name\r\n            const loc = puneLocations.find(l => l.name === pred.location);\r\n            if (loc && loc.id) preds[loc.id] = pred;\r\n          });\r\n          setPredictions(preds);\r\n        }\r\n      } catch (err) {\r\n        // Optionally handle error\r\n      }\r\n    }\r\n    fetchPredictions();\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <main className=\"main\" style={{display:'flex', gap:20}}>\r\n        <div style={{flex:1}}>\r\n          {route === 'home' ? (\r\n            <div className=\"home-page\">\r\n              <div className=\"home-card\">\r\n                <div className=\"home-hero\">\r\n                  <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                  <div>\r\n                    <h1>RiverWatch — Pune Rivers</h1>\r\n                    <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                  </div>\r\n                </div>\r\n                <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.</p>\r\n                <div className=\"columns\">\r\n                  <div className=\"col rivers\">\r\n                    <h3>Rivers</h3>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula\">Mula</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mutha\">Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula-mutha\">Mula-Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula-Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col center\">\r\n                    <h3>About</h3>\r\n                    <p>This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.</p>\r\n                  </div>\r\n                  <div className=\"col params\">\r\n                    <h3>Parameters</h3>\r\n                    <ul className=\"param-names\">\r\n                      <li><strong>pH</strong> <div className=\"desc\">Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.</div></li>\r\n                      <li><strong>DO</strong> <div className=\"desc\">Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.</div></li>\r\n                      <li><strong>BOD</strong> <div className=\"desc\">Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.</div></li>\r\n                      <li><strong>FC/TC</strong> <div className=\"desc\">Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.</div></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"home-cta\">\r\n                  <button onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                  <button className=\"secondary\" onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-content\" style={{height: 'calc(100vh - 36px)'}}>\r\n              <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m=>setMapInst(m)} style={{height:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MapClickHandler onMapClick={handleMapClick} />\r\n                {puneLocations.map(loc => {\r\n                  const pred = predictions[loc.id] || null;\r\n                  const entries = pred ? canonicalizePredictionEntries(pred) : [];\r\n                  const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                  const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\r\n                  const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\r\n\r\n                  return (\r\n                    <CircleMarker key={loc.id} center={[loc.coordinate.latitude, loc.coordinate.longitude]} pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity:0.9 }} radius={8} eventHandlers={{ click: () => handleMarkerClick(loc) }}>\r\n                      <Popup>\r\n                        <div className=\"popup-card\" style={{minWidth:260}}>\r\n                          <div className=\"popup-header\">\r\n                            <div>\r\n                              <div className=\"popup-title\">{cleanQualityString(loc.name)}</div>\r\n                              <div className=\"popup-sub muted\" style={{display:'flex',gap:8,alignItems:'center',marginTop:8}}>\r\n                                <span className={`river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(loc.river)}</span>\r\n                                {overallValue ? <div className={`badge ${overallStatus ? overallStatus.cls : 'status-na'}`}>{overallValue}</div> : null}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {pred ? (\r\n                            <div className=\"popup-grid\">\r\n                              {entries\r\n                                .filter(([k]) => {\r\n                                  const key = String(k).toLowerCase();\r\n                                  return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                                })\r\n                                .map(([k,v]) => {\r\n                                  const value = formatValue(k, v);\r\n                                  const s = getParameterStatus(k, v);\r\n                                  // For pH, show value and status side by side\r\n                                  if (String(k).toLowerCase() === 'pH') {\r\n                                    return (\r\n                                      <div className=\"param-row\" key={k}>\r\n                                        <div className=\"param-name\">{k}</div>\r\n                                        <div className=\"param-value\">\r\n                                          <span className=\"val-text\">{value}</span>\r\n                                          <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                        </div>\r\n                                      </div>\r\n                                    );\r\n                                  }\r\n                                  // For other parameters, show value and status as before\r\n                                  return (\r\n                                    <div className=\"param-row\" key={k}>\r\n                                      <div className=\"param-name\">{k}</div>\r\n                                      <div className=\"param-value\">\r\n                                        <span className=\"val-text\">{value}</span>\r\n                                        <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          ) : <div style={{marginTop:8}}>Loading...</div>}\r\n                        </div>\r\n                      </Popup>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n                {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n                {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n                {route === 'interpolate' && interpPoints.length > 0 && (\r\n                  <>\r\n                    <Polyline positions={interpPoints.map(p => [p.latitude, p.longitude])} pathOptions={{color:'#0077b6', weight:3, opacity:0.7}} />\r\n                    {interpPoints.map((pt, i) => (\r\n                      <CircleMarker key={i} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{color:'#0077b6', fillColor:'#00b4d8', fillOpacity:0.9}}>\r\n                        <Popup>\r\n                          <div style={{minWidth:220}}>\r\n                            <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n                              <div><strong>Interpolated</strong></div>\r\n                              <div className={`badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`}>{cleanQualityString(pt['Water Quality'])}</div>\r\n                            </div>\r\n                            {/* Show pH, DO, BOD rows prominently */}\r\n                            {['pH', 'DO (mg/L)', 'BOD (mg/L)'].map((param, idx) => {\r\n                              const val = pt[param];\r\n                              const valStr = (val === null || val === undefined) ? '—' : Number(val).toFixed(3);\r\n                              const status = getParameterStatus(param, val);\r\n                              return (\r\n                                <div key={param} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:idx===0?8:4,borderTop:idx===0?'1px solid #edf2f7':'none',paddingTop:idx===0?8:0}}>\r\n                                  <div style={{fontSize:13,color:'#334155',fontWeight:700}}>{param}</div>\r\n                                  <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                    <div style={{fontSize:18,fontWeight:800,color:'#0b3b52'}}>{valStr}</div>\r\n                                    <div className={`badge ${status.cls}`}>{status.label}</div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                            {/* Optionally show FC/TC if present */}\r\n                            {['FC MPN/100ml', 'TC MPN/100ml'].map((param) => {\r\n                              if (pt[param] !== undefined && pt[param] !== null) {\r\n                                const val = pt[param];\r\n                                const valStr = (val === null || val === undefined) ? '—' : Number(val).toFixed(2);\r\n                                const status = getParameterStatus(param, val);\r\n                                return (\r\n                                  <div key={param} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:4}}>\r\n                                    <div style={{fontSize:13,color:'#334155',fontWeight:700}}>{param}</div>\r\n                                    <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                      <div style={{fontSize:15,fontWeight:700,color:'#0b3b52'}}>{valStr}</div>\r\n                                      <div className={`badge ${status.cls}`}>{status.label}</div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                              return null;\r\n                            })}\r\n                            {/* show t_frac if returned by server */}\r\n                            {pt && (pt.t_frac !== undefined && pt.t_frac !== null) ? (\r\n                              <div style={{marginTop:8,fontSize:12,color:'#64748b'}}>Blend t: <strong>{Number(pt.t_frac).toFixed(3)}</strong></div>\r\n                            ) : null}\r\n                          </div>\r\n                        </Popup>\r\n                      </CircleMarker>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </MapContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* right sidebar: show only on inner pages (not on Home) */}\r\n        {route !== 'home' && (\r\n          <aside className=\"detail-panel\" style={{width:360}}>\r\n          <div style={{display:'flex', justifyContent:'flex-end', gap:8, padding:8}}>\r\n            <button onClick={()=>setRoute('home')} className=\"small\">Home</button>\r\n            <button onClick={()=>setRoute('interpolate')} className=\"small primary\">Interpolate</button>\r\n          </div>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d=>setSelectedDate(d)} />\r\n          </div>\r\n\r\n          {route === 'interpolate' && (\r\n            <div style={{marginTop:12}}>\r\n              <div className=\"control-card\">\r\n                <div className=\"controls-row\" style={{marginBottom:8}}>\r\n                  <button onClick={()=>setSelectMode(selectMode==='start'?null:'start')} className={selectMode==='start'?'active small primary':''}>Pick Start</button>\r\n                  <button onClick={()=>setSelectMode(selectMode==='end'?null:'end')} className={selectMode==='end'?'active small primary':''}>Pick End</button>\r\n                  <button onClick={()=>{ setSelectMode(null); setInterpPoints([]); setStartPoint(null); setEndPoint(null); setStartInput(''); setEndInput(''); setStartRiver(null); setEndRiver(null); setStartStationName(null); setEndStationName(null); }} className=\"small\">Reset</button>\r\n                </div>\r\n                <div style={{marginBottom:8,color:'#0b3b52',fontSize:13}}><strong>Pick stations only</strong> — interpolation will use river-linear blending</div>\r\n\r\n                <div style={{display:'flex',gap:12,alignItems:'center',marginBottom:10}}>\r\n                  <label style={{margin:0,fontSize:13,color:'#475569'}}>Points k:</label>\r\n                  <input className=\"input-box\" type=\"number\" min={1} max={50} value={sampleCount} onChange={e=>setSampleCount(Number(e.target.value))} />\r\n                  <div style={{marginLeft:'auto'}}>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.min(50, (sampleCount||1)+1) ); }}>+1</button>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.max(1, (sampleCount||1)-1) ); }} style={{marginLeft:6}}>-1</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">Start</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={startInput || (startPoint?`${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}`:'')} onChange={e=>setStartInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(startPoint); }} disabled={!startPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setStartInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearStart(); setStartInput(''); setStartRiver(null); setStartStationName(null); }} disabled={!startPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">End</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={endInput || (endPoint?`${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}`:'')} onChange={e=>setEndInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(endPoint); }} disabled={!endPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setEndInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearEnd(); setEndInput(''); setEndRiver(null); setEndStationName(null); }} disabled={!endPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{marginTop:8,display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n                  <div className=\"muted\">Distance: <strong style={{color:'#233249'}}>{(startPoint && endPoint)?`${haversineKm(startPoint,endPoint).toFixed(2)} km`:'—'}</strong></div>\r\n                  <div style={{display:'flex',alignItems:'center',gap:8,marginLeft:12}}>\r\n                    <div style={{fontSize:12,color:'#475569'}}>{forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'}</div>\r\n                    <button className=\"btn-primary\" onClick={performInterpolation} disabled={!startPoint || !endPoint || interpLoading}>{interpLoading ? 'Interpolating…' : 'Interpolate'}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{marginTop:16}}>\r\n            <div className=\"selected-date\">Selected date: <strong>{selectedDate ? new Date(selectedDate).toLocaleDateString() : 'None'}</strong></div>\r\n                {selected ? (\r\n              <div style={{marginTop:12}}>\r\n                <h3>{cleanQualityString(selected.name)}</h3>\r\n                <div className=\"muted\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n                  <div><span className={`river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(selected.river)}</span> • {selected.description}</div>\r\n                  {selected.prediction ? (() => {\r\n                    const entries = canonicalizePredictionEntries(selected.prediction);\r\n                    const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                    if (overall) {\r\n                      const s = getParameterStatus('Water Quality', overall[1]);\r\n                      return <div className={`badge ${s ? s.cls : 'status-na'}`}>{cleanQualityString(String(overall[1]))}</div>;\r\n                    }\r\n                    return null;\r\n                  })() : null}\r\n                </div>\r\n                <h4 style={{marginTop:8}}>Prediction</h4>\r\n                {selected.prediction ? (\r\n                  <div>\r\n                    {canonicalizePredictionEntries(selected.prediction)\r\n                      .filter(([k]) => {\r\n                        const key = String(k).toLowerCase();\r\n                        return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                      })\r\n                      .map(([k,v])=>{\r\n                        const value = formatValue(k, v);\r\n                        const s = getParameterStatus(k,v);\r\n                        return (\r\n                          <div key={k} className=\"inline-param-row\">\r\n                            <div className=\"label\">{k}</div>\r\n                            <div className=\"value\"><div className=\"val-text\">{value}</div><div className={`badge ${s.cls}`}>{s.label}</div></div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : <div>Loading...</div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"placeholder\" style={{marginTop:12}}>Select a location on the map to see details here.</div>\r\n            )}\r\n          </div>\r\n          </aside>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}