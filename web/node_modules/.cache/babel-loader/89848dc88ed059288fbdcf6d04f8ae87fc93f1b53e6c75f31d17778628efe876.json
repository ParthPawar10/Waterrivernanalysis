{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n// ensure leaflet marker icons load correctly when not using bundled images\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction Calendar({\n  date,\n  onChange\n}) {\n  _s();\n  const base = date ? new Date(date) : new Date();\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\n  React.useEffect(() => {\n    const d = date ? new Date(date) : new Date();\n    setViewMonth(d.getMonth());\n    setViewYear(d.getFullYear());\n  }, [date]);\n  const startOfMonth = (y, m) => new Date(y, m, 1);\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\n  const weeks = [];\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\n  const total = leading + daysInMonth(viewYear, viewMonth);\n  const rows = Math.ceil(total / 7);\n  let day = 1 - leading;\n  for (let r = 0; r < rows; r++) {\n    const week = [];\n    for (let c = 0; c < 7; c++, day++) {\n      const cellDate = new Date(viewYear, viewMonth, day);\n      week.push(cellDate);\n    }\n    weeks.push(week);\n  }\n  const monthNames = Array.from({\n    length: 12\n  }, (_, i) => new Date(2000, i).toLocaleString(undefined, {\n    month: 'long'\n  }));\n  const selectDate = d => {\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    onChange && onChange(iso);\n  };\n  const selected = date ? new Date(date) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-calendar\",\n    style: {\n      padding: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small\",\n        onClick: () => {\n          const m = viewMonth - 1;\n          if (m < 0) {\n            setViewYear(v => v - 1);\n            setViewMonth(11);\n          } else setViewMonth(m);\n        },\n        children: '◀'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: viewMonth,\n          onChange: e => setViewMonth(Number(e.target.value)),\n          children: monthNames.map((mn, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: mn\n          }, mn, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: viewYear,\n          onChange: e => setViewYear(Number(e.target.value)),\n          children: Array.from({\n            length: 8\n          }).map((_, i) => viewYear - 4 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: y,\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 81\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small\",\n        onClick: () => {\n          const m = viewMonth + 1;\n          if (m > 11) {\n            setViewYear(v => v + 1);\n            setViewMonth(0);\n          } else setViewMonth(m);\n        },\n        children: '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7,1fr)',\n        gap: 4,\n        marginTop: 8,\n        fontSize: 12,\n        fontWeight: 700,\n        textAlign: 'center'\n      },\n      children: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 62\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: weeks.map((week, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7,1fr)',\n          gap: 4,\n          marginBottom: 4\n        },\n        children: week.map(d => {\n          const inMonth = d.getMonth() === viewMonth;\n          const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => inMonth && selectDate(d),\n            style: {\n              padding: 8,\n              borderRadius: 6,\n              border: 'none',\n              background: isSelected ? 'var(--primary)' : inMonth ? '#f8fafc' : 'transparent',\n              color: isSelected ? '#fff' : inMonth ? '#0b3b52' : '#94a3b8'\n            },\n            children: d.getDate()\n          }, d.toISOString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"+WjzgPy1E1H6pbTexAGZoB0CTbk=\");\n_c = Calendar;\nexport default function App() {\n  _s2();\n  const [route, setRoute] = useState('home');\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]);\n  const [sampleCount, setSampleCount] = useState(5);\n  const [interpLoading, setInterpLoading] = useState(false);\n  const [startInput, setStartInput] = useState('');\n  const [endInput, setEndInput] = useState('');\n  const [selectMode, setSelectMode] = useState(null);\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [startRiver, setStartRiver] = useState(null);\n  const [endRiver, setEndRiver] = useState(null);\n  const [startStationName, setStartStationName] = useState(null);\n  const [endStationName, setEndStationName] = useState(null);\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\n  const [mapInst, setMapInst] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  });\n\n  // fetch predictions for month/year whenever date changes\n  useEffect(() => {\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number);\n    let mounted = true;\n    (async () => {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\n        const body = await res.json();\n        const byId = {};\n        for (const item of body.predictions || []) {\n          // try match by id or location name\n          const loc = puneLocations.find(l => l.id === item.id || l.name === item.location || l.name === item.location_name);\n          if (loc) byId[loc.id] = item.values || item;\n        }\n        if (mounted) setPredictions(byId);\n      } catch (err) {\n        // ignore\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, [selectedDate]);\n  const handleMapClick = useCallback(pt => {\n    if (selectMode === 'start') setStartPoint(pt);else if (selectMode === 'end') setEndPoint(pt);\n  }, [selectMode]);\n  const handleMarkerClick = loc => {\n    // In interpolate route, if user is picking start or end, set them from known station\n    if (route === 'interpolate' && selectMode === 'start') {\n      const coord = loc.coordinate || loc;\n      setStartPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setStartRiver(loc.river || null);\n      setStartStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    if (route === 'interpolate' && selectMode === 'end') {\n      // guard: do not allow picking end on a different river than start\n      if (startRiver && loc.river && startRiver !== loc.river) {\n        alert('Please pick an end station on the same river as the start station.');\n        setSelectMode(null);\n        return;\n      }\n      const coord = loc.coordinate || loc;\n      setEndPoint({\n        latitude: coord.latitude,\n        longitude: coord.longitude\n      });\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\n      setEndRiver(loc.river || null);\n      setEndStationName(loc.name || null);\n      setSelectMode(null);\n      setInterpPoints([]);\n      return;\n    }\n    // default behaviour: open details\n    setSelected(loc);\n    // attach available prediction\n    const pred = predictions[loc.id] || null;\n    setSelected(prev => ({\n      ...loc,\n      prediction: pred\n    }));\n  };\n  const performInterpolation = async () => {\n    if (!startPoint || !endPoint) return alert('Pick start and end');\n    setInterpLoading(true);\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\n    const nearestIndex = pt => {\n      let best = 0,\n        bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPoint),\n      ei = nearestIndex(endPoint);\n    const a = Math.min(si, ei),\n      b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true,\n      blend: 'river'\n    };\n    // include explicit station-name override only when user forces index medians\n    if (forceIndexMedians && startStationName && endStationName) {\n      body.start_station_name = startStationName;\n      body.end_station_name = endStationName;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) return alert('Server: ' + jb.error);\n      const pts = jb.predictions || [];\n      setInterpPoints(pts);\n      // fit map to interpolated points if we have a map instance\n      try {\n        if (mapInst && pts && pts.length > 0) {\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\n          mapInst.fitBounds(latlngs, {\n            padding: [40, 40]\n          });\n        }\n      } catch (e) {}\n    } catch (err) {\n      alert('Request failed');\n    } finally {\n      setInterpLoading(false);\n    }\n  };\n  function haversineKm(a, b) {\n    if (!a || !b) return 0;\n    const toRad = v => v * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(b.latitude - a.latitude);\n    const dLon = toRad(b.longitude - a.longitude);\n    const lat1 = toRad(a.latitude);\n    const lat2 = toRad(b.latitude);\n    const sinDlat = Math.sin(dLat / 2),\n      sinDlon = Math.sin(dLon / 2);\n    const aa = sinDlat * sinDlat + sinDlon * sinDlon * Math.cos(lat1) * Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1 - aa));\n    return R * c;\n  }\n  const copyCoord = pt => {\n    if (!pt) return;\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\n    try {\n      navigator.clipboard && navigator.clipboard.writeText(s);\n    } catch (e) {}\n  };\n  const clearStart = () => {\n    setStartPoint(null);\n    setInterpPoints([]);\n  };\n  const clearEnd = () => {\n    setEndPoint(null);\n    setInterpPoints([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      style: {\n        display: 'flex',\n        gap: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-hero\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo\",\n                children: /*#__PURE__*/_jsxDEV(FaWater, {\n                  size: 28,\n                  color: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"RiverWatch \\u2014 Pune Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"muted\",\n                  children: \"Water quality predictions for Pune rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col rivers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Rivers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula\",\n                    children: \"Mula\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mutha\",\n                    children: \"Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"river-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"river-name river-mula-mutha\",\n                    children: \"Mula-Mutha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"river-desc\",\n                    children: [(riverDescriptions['Mula-Mutha'] || '').split('. ')[0], \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"About\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col params\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Parameters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"param-names\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"pH\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"DO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"BOD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"FC/TC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: \"Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 50\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-cta\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setRoute('predict'),\n                children: \"Go to Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"secondary\",\n                onClick: () => setRoute('interpolate'),\n                children: \"Go to Interpolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          style: {\n            height: 'calc(100vh - 36px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [puneCenter.latitude, puneCenter.longitude],\n            zoom: puneCenter.zoom,\n            className: \"map\",\n            whenCreated: m => setMapInst(m),\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n              onMapClick: handleMapClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), puneLocations.map(loc => {\n              const pred = predictions[loc.id] || null;\n              const entries = pred ? canonicalizePredictionEntries(pred) : [];\n              const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n              const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\n              const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\n              return /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [loc.coordinate.latitude, loc.coordinate.longitude],\n                pathOptions: {\n                  color: getRiverColor(loc.river),\n                  fillColor: getRiverColor(loc.river),\n                  fillOpacity: 0.9\n                },\n                radius: 8,\n                eventHandlers: {\n                  click: () => handleMarkerClick(loc)\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-card\",\n                    style: {\n                      minWidth: 260\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-title\",\n                          children: cleanQualityString(loc.name)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"popup-sub muted\",\n                          style: {\n                            display: 'flex',\n                            gap: 8,\n                            alignItems: 'center',\n                            marginTop: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                            children: cleanQualityString(loc.river)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 316,\n                            columnNumber: 33\n                          }, this), overallValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${overallStatus ? overallStatus.cls : 'status-na'}`,\n                            children: overallValue\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 317,\n                            columnNumber: 49\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 315,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 27\n                    }, this), pred ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-grid\",\n                      children: entries.filter(([k]) => {\n                        const key = String(k).toLowerCase();\n                        return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n                      }).map(([k, v]) => {\n                        const value = formatValue(k, v);\n                        const s = getParameterStatus(k, v);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"param-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-name\",\n                            children: k\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 334,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"param-value\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"val-text\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 336,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: `badge ${s.cls}`,\n                              style: {\n                                marginLeft: 8\n                              },\n                              children: s.label\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 337,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 335,\n                            columnNumber: 39\n                          }, this)]\n                        }, k, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this);\n            }), route === 'interpolate' && startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [startPoint.latitude, startPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 58\n            }, this) : null, route === 'interpolate' && endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n              position: [endPoint.latitude, endPoint.longitude],\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 56\n            }, this) : null, route === 'interpolate' && interpPoints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Polyline, {\n                positions: interpPoints.map(p => [p.latitude, p.longitude]),\n                pathOptions: {\n                  color: '#0077b6',\n                  weight: 3,\n                  opacity: 0.7\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), interpPoints.map((pt, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n                center: [pt.latitude, pt.longitude],\n                radius: 6,\n                pathOptions: {\n                  color: '#0077b6',\n                  fillColor: '#00b4d8',\n                  fillOpacity: 0.9\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minWidth: 220\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Interpolated\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 359,\n                          columnNumber: 38\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`,\n                        children: cleanQualityString(pt['Water Quality'])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 31\n                    }, this), (() => {\n                      const rawPH = pt['pH'];\n                      const pHVal = rawPH === null || rawPH === undefined ? '—' : Number(rawPH).toFixed(3);\n                      const pHStatus = getParameterStatus('pH', pt['pH']);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          marginTop: 8,\n                          borderTop: '1px solid #edf2f7',\n                          paddingTop: 8\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: 13,\n                            color: '#334155',\n                            fontWeight: 700\n                          },\n                          children: \"pH\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 370,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 8\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: 18,\n                              fontWeight: 800,\n                              color: '#0b3b52'\n                            },\n                            children: pHVal\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 372,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `badge ${pHStatus.cls}`,\n                            children: pHStatus.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 373,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 371,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 35\n                      }, this);\n                    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8\n                      },\n                      children: (() => {\n                        const entries = canonicalizePredictionEntries(pt);\n                        const find = substr => entries.find(([k]) => k && k.toLowerCase().includes(substr));\n                        const showOrder = [['pH', 'pH'], ['do', 'DO (mg/L)'], ['bod', 'BOD (mg/L)']];\n                        return showOrder.map(([substr, displayKey]) => {\n                          const ent = find(substr);\n                          if (!ent) return null;\n                          const [k, v] = ent;\n                          const s = getParameterStatus(k, v);\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                              alignItems: 'center',\n                              marginTop: 6\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                color: '#334155'\n                              },\n                              children: displayKey\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 392,\n                              columnNumber: 51\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: 8\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  fontWeight: 700\n                                },\n                                children: formatValue(k, v)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 394,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: `badge ${s.cls}`,\n                                children: s.label\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 395,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 393,\n                              columnNumber: 51\n                            }, this)]\n                          }, k, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 391,\n                            columnNumber: 49\n                          }, this);\n                        });\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 41\n                    }, this), pt && pt.t_frac !== undefined && pt.t_frac !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: 8,\n                        fontSize: 12,\n                        color: '#64748b'\n                      },\n                      children: [\"Blend t: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: Number(pt.t_frac).toFixed(3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 105\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 41\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 27\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), route !== 'home' && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"detail-panel\",\n        style: {\n          width: 360\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 8,\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('home'),\n            className: \"small\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRoute('interpolate'),\n            className: \"small primary\",\n            children: \"Interpolate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), route === 'interpolate' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls-row\",\n              style: {\n                marginBottom: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n                className: selectMode === 'start' ? 'active small primary' : '',\n                children: \"Pick Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n                className: selectMode === 'end' ? 'active small primary' : '',\n                children: \"Pick End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectMode(null);\n                  setInterpPoints([]);\n                  setStartPoint(null);\n                  setEndPoint(null);\n                  setStartInput('');\n                  setEndInput('');\n                  setStartRiver(null);\n                  setEndRiver(null);\n                  setStartStationName(null);\n                  setEndStationName(null);\n                },\n                className: \"small\",\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 8,\n                color: '#0b3b52',\n                fontSize: 13\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pick stations only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 75\n              }, this), \" \\u2014 interpolation will use river-linear blending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 12,\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 0,\n                  fontSize: 13,\n                  color: '#475569'\n                },\n                children: \"Points k:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-box\",\n                type: \"number\",\n                min: 1,\n                max: 50,\n                value: sampleCount,\n                onChange: e => setSampleCount(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.min(50, (sampleCount || 1) + 1));\n                  },\n                  children: \"+1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    setSampleCount(Math.max(1, (sampleCount || 1) - 1));\n                  },\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: \"-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: startInput || (startPoint ? `${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setStartInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(startPoint);\n                  },\n                  disabled: !startPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setStartInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setStartPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 435\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearStart();\n                    setStartInput('');\n                    setStartRiver(null);\n                    setStartStationName(null);\n                  },\n                  disabled: !startPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 194\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coord-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coord-label\",\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"coord-input\",\n                  readOnly: route === 'interpolate',\n                  value: endInput || (endPoint ? `${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}` : ''),\n                  onChange: e => setEndInput(e.target.value),\n                  onBlur: e => {\n                    if (route === 'interpolate') return; // disable manual entry while in interpolate mode\n                    const v = e.target.value.trim();\n                    if (!v) return;\n                    const parts = v.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                    if (parts.length >= 2) {\n                      const lat = Number(parts[0]);\n                      const lon = Number(parts[1]);\n                      if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                        latitude: lat,\n                        longitude: lon\n                      });\n                    }\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      e.target.blur();\n                    }\n                  },\n                  placeholder: \"lat, lon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coord-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    copyCoord(endPoint);\n                  },\n                  disabled: !endPoint,\n                  children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  disabled: route === 'interpolate',\n                  onClick: async () => {\n                    try {\n                      const t = await navigator.clipboard.readText();\n                      setEndInput(t);\n                      const parts = t.split(/[ ,]+/).map(x => x.trim()).filter(Boolean);\n                      if (parts.length >= 2) {\n                        const lat = Number(parts[0]),\n                          lon = Number(parts[1]);\n                        if (!isNaN(lat) && !isNaN(lon)) setEndPoint({\n                          latitude: lat,\n                          longitude: lon\n                        });\n                      }\n                    } catch (e) {}\n                  },\n                  title: \"Paste from clipboard\",\n                  children: /*#__PURE__*/_jsxDEV(FaPaste, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 431\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small\",\n                  onClick: () => {\n                    clearEnd();\n                    setEndInput('');\n                    setEndRiver(null);\n                    setEndStationName(null);\n                  },\n                  disabled: !endPoint,\n                  style: {\n                    marginLeft: 6\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 184\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Distance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#233249'\n                  },\n                  children: startPoint && endPoint ? `${haversineKm(startPoint, endPoint).toFixed(2)} km` : '—'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 8,\n                  marginLeft: 12\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12,\n                    color: '#475569'\n                  },\n                  children: forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-primary\",\n                  onClick: performInterpolation,\n                  disabled: !startPoint || !endPoint || interpLoading,\n                  children: interpLoading ? 'Interpolating…' : 'Interpolate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-date\",\n            children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(selectedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cleanQualityString(selected.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`,\n                  children: cleanQualityString(selected.river)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 24\n                }, this), \" \\u2022 \", selected.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), selected.prediction ? (() => {\n                const entries = canonicalizePredictionEntries(selected.prediction);\n                const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\n                if (overall) {\n                  const s = getParameterStatus('Water Quality', overall[1]);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `badge ${s ? s.cls : 'status-na'}`,\n                    children: cleanQualityString(String(overall[1]))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 30\n                  }, this);\n                }\n                return null;\n              })() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 8\n              },\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: canonicalizePredictionEntries(selected.prediction).filter(([k]) => {\n                const key = String(k).toLowerCase();\n                return !['location', 'location_name', 'river', 'month', 'year', 'id', 'water quality'].includes(key);\n              }).map(([k, v]) => {\n                const value = formatValue(k, v);\n                const s = getParameterStatus(k, v);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: k\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"value\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"val-text\",\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `badge ${s.cls}`,\n                      children: s.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 91\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 29\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            style: {\n              marginTop: 12\n            },\n            children: \"Select a location on the map to see details here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"xLsSFJP0chZaPXdjoa6arBM30NE=\");\n_c2 = App;\nfunction formatValue(key, value) {\n  if (value === null || value === undefined) return '—';\n  const n = Number(value);\n  if (!Number.isNaN(n)) {\n    if (/pH/i.test(key)) return n.toFixed(3);\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\n    return String(n);\n  }\n  return String(value);\n}\nfunction cleanQualityString(quality) {\n  if (quality === null || quality === undefined) return quality;\n  let s = String(quality).trim();\n  if (!s) return s;\n  // normalize whitespace\n  s = s.replace(/\\s+/g, ' ');\n  // remove duplicated trailing punctuation and normalize\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\n  if (m && m[1]) return m[1].trim();\n  // fallback: if full-string repeated twice (older regex)\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\n  return m2 ? m2[1].trim() : s;\n}\nfunction canonicalizePredictionEntries(pred) {\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\n  if (!pred || typeof pred !== 'object') return [];\n  const map = new Map();\n  for (const [k, v] of Object.entries(pred)) {\n    const key = String(k).trim();\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\n    // map some common aliases\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\n    map.set(canonical, {\n      key: key,\n      value: v\n    });\n  }\n  // return in insertion order but using original key casing for display\n  return Array.from(map.values()).map(x => [x.key, x.value]);\n}\n\n// small helper component to forward map click events into lat/lon objects\nfunction MapClickHandler({\n  onMapClick\n}) {\n  _s3();\n  useMapEvents({\n    click: e => {\n      onMapClick && onMapClick({\n        latitude: e.latlng.lat,\n        longitude: e.latlng.lng\n      });\n    }\n  });\n  return null;\n}\n\n// basic parameter status mapping used by badges in the UI\n_s3(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nfunction getParameterStatus(param, value) {\n  if (value === null || value === undefined) return {\n    cls: 'status-na',\n    label: 'N/A'\n  };\n  const key = String(param || '').toLowerCase();\n  const v = Number(value);\n  if (key.includes('water quality')) {\n    const s = String(value || '').toLowerCase();\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (s.includes('moderate') || s.includes('borderline')) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: String(value),\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('pH')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 6.5 && v <= 8.5) return {\n      label: 'OK',\n      cls: 'status-good'\n    };\n    if (v >= 6 && v < 6.5 || v > 8.5 && v <= 9) return {\n      label: 'Borderline',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('do')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v >= 5) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v >= 3) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  if (key.includes('bod')) {\n    if (isNaN(v)) return {\n      label: String(value),\n      cls: 'status-na'\n    };\n    if (v <= 3) return {\n      label: 'Good',\n      cls: 'status-good'\n    };\n    if (v <= 6) return {\n      label: 'Moderate',\n      cls: 'status-moderate'\n    };\n    return {\n      label: 'Poor',\n      cls: 'status-poor'\n    };\n  }\n  return {\n    label: String(value),\n    cls: 'status-na'\n  };\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"MapClickHandler\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","MapContainer","TileLayer","Marker","Popup","CircleMarker","Polyline","useMapEvents","L","FaWater","FaCopy","FaTrash","FaPaste","puneLocations","puneCenter","getRiverColor","preSampledRiver","riverDescriptions","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Calendar","date","onChange","_s","base","Date","viewMonth","setViewMonth","getMonth","viewYear","setViewYear","getFullYear","d","startOfMonth","y","m","daysInMonth","getDate","weeks","firstDay","getDay","leading","total","rows","Math","ceil","day","r","week","c","cellDate","push","monthNames","Array","from","length","_","i","toLocaleString","undefined","month","selectDate","iso","String","padStart","selected","className","style","padding","children","display","justifyContent","alignItems","onClick","v","fileName","_jsxFileName","lineNumber","columnNumber","gap","value","e","Number","target","map","mn","idx","gridTemplateColumns","marginTop","fontSize","fontWeight","textAlign","marginBottom","inMonth","isSelected","borderRadius","border","background","color","toISOString","_c","App","_s2","route","setRoute","predictions","setPredictions","setSelected","interpPoints","setInterpPoints","sampleCount","setSampleCount","interpLoading","setInterpLoading","startInput","setStartInput","endInput","setEndInput","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","startRiver","setStartRiver","endRiver","setEndRiver","startStationName","setStartStationName","endStationName","setEndStationName","forceIndexMedians","setForceIndexMedians","mapInst","setMapInst","selectedDate","setSelectedDate","slice","split","mounted","res","fetch","body","json","byId","item","loc","find","l","id","name","location","location_name","values","err","handleMapClick","pt","handleMarkerClick","coord","coordinate","latitude","longitude","toFixed","river","alert","pred","prev","prediction","performInterpolation","nearestIndex","best","bestD","Infinity","dlat","dlng","d2","si","ei","a","min","b","max","sub","locations","points","year","pick_from_input","blend","start_station_name","end_station_name","method","headers","JSON","stringify","jb","error","pts","latlngs","p","fitBounds","haversineKm","toRad","PI","R","dLat","dLon","lat1","lat2","sinDlat","sin","sinDlon","aa","cos","atan2","sqrt","copyCoord","s","navigator","clipboard","writeText","clearStart","clearEnd","flex","size","height","center","zoom","whenCreated","url","MapClickHandler","onMapClick","entries","canonicalizePredictionEntries","overallEntry","k","toLowerCase","overallValue","cleanQualityString","overallStatus","getParameterStatus","pathOptions","fillColor","fillOpacity","radius","eventHandlers","click","minWidth","replace","cls","filter","key","includes","formatValue","marginLeft","label","position","positions","weight","opacity","rawPH","pHVal","pHStatus","borderTop","paddingTop","substr","showOrder","displayKey","ent","t_frac","width","margin","type","readOnly","onBlur","trim","parts","x","Boolean","lat","lon","isNaN","onKeyDown","blur","placeholder","disabled","t","readText","title","toLocaleDateString","description","overall","_c2","n","test","quality","match","m2","Map","Object","norm","canonical","set","_s3","latlng","lng","_c3","param","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater, FaCopy, FaTrash, FaPaste } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, preSampledRiver, riverDescriptions } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\n// ensure leaflet marker icons load correctly when not using bundled images\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction Calendar({ date, onChange }) {\r\n  const base = date ? new Date(date) : new Date();\r\n  const [viewMonth, setViewMonth] = React.useState(base.getMonth());\r\n  const [viewYear, setViewYear] = React.useState(base.getFullYear());\r\n\r\n  React.useEffect(() => {\r\n    const d = date ? new Date(date) : new Date();\r\n    setViewMonth(d.getMonth());\r\n    setViewYear(d.getFullYear());\r\n  }, [date]);\r\n\r\n  const startOfMonth = (y, m) => new Date(y, m, 1);\r\n  const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\r\n\r\n  const weeks = [];\r\n  const firstDay = startOfMonth(viewYear, viewMonth).getDay(); // 0=Sun\r\n  const leading = (firstDay + 6) % 7; // shift to Monday first (0=Mon)\r\n  const total = leading + daysInMonth(viewYear, viewMonth);\r\n  const rows = Math.ceil(total / 7);\r\n\r\n  let day = 1 - leading;\r\n  for (let r = 0; r < rows; r++) {\r\n    const week = [];\r\n    for (let c = 0; c < 7; c++, day++) {\r\n      const cellDate = new Date(viewYear, viewMonth, day);\r\n      week.push(cellDate);\r\n    }\r\n    weeks.push(week);\r\n  }\r\n\r\n  const monthNames = Array.from({ length: 12 }, (_, i) => new Date(2000, i).toLocaleString(undefined, { month: 'long' }));\r\n\r\n  const selectDate = (d) => {\r\n    const iso = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\r\n    onChange && onChange(iso);\r\n  };\r\n\r\n  const selected = date ? new Date(date) : null;\r\n\r\n  return (\r\n    <div className=\"inline-calendar\" style={{ padding: 8 }}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <button className=\"small\" onClick={() => { const m = viewMonth - 1; if (m < 0) { setViewYear(v => v - 1); setViewMonth(11); } else setViewMonth(m); }}>{'◀'}</button>\r\n        <div style={{ display: 'flex', gap: 8 }}>\r\n          <select value={viewMonth} onChange={e => setViewMonth(Number(e.target.value))}>\r\n            {monthNames.map((mn, idx) => <option key={mn} value={idx}>{mn}</option>)}\r\n          </select>\r\n          <select value={viewYear} onChange={e => setViewYear(Number(e.target.value))}>\r\n            {Array.from({ length: 8 }).map((_, i) => viewYear - 4 + i).map(y => <option key={y} value={y}>{y}</option>)}\r\n          </select>\r\n        </div>\r\n        <button className=\"small\" onClick={() => { const m = viewMonth + 1; if (m > 11) { setViewYear(v => v + 1); setViewMonth(0); } else setViewMonth(m); }}>{'▶'}</button>\r\n      </div>\r\n\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7,1fr)', gap: 4, marginTop: 8, fontSize: 12, fontWeight: 700, textAlign: 'center' }}>\r\n        {['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'].map(d => <div key={d}>{d}</div>)}\r\n      </div>\r\n\r\n      <div style={{ marginTop: 8 }}>\r\n        {weeks.map((week, i) => (\r\n          <div key={i} style={{ display: 'grid', gridTemplateColumns: 'repeat(7,1fr)', gap: 4, marginBottom: 4 }}>\r\n            {week.map(d => {\r\n              const inMonth = d.getMonth() === viewMonth;\r\n              const isSelected = selected && d.getFullYear() === selected.getFullYear() && d.getMonth() === selected.getMonth() && d.getDate() === selected.getDate();\r\n              return (\r\n                <button key={d.toISOString()} onClick={() => inMonth && selectDate(d)} style={{ padding: 8, borderRadius: 6, border: 'none', background: isSelected ? 'var(--primary)' : (inMonth ? '#f8fafc' : 'transparent'), color: isSelected ? '#fff' : (inMonth ? '#0b3b52' : '#94a3b8') }}>{d.getDate()}</button>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [route, setRoute] = useState('home');\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]);\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [interpLoading, setInterpLoading] = useState(false);\r\n  const [startInput, setStartInput] = useState('');\r\n  const [endInput, setEndInput] = useState('');\r\n  const [selectMode, setSelectMode] = useState(null);\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [startRiver, setStartRiver] = useState(null);\r\n  const [endRiver, setEndRiver] = useState(null);\r\n  const [startStationName, setStartStationName] = useState(null);\r\n  const [endStationName, setEndStationName] = useState(null);\r\n  const [forceIndexMedians, setForceIndexMedians] = useState(false);\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`;\r\n  });\r\n\r\n  // fetch predictions for month/year whenever date changes\r\n  useEffect(() => {\r\n    const [y, m] = selectedDate.slice(0,7).split('-').map(Number);\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\r\n        const body = await res.json();\r\n        const byId = {};\r\n        for (const item of (body.predictions || [])) {\r\n          // try match by id or location name\r\n          const loc = puneLocations.find(l => l.id === item.id || l.name === item.location || l.name === item.location_name);\r\n          if (loc) byId[loc.id] = item.values || item;\r\n        }\r\n        if (mounted) setPredictions(byId);\r\n      } catch (err) {\r\n        // ignore\r\n      }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, [selectedDate]);\r\n\r\n  const handleMapClick = useCallback((pt) => {\r\n    if (selectMode === 'start') setStartPoint(pt);\r\n    else if (selectMode === 'end') setEndPoint(pt);\r\n  }, [selectMode]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    // In interpolate route, if user is picking start or end, set them from known station\r\n    if (route === 'interpolate' && selectMode === 'start') {\r\n      const coord = loc.coordinate || loc;\r\n      setStartPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setStartInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setStartRiver(loc.river || null);\r\n  setStartStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    if (route === 'interpolate' && selectMode === 'end') {\r\n      // guard: do not allow picking end on a different river than start\r\n      if (startRiver && loc.river && startRiver !== loc.river) {\r\n        alert('Please pick an end station on the same river as the start station.');\r\n        setSelectMode(null);\r\n        return;\r\n      }\r\n      const coord = loc.coordinate || loc;\r\n      setEndPoint({ latitude: coord.latitude, longitude: coord.longitude });\r\n      setEndInput(`${coord.latitude.toFixed(6)}, ${coord.longitude.toFixed(6)}`);\r\n      setEndRiver(loc.river || null);\r\n  setEndStationName(loc.name || null);\r\n      setSelectMode(null);\r\n      setInterpPoints([]);\r\n      return;\r\n    }\r\n    // default behaviour: open details\r\n    setSelected(loc);\r\n    // attach available prediction\r\n    const pred = predictions[loc.id] || null;\r\n    setSelected(prev => ({...loc, prediction: pred}));\r\n  };\r\n\r\n  const performInterpolation = async () => {\r\n  if (!startPoint || !endPoint) return alert('Pick start and end');\r\n  setInterpLoading(true);\r\n    // use the provided sampled river segment (lat/lon array) and ask server to pick/sample across it\r\n    // find nearest indices in preSampledRiver for the selected start/end and slice that array\r\n    const nearestIndex = (pt) => {\r\n      let best = 0, bestD = Infinity;\r\n      for (let i=0;i<preSampledRiver.length;i++){\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat*dlat + dlng*dlng;\r\n        if (d2 < bestD){ bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPoint), ei = nearestIndex(endPoint);\r\n    const a = Math.min(si, ei), b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b+1);\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true, blend: 'river' };\r\n    // include explicit station-name override only when user forces index medians\r\n    if (forceIndexMedians && startStationName && endStationName) {\r\n      body.start_station_name = startStationName;\r\n      body.end_station_name = endStationName;\r\n    }\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) return alert('Server: '+jb.error);\r\n      const pts = jb.predictions || [];\r\n      setInterpPoints(pts);\r\n      // fit map to interpolated points if we have a map instance\r\n      try{\r\n        if (mapInst && pts && pts.length > 0){\r\n          const latlngs = pts.map(p => [p.latitude, p.longitude]);\r\n          mapInst.fitBounds(latlngs, { padding: [40,40] });\r\n        }\r\n      }catch(e){}\r\n    } catch (err) { alert('Request failed'); }\r\n    finally { setInterpLoading(false); }\r\n  };\r\n\r\n  function haversineKm(a, b) {\r\n    if (!a || !b) return 0;\r\n    const toRad = v => v * Math.PI / 180;\r\n    const R = 6371;\r\n    const dLat = toRad(b.latitude - a.latitude);\r\n    const dLon = toRad(b.longitude - a.longitude);\r\n    const lat1 = toRad(a.latitude);\r\n    const lat2 = toRad(b.latitude);\r\n    const sinDlat = Math.sin(dLat/2), sinDlon = Math.sin(dLon/2);\r\n    const aa = sinDlat*sinDlat + sinDlon*sinDlon * Math.cos(lat1)*Math.cos(lat2);\r\n    const c = 2 * Math.atan2(Math.sqrt(aa), Math.sqrt(1-aa));\r\n    return R * c;\r\n  }\r\n\r\n  const copyCoord = (pt) => {\r\n    if (!pt) return;\r\n    const s = `${pt.latitude.toFixed(6)}, ${pt.longitude.toFixed(6)}`;\r\n    try { navigator.clipboard && navigator.clipboard.writeText(s); } catch(e) {}\r\n  };\r\n\r\n  const clearStart = () => { setStartPoint(null); setInterpPoints([]); };\r\n  const clearEnd = () => { setEndPoint(null); setInterpPoints([]); };\r\n\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <main className=\"main\" style={{display:'flex', gap:20}}>\r\n        <div style={{flex:1}}>\r\n          {route === 'home' ? (\r\n            <div className=\"home-page\">\r\n              <div className=\"home-card\">\r\n                <div className=\"home-hero\">\r\n                  <div className=\"logo\"><FaWater size={28} color=\"#fff\" /></div>\r\n                  <div>\r\n                    <h1>RiverWatch — Pune Rivers</h1>\r\n                    <p className=\"muted\">Water quality predictions for Pune rivers</p>\r\n                  </div>\r\n                </div>\r\n                <p>Explore predicted water quality across the Mula, Mutha and Mula-Mutha rivers. Use Predict for single-point queries and Interpolate to sample between two points.</p>\r\n                <div className=\"columns\">\r\n                  <div className=\"col rivers\">\r\n                    <h3>Rivers</h3>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula\">Mula</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mutha\">Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                    <div className=\"river-item\">\r\n                      <span className=\"river-name river-mula-mutha\">Mula-Mutha</span>\r\n                      <div className=\"river-desc\">{(riverDescriptions['Mula-Mutha'] || '').split('. ')[0]}.</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col center\">\r\n                    <h3>About</h3>\r\n                    <p>This site reproduces the mobile water-quality model and exposes the same prediction logic on the web. It runs the trained model server-side and offers interpolation that follows river polylines so you can sample predicted values between two points. Use the map to select monitoring sites, compare parameter compliance across locations, and run multi-point interpolation to see spatial patterns for pH, dissolved oxygen, BOD and bacterial indicators across the river network.</p>\r\n                  </div>\r\n                  <div className=\"col params\">\r\n                    <h3>Parameters</h3>\r\n                    <ul className=\"param-names\">\r\n                      <li><strong>pH</strong> <div className=\"desc\">Measures water acidity and alkalinity on a scale of 0-14, with 7 being neutral. Deviations indicate pollution from industrial discharge or organic decomposition affecting aquatic life.</div></li>\r\n                      <li><strong>DO</strong> <div className=\"desc\">Dissolved oxygen levels in milligrams per liter, essential for fish and aquatic organisms. Low DO levels signal organic pollution and eutrophication from sewage or agricultural runoff.</div></li>\r\n                      <li><strong>BOD</strong> <div className=\"desc\">Biological oxygen demand measures oxygen consumed by microorganisms breaking down organic matter. High BOD indicates sewage contamination and reduces available oxygen for aquatic life.</div></li>\r\n                      <li><strong>FC/TC</strong> <div className=\"desc\">Fecal and total coliform bacteria counts per 100ml, indicating sewage contamination and potential health risks. High levels suggest inadequate wastewater treatment and pose serious public health concerns.</div></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"home-cta\">\r\n                  <button onClick={() => setRoute('predict')}>Go to Predict</button>\r\n                  <button className=\"secondary\" onClick={() => setRoute('interpolate')}>Go to Interpolate</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-content\" style={{height: 'calc(100vh - 36px)'}}>\r\n              <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m=>setMapInst(m)} style={{height:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MapClickHandler onMapClick={handleMapClick} />\r\n                {puneLocations.map(loc => {\r\n                  const pred = predictions[loc.id] || null;\r\n                  const entries = pred ? canonicalizePredictionEntries(pred) : [];\r\n                  const overallEntry = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                  const overallValue = overallEntry ? cleanQualityString(String(overallEntry[1])) : null;\r\n                  const overallStatus = overallEntry ? getParameterStatus('Water Quality', overallEntry[1]) : null;\r\n\r\n                  return (\r\n                    <CircleMarker key={loc.id} center={[loc.coordinate.latitude, loc.coordinate.longitude]} pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity:0.9 }} radius={8} eventHandlers={{ click: () => handleMarkerClick(loc) }}>\r\n                      <Popup>\r\n                        <div className=\"popup-card\" style={{minWidth:260}}>\r\n                          <div className=\"popup-header\">\r\n                            <div>\r\n                              <div className=\"popup-title\">{cleanQualityString(loc.name)}</div>\r\n                              <div className=\"popup-sub muted\" style={{display:'flex',gap:8,alignItems:'center',marginTop:8}}>\r\n                                <span className={`river-tag ${cleanQualityString(loc.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(loc.river)}</span>\r\n                                {overallValue ? <div className={`badge ${overallStatus ? overallStatus.cls : 'status-na'}`}>{overallValue}</div> : null}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {pred ? (\r\n                            <div className=\"popup-grid\">\r\n                              {entries\r\n                                .filter(([k]) => {\r\n                                  const key = String(k).toLowerCase();\r\n                                  return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                                })\r\n                                .map(([k,v]) => {\r\n                                  const value = formatValue(k, v);\r\n                                  const s = getParameterStatus(k, v);\r\n                                  return (\r\n                                    <div className=\"param-row\" key={k}>\r\n                                      <div className=\"param-name\">{k}</div>\r\n                                      <div className=\"param-value\">\r\n                                        <span className=\"val-text\">{value}</span>\r\n                                        <span className={`badge ${s.cls}`} style={{marginLeft:8}}>{s.label}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          ) : <div style={{marginTop:8}}>Loading...</div>}\r\n                        </div>\r\n                      </Popup>\r\n                    </CircleMarker>\r\n                  );\r\n                })}\r\n                {route === 'interpolate' && startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n                {route === 'interpolate' && endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n                {route === 'interpolate' && interpPoints.length > 0 && (\r\n                  <>\r\n                    <Polyline positions={interpPoints.map(p => [p.latitude, p.longitude])} pathOptions={{color:'#0077b6', weight:3, opacity:0.7}} />\r\n                    {interpPoints.map((pt, i) => (\r\n                      <CircleMarker key={i} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{color:'#0077b6', fillColor:'#00b4d8', fillOpacity:0.9}}>\r\n                          <Popup>\r\n                            <div style={{minWidth:220}}>\r\n                              <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n                                <div><strong>Interpolated</strong></div>\r\n                                <div className={`badge ${getParameterStatus('Water Quality', pt['Water Quality']).cls}`}>{cleanQualityString(pt['Water Quality'])}</div>\r\n                              </div>\r\n\r\n                              {/* prominent pH row */}\r\n                              {(() => {\r\n                                const rawPH = pt['pH'];\r\n                                const pHVal = (rawPH === null || rawPH === undefined) ? '—' : (Number(rawPH).toFixed(3));\r\n                                const pHStatus = getParameterStatus('pH', pt['pH']);\r\n                                return (\r\n                                  <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:8,borderTop:'1px solid #edf2f7',paddingTop:8}}>\r\n                                    <div style={{fontSize:13,color:'#334155',fontWeight:700}}>pH</div>\r\n                                    <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                      <div style={{fontSize:18,fontWeight:800,color:'#0b3b52'}}>{pHVal}</div>\r\n                                      <div className={`badge ${pHStatus.cls}`}>{pHStatus.label}</div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })()}\r\n\r\n                                        {/* show only the three parameters the user requested: pH, DO, BOD */}\r\n                                        <div style={{marginTop:8}}>\r\n                                          {(() => {\r\n                                            const entries = canonicalizePredictionEntries(pt);\r\n                                            const find = (substr) => entries.find(([k]) => k && k.toLowerCase().includes(substr));\r\n                                            const showOrder = [ ['pH','pH'], ['do','DO (mg/L)'], ['bod','BOD (mg/L)'] ];\r\n                                            return showOrder.map(([substr, displayKey]) => {\r\n                                              const ent = find(substr);\r\n                                              if (!ent) return null;\r\n                                              const [k, v] = ent;\r\n                                              const s = getParameterStatus(k, v);\r\n                                              return (\r\n                                                <div key={k} style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:6}}>\r\n                                                  <div style={{color:'#334155'}}>{displayKey}</div>\r\n                                                  <div style={{display:'flex',alignItems:'center',gap:8}}>\r\n                                                    <div style={{fontWeight:700}}>{formatValue(k,v)}</div>\r\n                                                    <div className={`badge ${s.cls}`}>{s.label}</div>\r\n                                                  </div>\r\n                                                </div>\r\n                                              );\r\n                                            });\r\n                                          })()}\r\n                                        </div>\r\n                                      {/* show t_frac if returned by server */}\r\n                                      {pt && (pt.t_frac !== undefined && pt.t_frac !== null) ? (\r\n                                        <div style={{marginTop:8,fontSize:12,color:'#64748b'}}>Blend t: <strong>{Number(pt.t_frac).toFixed(3)}</strong></div>\r\n                                      ) : null}\r\n                                    </div>\r\n                          </Popup>\r\n                        </CircleMarker>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </MapContainer>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* right sidebar: show only on inner pages (not on Home) */}\r\n        {route !== 'home' && (\r\n          <aside className=\"detail-panel\" style={{width:360}}>\r\n          <div style={{display:'flex', justifyContent:'flex-end', gap:8, padding:8}}>\r\n            <button onClick={()=>setRoute('home')} className=\"small\">Home</button>\r\n            <button onClick={()=>setRoute('interpolate')} className=\"small primary\">Interpolate</button>\r\n          </div>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d=>setSelectedDate(d)} />\r\n          </div>\r\n\r\n          {route === 'interpolate' && (\r\n            <div style={{marginTop:12}}>\r\n              <div className=\"control-card\">\r\n                <div className=\"controls-row\" style={{marginBottom:8}}>\r\n                  <button onClick={()=>setSelectMode(selectMode==='start'?null:'start')} className={selectMode==='start'?'active small primary':''}>Pick Start</button>\r\n                  <button onClick={()=>setSelectMode(selectMode==='end'?null:'end')} className={selectMode==='end'?'active small primary':''}>Pick End</button>\r\n                  <button onClick={()=>{ setSelectMode(null); setInterpPoints([]); setStartPoint(null); setEndPoint(null); setStartInput(''); setEndInput(''); setStartRiver(null); setEndRiver(null); setStartStationName(null); setEndStationName(null); }} className=\"small\">Reset</button>\r\n                </div>\r\n                <div style={{marginBottom:8,color:'#0b3b52',fontSize:13}}><strong>Pick stations only</strong> — interpolation will use river-linear blending</div>\r\n\r\n                <div style={{display:'flex',gap:12,alignItems:'center',marginBottom:10}}>\r\n                  <label style={{margin:0,fontSize:13,color:'#475569'}}>Points k:</label>\r\n                  <input className=\"input-box\" type=\"number\" min={1} max={50} value={sampleCount} onChange={e=>setSampleCount(Number(e.target.value))} />\r\n                  <div style={{marginLeft:'auto'}}>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.min(50, (sampleCount||1)+1) ); }}>+1</button>\r\n                    <button className=\"small\" onClick={()=>{ setSampleCount( Math.max(1, (sampleCount||1)-1) ); }} style={{marginLeft:6}}>-1</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">Start</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={startInput || (startPoint?`${startPoint.latitude.toFixed(6)}, ${startPoint.longitude.toFixed(6)}`:'')} onChange={e=>setStartInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(startPoint); }} disabled={!startPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setStartInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setStartPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearStart(); setStartInput(''); setStartRiver(null); setStartStationName(null); }} disabled={!startPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"coord-row\">\r\n                  <div className=\"coord-box\">\r\n                      <div className=\"coord-label\">End</div>\r\n                      <input className=\"coord-input\" readOnly={route==='interpolate'} value={endInput || (endPoint?`${endPoint.latitude.toFixed(6)}, ${endPoint.longitude.toFixed(6)}`:'')} onChange={e=>setEndInput(e.target.value)} onBlur={(e)=>{\r\n                        if (route === 'interpolate') return; // disable manual entry while in interpolate mode\r\n                        const v = e.target.value.trim();\r\n                        if (!v) return;\r\n                        const parts = v.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean);\r\n                        if (parts.length >= 2){ const lat = Number(parts[0]); const lon = Number(parts[1]); if (!isNaN(lat) && !isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); }\r\n                      }} onKeyDown={(e)=>{ if (e.key==='Enter'){ e.target.blur(); } }} placeholder=\"lat, lon\" />\r\n                    </div>\r\n                    <div className=\"coord-actions\">\r\n                      <button className=\"small\" onClick={()=>{ copyCoord(endPoint); }} disabled={!endPoint}><FaCopy/></button>\r\n                      <button className=\"small\" disabled={route==='interpolate'} onClick={async ()=>{ try { const t = await navigator.clipboard.readText(); setEndInput(t); const parts = t.split(/[ ,]+/).map(x=>x.trim()).filter(Boolean); if (parts.length>=2){ const lat=Number(parts[0]), lon=Number(parts[1]); if (!isNaN(lat)&&!isNaN(lon)) setEndPoint({latitude:lat, longitude:lon}); } } catch(e){} }} title=\"Paste from clipboard\"><FaPaste/></button>\r\n                      <button className=\"small\" onClick={()=>{ clearEnd(); setEndInput(''); setEndRiver(null); setEndStationName(null); }} disabled={!endPoint} style={{marginLeft:6}}><FaTrash/></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{marginTop:8,display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n                  <div className=\"muted\">Distance: <strong style={{color:'#233249'}}>{(startPoint && endPoint)?`${haversineKm(startPoint,endPoint).toFixed(2)} km`:'—'}</strong></div>\r\n                  <div style={{display:'flex',alignItems:'center',gap:8,marginLeft:12}}>\r\n                    <div style={{fontSize:12,color:'#475569'}}>{forceIndexMedians ? 'Mode: Index medians (override)' : 'Mode: Distance/projection'}</div>\r\n                    <button className=\"btn-primary\" onClick={performInterpolation} disabled={!startPoint || !endPoint || interpLoading}>{interpLoading ? 'Interpolating…' : 'Interpolate'}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{marginTop:16}}>\r\n            <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n                {selected ? (\r\n              <div style={{marginTop:12}}>\r\n                <h3>{cleanQualityString(selected.name)}</h3>\r\n                <div className=\"muted\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n                  <div><span className={`river-tag ${cleanQualityString(selected.river).replace(/\\s+/g, '-').toLowerCase()}`}>{cleanQualityString(selected.river)}</span> • {selected.description}</div>\r\n                  {selected.prediction ? (() => {\r\n                    const entries = canonicalizePredictionEntries(selected.prediction);\r\n                    const overall = entries.find(([k]) => String(k).toLowerCase() === 'water quality');\r\n                    if (overall) {\r\n                      const s = getParameterStatus('Water Quality', overall[1]);\r\n                      return <div className={`badge ${s ? s.cls : 'status-na'}`}>{cleanQualityString(String(overall[1]))}</div>;\r\n                    }\r\n                    return null;\r\n                  })() : null}\r\n                </div>\r\n                <h4 style={{marginTop:8}}>Prediction</h4>\r\n                {selected.prediction ? (\r\n                  <div>\r\n                    {canonicalizePredictionEntries(selected.prediction)\r\n                      .filter(([k]) => {\r\n                        const key = String(k).toLowerCase();\r\n                        return !['location','location_name','river','month','year','id','water quality'].includes(key);\r\n                      })\r\n                      .map(([k,v])=>{\r\n                        const value = formatValue(k, v);\r\n                        const s = getParameterStatus(k,v);\r\n                        return (\r\n                          <div key={k} className=\"inline-param-row\">\r\n                            <div className=\"label\">{k}</div>\r\n                            <div className=\"value\"><div className=\"val-text\">{value}</div><div className={`badge ${s.cls}`}>{s.label}</div></div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ) : <div>Loading...</div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"placeholder\" style={{marginTop:12}}>Select a location on the map to see details here.</div>\r\n            )}\r\n          </div>\r\n          </aside>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatValue(key, value) {\r\n  if (value === null || value === undefined) return '—';\r\n  const n = Number(value);\r\n  if (!Number.isNaN(n)) {\r\n  if (/pH/i.test(key)) return n.toFixed(3);\r\n    if (/DO|BOD|FC|TC|MPN/i.test(key)) return n.toFixed(2);\r\n    return String(n);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nfunction cleanQualityString(quality) {\r\n  if (quality === null || quality === undefined) return quality;\r\n  let s = String(quality).trim();\r\n  if (!s) return s;\r\n  // normalize whitespace\r\n  s = s.replace(/\\s+/g, ' ');\r\n  // remove duplicated trailing punctuation and normalize\r\n  s = s.replace(/[\\s\\-–_:;,.]+$/g, '').trim();\r\n  // collapse exact repeated phrases like \"X X\" or \"X X X\" -> \"X\"\r\n  const m = s.match(/^(.*?)\\s+(?:\\1\\s+)*\\1$/i);\r\n  if (m && m[1]) return m[1].trim();\r\n  // fallback: if full-string repeated twice (older regex)\r\n  const m2 = s.match(/^(.*)\\s+\\1$/i);\r\n  return m2 ? m2[1].trim() : s;\r\n}\r\n\r\nfunction canonicalizePredictionEntries(pred) {\r\n  // returns array of [key, value] with keys normalized and duplicates collapsed (last value wins)\r\n  if (!pred || typeof pred !== 'object') return [];\r\n  const map = new Map();\r\n  for (const [k, v] of Object.entries(pred)) {\r\n    const key = String(k).trim();\r\n    const norm = key.toLowerCase().replace(/\\s+/g, ' ');\r\n    // map some common aliases\r\n    const canonical = norm === 'water quality' ? 'water quality' : norm;\r\n    map.set(canonical, { key: key, value: v });\r\n  }\r\n  // return in insertion order but using original key casing for display\r\n  return Array.from(map.values()).map(x => [x.key, x.value]);\r\n}\r\n\r\n// small helper component to forward map click events into lat/lon objects\r\nfunction MapClickHandler({ onMapClick }) {\r\n  useMapEvents({ click: (e) => { onMapClick && onMapClick({ latitude: e.latlng.lat, longitude: e.latlng.lng }); } });\r\n  return null;\r\n}\r\n\r\n// basic parameter status mapping used by badges in the UI\r\nfunction getParameterStatus(param, value) {\r\n  if (value === null || value === undefined) return { cls: 'status-na', label: 'N/A' };\r\n  const key = String(param || '').toLowerCase();\r\n  const v = Number(value);\r\n  if (key.includes('water quality')) {\r\n    const s = String(value || '').toLowerCase();\r\n    if (s.includes('good') || s.includes('ok') || s.includes('acceptable')) return { label: 'Good', cls: 'status-good' };\r\n    if (s.includes('moderate') || s.includes('borderline')) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: String(value), cls: 'status-poor' };\r\n  }\r\n  if (key.includes('pH')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 6.5 && v <= 8.5) return { label: 'OK', cls: 'status-good' };\r\n    if ((v >= 6 && v < 6.5) || (v > 8.5 && v <= 9)) return { label: 'Borderline', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('do')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v >= 5) return { label: 'Good', cls: 'status-good' };\r\n    if (v >= 3) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  if (key.includes('bod')) {\r\n    if (isNaN(v)) return { label: String(value), cls: 'status-na' };\r\n    if (v <= 3) return { label: 'Good', cls: 'status-good' };\r\n    if (v <= 6) return { label: 'Moderate', cls: 'status-moderate' };\r\n    return { label: 'Poor', cls: 'status-poor' };\r\n  }\r\n  return { label: String(value), cls: 'status-na' };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}