{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor } from './locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction App() {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]); // points returned from interpolation\n  const [selectMode, setSelectMode] = useState(null); // 'start' | 'end' | null\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [followRiver, setFollowRiver] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`; // local YYYY-MM-DD\n  });\n  useEffect(() => {\n    // fetch predictions for selectedDate (server needs month & year)\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number); // YYYY-MM-DD -> [YYYY, MM]\n    const fetchAll = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\n        const body = await res.json();\n        const newPred = {};\n        for (const item of body.predictions) {\n          // match by location name to puneLocations id\n          const loc = puneLocations.find(p => p.name === item.location);\n          if (loc) newPred[loc.id] = {\n            'pH': item['pH'],\n            'DO (mg/L)': item['DO (mg/L)'],\n            'BOD (mg/L)': item['BOD (mg/L)'],\n            'FC MPN/100ml': item['FC MPN/100ml'],\n            'TC MPN/100ml': item['TC MPN/100ml'],\n            'Water Quality': item['Water Quality']\n          };\n        }\n        // for locations not returned, set null\n        for (const loc of puneLocations) if (!newPred[loc.id]) newPred[loc.id] = null;\n        setPredictions(newPred);\n        // update selected prediction if needed\n        if (selected) {\n          const sel = puneLocations.find(p => p.id === selected.id);\n          setSelected(sel ? {\n            ...sel,\n            prediction: newPred[sel.id]\n          } : null);\n        }\n      } catch (e) {\n        // fallback: clear predictions\n        const empty = {};\n        for (const loc of puneLocations) empty[loc.id] = null;\n        setPredictions(empty);\n      }\n    };\n    fetchAll();\n  }, [selectedDate]);\n  const handleMarkerClick = loc => {\n    setSelected({\n      ...loc,\n      prediction: predictions[loc.id]\n    });\n  };\n  const handleMapClick = e => {\n    if (!selectMode) return;\n    const lat = e.latlng.lat;\n    const lon = e.latlng.lng;\n    if (selectMode === 'start') {\n      setStartPoint({\n        latitude: lat,\n        longitude: lon\n      });\n    } else if (selectMode === 'end') {\n      setEndPoint({\n        latitude: lat,\n        longitude: lon\n      });\n    }\n    setSelectMode(null);\n  };\n  const toLatLngs = path => path.map(p => [p.latitude, p.longitude]);\n\n  // Inline calendar component\n  const Calendar = ({\n    date,\n    onChange\n  }) => {\n    _s2();\n    // helpers to ensure local-date handling (avoid UTC shifts from toISOString)\n    const parseLocal = s => new Date(s + 'T00:00:00');\n    const formatLocal = d => `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    const [viewDate, setViewDate] = useState(() => {\n      const d = parseLocal(date);\n      return new Date(d.getFullYear(), d.getMonth(), 1);\n    });\n    useEffect(() => {\n      const d = parseLocal(date);\n      setViewDate(new Date(d.getFullYear(), d.getMonth(), 1));\n    }, [date]);\n    const startOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth(), 1);\n    const endOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 0);\n    const daysInMonth = endOfMonth.getDate();\n    const startWeekday = (startOfMonth.getDay() + 6) % 7; // make Monday=0\n\n    const prevMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() - 1, 1));\n    const nextMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 1));\n    const rows = [];\n    let cells = [];\n    // fill blanks\n    for (let i = 0; i < startWeekday; i++) cells.push(null);\n    for (let d = 1; d <= daysInMonth; d++) {\n      cells.push(new Date(viewDate.getFullYear(), viewDate.getMonth(), d));\n    }\n    while (cells.length % 7 !== 0) cells.push(null);\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\n    const selectedObj = parseLocal(date);\n    const isSameDay = (a, b) => a && b && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n    const today = new Date();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevMonth,\n          \"aria-label\": \"Previous month\",\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-title\",\n          children: [viewDate.toLocaleString(undefined, {\n            month: 'long'\n          }), \" \", viewDate.getFullYear()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextMonth,\n          \"aria-label\": \"Next month\",\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Mo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Tu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"We\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Th\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Fr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Su\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), rows.map((row, ri) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: row.map((d, ci) => {\n            const cls = d ? isSameDay(d, selectedObj) ? ' selected' : isSameDay(d, today) ? ' today' : '' : ' empty';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `cal-day${cls}`,\n              children: d ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onChange(formatLocal(d)),\n                \"aria-label\": `Select ${d.toDateString()}`,\n                children: d.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                \"aria-hidden\": true,\n                className: \"empty-cell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this)\n            }, `${ri}-${ci}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this);\n          })\n        }, ri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(formatLocal(new Date())),\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Parameter status helper (returns label and CSS class)\n  _s2(Calendar, \"G2KW8h2+pAWNaQndPxg9Et29IDo=\");\n  const getParameterStatus = (param, value) => {\n    if (value === null || value === undefined || value === '') return {\n      label: 'N/A',\n      cls: 'status-na'\n    };\n    const v = Number(value);\n    switch (param) {\n      case 'pH':\n        if (v >= 6.5 && v <= 8.5) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'DO (mg/L)':\n        if (v >= 5.0) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v >= 3.0) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'BOD (mg/L)':\n        if (v <= 3.0) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v <= 6.0) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'FC MPN/100ml':\n      case 'TC MPN/100ml':\n        if (v < 500) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v <= 1000) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'Water Quality':\n        // normalize and check for explicit 'non' first so \"Non Complying\" doesn't match 'comp'\n        const _s = String(value).toLowerCase();\n        if (_s.includes('non')) return {\n          label: 'Non Complying',\n          cls: 'status-poor'\n        };\n        if (_s.includes('comp')) return {\n          label: 'Complying',\n          cls: 'status-good'\n        };\n        return {\n          label: String(value),\n          cls: 'status-na'\n        };\n      default:\n        return {\n          label: '',\n          cls: ''\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(FaWater, {\n          size: 28,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"RiverWatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Water quality predictions for Pune rivers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }, this), \" Mula\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot teal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 16\n          }, this), \" Mutha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 16\n          }, this), \" Mula-Mutha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Rivers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"river-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Originates to the north \\u2014 urban stretches through western Pune with monitoring points along bridges.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot teal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mutha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Flows from Khadakvasla dam through Pune central areas; many monitoring points track water health downstream.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mula-Mutha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Confluence section where Mula and Mutha meet \\u2014 sensitive zone for mixing and quality changes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 12\n          },\n          children: \"Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"param-names\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"DO (mg/L)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"BOD (mg/L)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"FC MPN/100ml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"TC MPN/100ml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Water Quality (Complying / Non Complying)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [puneCenter.latitude, puneCenter.longitude],\n        zoom: puneCenter.zoom,\n        className: \"map\",\n        whenCreated: map => {\n          map.on('click', handleMapClick);\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), puneLocations.map(loc => /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [loc.coordinate.latitude, loc.coordinate.longitude],\n          pathOptions: {\n            color: getRiverColor(loc.river),\n            fillColor: getRiverColor(loc.river),\n            fillOpacity: 0.9\n          },\n          radius: 10,\n          eventHandlers: {\n            click: () => handleMarkerClick(loc)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popup-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"popup-title\",\n                  children: loc.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"muted popup-sub\",\n                  children: loc.river\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), predictions[loc.id] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"param-list popup-grid\",\n                children: Object.entries(predictions[loc.id]).map(([k, v]) => {\n                  const status = getParameterStatus(k, v);\n                  if (k === 'Water Quality') {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"param-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"param-name\",\n                        children: k\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"param-value\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `badge ${status.cls}`,\n                          children: status.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 31\n                      }, this)]\n                    }, k, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 29\n                    }, this);\n                  }\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: k\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"val-text\",\n                        children: v\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 59\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `badge ${status.cls}`,\n                        children: status.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 96\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 29\n                    }, this)]\n                  }, k, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading predictions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)\n        }, loc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)), interpPoints.map((pt, idx) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [pt.latitude, pt.longitude],\n          radius: 6,\n          pathOptions: {\n            color: '#000',\n            fillColor: '#00BCD4',\n            fillOpacity: 0.9\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                minWidth: 200\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Interpolated point\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Nearest: \", pt.nearest_location || '—']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"param-list popup-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"pH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['pH']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"DO (mg/L)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['DO (mg/L)']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"BOD (mg/L)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['BOD (mg/L)']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 93\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"FC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['FC MPN/100ml']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"TC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['TC MPN/100ml']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"Quality\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['Water Quality']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 90\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)\n        }, `ip-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-panel\",\n        style: {\n          '--river-color': getRiverColor(selected ? selected.river : 'Mula')\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 8,\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode('start'),\n              className: selectMode === 'start' ? 'active' : '',\n              children: \"Pick Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode('end'),\n              className: selectMode === 'end' ? 'active' : '',\n              children: \"Pick End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                if (!startPoint || !endPoint) return alert('Pick start and end by clicking the map');\n                const d = new Date(selectedDate);\n                const body = {\n                  start: startPoint,\n                  end: endPoint,\n                  points: 10,\n                  month: d.getMonth() + 1,\n                  year: d.getFullYear(),\n                  follow_river: followRiver\n                };\n                const res = await fetch(`${API_BASE}/interpolate_predict`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(body)\n                });\n                const jb = await res.json();\n                setInterpPoints(jb.predictions || []);\n              },\n              children: \"Interpolate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: followRiver,\n                onChange: e => setFollowRiver(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 45\n              }, this), \" Follow river\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Start: \", startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"End: \", endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-date\",\n          children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: new Date(selectedDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selected.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"muted\",\n            children: [selected.river, \" \\u2022 \", selected.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Prediction for \", new Date(selectedDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"param-list large\",\n            children: [Object.entries(selected.prediction).filter(([k]) => k !== 'Water Quality').map(([k, v]) => {\n              const status = getParameterStatus(k, v);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"param\",\n                  children: k\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: v\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 74\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge ${status.cls}`,\n                  children: status.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 108\n                }, this)]\n              }, k, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 28\n              }, this);\n            }), (() => {\n              const q = selected.prediction['Water Quality'];\n              const status = getParameterStatus('Water Quality', q);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"quality\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"param\",\n                  children: \"Water Quality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"param-value\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge ${status.cls}`,\n                    children: status.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"Select a location on the map or from the list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"gHUtzm4rh0TCBBTTW0isxvSe4ak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","CircleMarker","L","FaWater","puneLocations","puneCenter","getRiverColor","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","App","_s3","_s2","$RefreshSig$","predictions","setPredictions","selected","setSelected","interpPoints","setInterpPoints","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","followRiver","setFollowRiver","selectedDate","setSelectedDate","d","Date","getFullYear","String","getMonth","padStart","getDate","y","m","slice","split","map","Number","fetchAll","res","fetch","body","json","newPred","item","loc","find","p","name","location","id","sel","prediction","e","empty","handleMarkerClick","handleMapClick","lat","latlng","lon","lng","latitude","longitude","toLatLngs","path","Calendar","date","onChange","parseLocal","s","formatLocal","viewDate","setViewDate","startOfMonth","endOfMonth","daysInMonth","startWeekday","getDay","prevMonth","nextMonth","rows","cells","i","push","length","selectedObj","isSameDay","a","b","today","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","undefined","month","row","ri","Fragment","ci","cls","toDateString","getParameterStatus","param","value","label","v","_s","toLowerCase","includes","size","color","style","marginTop","center","zoom","whenCreated","on","url","coordinate","pathOptions","river","fillColor","fillOpacity","radius","eventHandlers","click","Object","entries","k","status","pt","idx","minWidth","nearest_location","display","gap","alignItems","alert","start","end","points","year","follow_river","method","headers","JSON","stringify","jb","marginLeft","type","checked","target","toFixed","toLocaleDateString","description","filter","q","_c","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction App() {\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]); // points returned from interpolation\r\n  const [selectMode, setSelectMode] = useState(null); // 'start' | 'end' | null\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [followRiver, setFollowRiver] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n  const d = new Date();\r\n  return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`; // local YYYY-MM-DD\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // fetch predictions for selectedDate (server needs month & year)\r\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number); // YYYY-MM-DD -> [YYYY, MM]\r\n    const fetchAll = async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\r\n        const body = await res.json();\r\n        const newPred = {};\r\n        for (const item of body.predictions) {\r\n          // match by location name to puneLocations id\r\n          const loc = puneLocations.find(p => p.name === item.location);\r\n          if (loc) newPred[loc.id] = {\r\n            'pH': item['pH'],\r\n            'DO (mg/L)': item['DO (mg/L)'],\r\n            'BOD (mg/L)': item['BOD (mg/L)'],\r\n            'FC MPN/100ml': item['FC MPN/100ml'],\r\n            'TC MPN/100ml': item['TC MPN/100ml'],\r\n            'Water Quality': item['Water Quality']\r\n          };\r\n        }\r\n        // for locations not returned, set null\r\n        for (const loc of puneLocations) if (!newPred[loc.id]) newPred[loc.id] = null;\r\n        setPredictions(newPred);\r\n        // update selected prediction if needed\r\n        if (selected) {\r\n          const sel = puneLocations.find(p => p.id === selected.id);\r\n          setSelected(sel ? { ...sel, prediction: newPred[sel.id] } : null);\r\n        }\r\n      } catch (e) {\r\n        // fallback: clear predictions\r\n        const empty = {};\r\n        for (const loc of puneLocations) empty[loc.id] = null;\r\n        setPredictions(empty);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, [selectedDate]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    setSelected({ ...loc, prediction: predictions[loc.id] });\r\n  };\r\n\r\n  const handleMapClick = (e) => {\r\n    if (!selectMode) return;\r\n    const lat = e.latlng.lat;\r\n    const lon = e.latlng.lng;\r\n    if (selectMode === 'start') {\r\n      setStartPoint({ latitude: lat, longitude: lon });\r\n    } else if (selectMode === 'end') {\r\n      setEndPoint({ latitude: lat, longitude: lon });\r\n    }\r\n    setSelectMode(null);\r\n  };\r\n\r\n  const toLatLngs = (path) => path.map(p => [p.latitude, p.longitude]);\r\n\r\n  // Inline calendar component\r\n  const Calendar = ({ date, onChange }) => {\r\n    // helpers to ensure local-date handling (avoid UTC shifts from toISOString)\r\n    const parseLocal = (s) => new Date(s + 'T00:00:00');\r\n    const formatLocal = (d) => `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`;\r\n\r\n    const [viewDate, setViewDate] = useState(() => {\r\n      const d = parseLocal(date);\r\n      return new Date(d.getFullYear(), d.getMonth(), 1);\r\n    });\r\n\r\n    useEffect(() => {\r\n      const d = parseLocal(date);\r\n      setViewDate(new Date(d.getFullYear(), d.getMonth(), 1));\r\n    }, [date]);\r\n\r\n    const startOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth(), 1);\r\n    const endOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 0);\r\n    const daysInMonth = endOfMonth.getDate();\r\n    const startWeekday = (startOfMonth.getDay() + 6) % 7; // make Monday=0\r\n\r\n    const prevMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() - 1, 1));\r\n    const nextMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 1));\r\n\r\n    const rows = [];\r\n    let cells = [];\r\n    // fill blanks\r\n    for (let i = 0; i < startWeekday; i++) cells.push(null);\r\n    for (let d = 1; d <= daysInMonth; d++) {\r\n      cells.push(new Date(viewDate.getFullYear(), viewDate.getMonth(), d));\r\n    }\r\n    while (cells.length % 7 !== 0) cells.push(null);\r\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\r\n\r\n  const selectedObj = parseLocal(date);\r\n  const isSameDay = (a, b) => a && b && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\r\n  const today = new Date();\r\n\r\n    return (\r\n      <div className=\"inline-calendar\">\r\n        <div className=\"cal-head\">\r\n          <button onClick={prevMonth} aria-label=\"Previous month\">‹</button>\r\n          <div className=\"cal-title\">{viewDate.toLocaleString(undefined, { month: 'long' })} {viewDate.getFullYear()}</div>\r\n          <button onClick={nextMonth} aria-label=\"Next month\">›</button>\r\n        </div>\r\n\r\n        <div className=\"cal-grid\">\r\n          <div className=\"cal-weekday\">Mo</div>\r\n          <div className=\"cal-weekday\">Tu</div>\r\n          <div className=\"cal-weekday\">We</div>\r\n          <div className=\"cal-weekday\">Th</div>\r\n          <div className=\"cal-weekday\">Fr</div>\r\n          <div className=\"cal-weekday\">Sa</div>\r\n          <div className=\"cal-weekday\">Su</div>\r\n\r\n          {rows.map((row, ri) => (\r\n            <React.Fragment key={ri}>\r\n              {row.map((d, ci) => {\r\n                const cls = d ? (isSameDay(d, selectedObj) ? ' selected' : (isSameDay(d, today) ? ' today' : '')) : ' empty';\r\n                return (\r\n                  <div key={`${ri}-${ci}`} className={`cal-day${cls}`}>\r\n                    {d ? (\r\n                        <button onClick={() => onChange(formatLocal(d))} aria-label={`Select ${d.toDateString()}`}>\r\n                          {d.getDate()}\r\n                        </button>\r\n                      ) : (\r\n                      <div aria-hidden className=\"empty-cell\" />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n          <div className=\"cal-footer\">\r\n            <button onClick={() => onChange(formatLocal(new Date()))}>Today</button>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Parameter status helper (returns label and CSS class)\r\n  const getParameterStatus = (param, value) => {\r\n    if (value === null || value === undefined || value === '') return { label: 'N/A', cls: 'status-na' };\r\n    const v = Number(value);\r\n    switch (param) {\r\n      case 'pH':\r\n        if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'DO (mg/L)':\r\n        if (v >= 5.0) return { label: 'Good', cls: 'status-good' };\r\n        if (v >= 3.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'BOD (mg/L)':\r\n        if (v <= 3.0) return { label: 'Good', cls: 'status-good' };\r\n        if (v <= 6.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'FC MPN/100ml':\r\n      case 'TC MPN/100ml':\r\n        if (v < 500) return { label: 'Good', cls: 'status-good' };\r\n        if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'Water Quality':\r\n  // normalize and check for explicit 'non' first so \"Non Complying\" doesn't match 'comp'\r\n  const _s = String(value).toLowerCase();\r\n  if (_s.includes('non')) return { label: 'Non Complying', cls: 'status-poor' };\r\n  if (_s.includes('comp')) return { label: 'Complying', cls: 'status-good' };\r\n  return { label: String(value), cls: 'status-na' };\r\n      default:\r\n        return { label: '', cls: '' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"brand\">\r\n          <FaWater size={28} color=\"#fff\" />\r\n          <div>\r\n            <h1>RiverWatch</h1>\r\n            <p>Water quality predictions for Pune rivers</p>\r\n          </div>\r\n        </div>\r\n  <div className=\"legend\">\r\n          <div><span className=\"dot blue\"/> Mula</div>\r\n          <div><span className=\"dot teal\"/> Mutha</div>\r\n          <div><span className=\"dot orange\"/> Mula-Mutha</div>\r\n        </div>\r\n\r\n        <div className=\"sidebar-info\">\r\n          <h3>Rivers</h3>\r\n          <ul className=\"river-list\">\r\n            <li><span className=\"dot blue\"/> <strong>Mula</strong>\r\n              <div className=\"river-desc\">Originates to the north — urban stretches through western Pune with monitoring points along bridges.</div>\r\n            </li>\r\n            <li><span className=\"dot teal\"/> <strong>Mutha</strong>\r\n              <div className=\"river-desc\">Flows from Khadakvasla dam through Pune central areas; many monitoring points track water health downstream.</div>\r\n            </li>\r\n            <li><span className=\"dot orange\"/> <strong>Mula-Mutha</strong>\r\n              <div className=\"river-desc\">Confluence section where Mula and Mutha meet — sensitive zone for mixing and quality changes.</div>\r\n            </li>\r\n          </ul>\r\n\r\n          <h3 style={{marginTop:12}}>Parameters</h3>\r\n          <ul className=\"param-names\">\r\n            <li>pH</li>\r\n            <li>DO (mg/L)</li>\r\n            <li>BOD (mg/L)</li>\r\n            <li>FC MPN/100ml</li>\r\n            <li>TC MPN/100ml</li>\r\n            <li>Water Quality (Complying / Non Complying)</li>\r\n          </ul>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"main\">\r\n  <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={map => { map.on('click', handleMapClick); }}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n\r\n          {puneLocations.map(loc => (\r\n            <CircleMarker key={loc.id}\r\n              center={[loc.coordinate.latitude, loc.coordinate.longitude]}\r\n              pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity: 0.9 }}\r\n              radius={10}\r\n              eventHandlers={{ click: () => handleMarkerClick(loc) }}\r\n            >\r\n              <Popup>\r\n                <div className=\"popup-card\">\r\n                  <div className=\"popup-header\">\r\n                    <strong className=\"popup-title\">{loc.name}</strong>\r\n                    <div className=\"muted popup-sub\">{loc.river}</div>\r\n                  </div>\r\n\r\n                  {predictions[loc.id] ? (\r\n                    <ul className=\"param-list popup-grid\">\r\n                      {Object.entries(predictions[loc.id]).map(([k, v]) => {\r\n                        const status = getParameterStatus(k, v);\r\n                        if (k === 'Water Quality') {\r\n                          return (\r\n                            <li className=\"param-row\" key={k}>\r\n                              <span className=\"param-name\">{k}</span>\r\n                              <span className=\"param-value\"><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                            </li>\r\n                          );\r\n                        }\r\n\r\n                        return (\r\n                          <li className=\"param-row\" key={k}>\r\n                            <span className=\"param-name\">{k}</span>\r\n                            <span className=\"param-value\"><span className=\"val-text\">{v}</span><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  ) : (\r\n                    <div>Loading predictions...</div>\r\n                  )}\r\n                </div>\r\n              </Popup>\r\n            </CircleMarker>\r\n          ))}\r\n\r\n          {/* Render interpolated points */}\r\n          {interpPoints.map((pt, idx) => (\r\n            <CircleMarker key={`ip-${idx}`} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{ color: '#000', fillColor: '#00BCD4', fillOpacity: 0.9 }}>\r\n              <Popup>\r\n                <div style={{minWidth:200}}>\r\n                  <div><strong>Interpolated point</strong></div>\r\n                  <div className=\"muted\">Nearest: {pt.nearest_location || '—'}</div>\r\n                  <ul className=\"param-list popup-grid\">\r\n                    <li className=\"param-row\"><span className=\"param-name\">pH</span><span className=\"param-value\">{pt['pH']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">DO (mg/L)</span><span className=\"param-value\">{pt['DO (mg/L)']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">BOD (mg/L)</span><span className=\"param-value\">{pt['BOD (mg/L)']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">FC</span><span className=\"param-value\">{pt['FC MPN/100ml']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">TC</span><span className=\"param-value\">{pt['TC MPN/100ml']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">Quality</span><span className=\"param-value\">{pt['Water Quality']}</span></li>\r\n                  </ul>\r\n                </div>\r\n              </Popup>\r\n            </CircleMarker>\r\n          ))}\r\n        </MapContainer>\r\n\r\n  <div className=\"detail-panel\" style={{ '--river-color': getRiverColor(selected ? selected.river : 'Mula') }}>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d => setSelectedDate(d)} />\r\n          </div>\r\n          <div style={{marginTop:12}}>\r\n            <div style={{display:'flex', gap:8, alignItems:'center'}}>\r\n              <button onClick={() => setSelectMode('start')} className={selectMode==='start' ? 'active' : ''}>Pick Start</button>\r\n              <button onClick={() => setSelectMode('end')} className={selectMode==='end' ? 'active' : ''}>Pick End</button>\r\n              <button onClick={async () => {\r\n                if (!startPoint || !endPoint) return alert('Pick start and end by clicking the map');\r\n                const d = new Date(selectedDate);\r\n                const body = { start: startPoint, end: endPoint, points: 10, month: d.getMonth()+1, year: d.getFullYear(), follow_river: followRiver };\r\n                const res = await fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n                const jb = await res.json();\r\n                setInterpPoints(jb.predictions || []);\r\n              }}>Interpolate</button>\r\n              <label style={{marginLeft:8}}><input type=\"checkbox\" checked={followRiver} onChange={e => setFollowRiver(e.target.checked)} /> Follow river</label>\r\n            </div>\r\n            <div style={{marginTop:8}}>\r\n              <div>Start: {startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—'}</div>\r\n              <div>End: {endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—'}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n          {selected ? (\r\n            <div>\r\n              <h2>{selected.name}</h2>\r\n              <p className=\"muted\">{selected.river} • {selected.description}</p>\r\n              <h3>Prediction for {new Date(selectedDate).toLocaleDateString()}</h3>\r\n              {selected.prediction ? (\r\n                <ul className=\"param-list large\">\r\n                  {Object.entries(selected.prediction).filter(([k]) => k !== 'Water Quality').map(([k, v]) => {\r\n                    const status = getParameterStatus(k, v);\r\n                    return <li key={k}><span className=\"param\">{k}</span><span className=\"value\">{v}</span><span className={`badge ${status.cls}`}>{status.label}</span></li>\r\n                  })}\r\n                  {(() => {\r\n                    const q = selected.prediction['Water Quality'];\r\n                    const status = getParameterStatus('Water Quality', q);\r\n                    return (\r\n                      <li className=\"quality\">\r\n                        <span className=\"param\">Water Quality</span>\r\n                        <span className=\"param-value\"><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                      </li>\r\n                    );\r\n                  })()}\r\n                </ul>\r\n              ) : <div>Loading...</div>}\r\n            </div>\r\n          ) : (\r\n            <div className=\"placeholder\">Select a location on the map or from the list.</div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}