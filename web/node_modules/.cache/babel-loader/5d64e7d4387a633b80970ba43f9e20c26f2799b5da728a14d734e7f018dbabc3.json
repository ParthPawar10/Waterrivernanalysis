{"ast":null,"code":"var _jsxFileName = \"F:\\\\Download\\\\pph\\\\web\\\\src\\\\App.js\",\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { FaWater } from 'react-icons/fa';\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver } from './locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png'\n});\nfunction App() {\n  _s4();\n  var _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  const [predictions, setPredictions] = useState({});\n  const [selected, setSelected] = useState(null);\n  const [interpPoints, setInterpPoints] = useState([]); // points returned from interpolation\n  const [userLocationsText, setUserLocationsText] = useState('');\n  const [sampleCount, setSampleCount] = useState(5);\n  const [selectMode, setSelectMode] = useState(null); // 'start' | 'end' | null\n  const [startPoint, setStartPoint] = useState(null);\n  const [endPoint, setEndPoint] = useState(null);\n  const [followRiver, setFollowRiver] = useState(true);\n  const [mapInst, setMapInst] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`; // local YYYY-MM-DD\n  });\n  useEffect(() => {\n    // fetch predictions for selectedDate (server needs month & year)\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number); // YYYY-MM-DD -> [YYYY, MM]\n    const fetchAll = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\n        const body = await res.json();\n        const newPred = {};\n        for (const item of body.predictions) {\n          // match by location name to puneLocations id\n          const loc = puneLocations.find(p => p.name === item.location);\n          if (loc) newPred[loc.id] = {\n            'pH': item['pH'],\n            'DO (mg/L)': item['DO (mg/L)'],\n            'BOD (mg/L)': item['BOD (mg/L)'],\n            'FC MPN/100ml': item['FC MPN/100ml'],\n            'TC MPN/100ml': item['TC MPN/100ml'],\n            'Water Quality': item['Water Quality']\n          };\n        }\n        // for locations not returned, set null\n        for (const loc of puneLocations) if (!newPred[loc.id]) newPred[loc.id] = null;\n        setPredictions(newPred);\n        // update selected prediction if needed\n        if (selected) {\n          const sel = puneLocations.find(p => p.id === selected.id);\n          setSelected(sel ? {\n            ...sel,\n            prediction: newPred[sel.id]\n          } : null);\n        }\n      } catch (e) {\n        // fallback: clear predictions\n        const empty = {};\n        for (const loc of puneLocations) empty[loc.id] = null;\n        setPredictions(empty);\n      }\n    };\n    fetchAll();\n  }, [selectedDate]);\n\n  // update map cursor when entering pick mode\n  useEffect(() => {\n    if (!mapInst) return;\n    const el = mapInst.getContainer();\n    if (selectMode) {\n      el.style.cursor = 'crosshair';\n    } else {\n      el.style.cursor = '';\n    }\n  }, [selectMode, mapInst]);\n  const handleMarkerClick = loc => {\n    setSelected({\n      ...loc,\n      prediction: predictions[loc.id]\n    });\n  };\n  const handleMapClick = e => {\n    console.log('map clicked', selectMode, e && e.latlng && e.latlng.lat);\n    if (!selectMode) return;\n    const {\n      lat,\n      lng\n    } = e.latlng;\n    if (selectMode === 'start') {\n      setStartPoint({\n        latitude: lat,\n        longitude: lng\n      });\n      setSelectMode(null);\n    } else if (selectMode === 'end') {\n      const newEnd = {\n        latitude: lat,\n        longitude: lng\n      };\n      setEndPoint(newEnd);\n      setSelectMode(null);\n      if (startPoint) {\n        // auto-run interpolation when both points are set\n        performInterpolation(startPoint, newEnd);\n      }\n    } else if (selectMode === 'riverPoint') {\n      // send the clicked point to backend for projection + river-follow interpolation\n      const point = {\n        latitude: lat,\n        longitude: lng\n      };\n      setSelectMode(null);\n      const d = new Date(selectedDate);\n      const body = {\n        point,\n        points: 12,\n        month: d.getMonth() + 1,\n        year: d.getFullYear(),\n        follow_river: true\n      };\n      fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).then(r => r.json()).then(data => setInterpPoints(data.predictions || [])).catch(() => {});\n    }\n  };\n\n  // react-leaflet hook wrapper to ensure clicks are captured reliably\n  const MapClickHandler = ({\n    onMapClick\n  }) => {\n    _s2();\n    useMapEvents({\n      click: e => onMapClick(e)\n    });\n    return null;\n  };\n  _s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const toLatLngs = path => path.map(p => [p.latitude, p.longitude]);\n\n  // perform interpolation between two picked points by slicing the preSampledRiver\n  const performInterpolation = async (startPt, endPt) => {\n    if (!startPt || !endPt) return;\n    // find nearest indices in the pre-sampled river array and send that slice to backend\n    const nearestIndex = pt => {\n      let best = 0;\n      let bestD = Infinity;\n      for (let i = 0; i < preSampledRiver.length; i++) {\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\n        const d2 = dlat * dlat + dlng * dlng;\n        if (d2 < bestD) {\n          bestD = d2;\n          best = i;\n        }\n      }\n      return best;\n    };\n    const si = nearestIndex(startPt);\n    const ei = nearestIndex(endPt);\n    const a = Math.min(si, ei);\n    const b = Math.max(si, ei);\n    const sub = preSampledRiver.slice(a, b + 1);\n    const d = new Date(selectedDate);\n    const body = {\n      locations: sub,\n      points: sampleCount,\n      month: d.getMonth() + 1,\n      year: d.getFullYear(),\n      pick_from_input: true\n    };\n    try {\n      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const jb = await res.json();\n      if (jb.error) {\n        alert('Server: ' + jb.error);\n        return;\n      }\n      setInterpPoints(jb.predictions || []);\n    } catch (err) {\n      alert('Request failed');\n    }\n  };\n\n  // Inline calendar component\n  const Calendar = ({\n    date,\n    onChange\n  }) => {\n    _s3();\n    // helpers to ensure local-date handling (avoid UTC shifts from toISOString)\n    const parseLocal = s => new Date(s + 'T00:00:00');\n    const formatLocal = d => `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n    const [viewDate, setViewDate] = useState(() => {\n      const d = parseLocal(date);\n      return new Date(d.getFullYear(), d.getMonth(), 1);\n    });\n    useEffect(() => {\n      const d = parseLocal(date);\n      setViewDate(new Date(d.getFullYear(), d.getMonth(), 1));\n    }, [date]);\n    const startOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth(), 1);\n    const endOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 0);\n    const daysInMonth = endOfMonth.getDate();\n    const startWeekday = (startOfMonth.getDay() + 6) % 7; // make Monday=0\n\n    const prevMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() - 1, 1));\n    const nextMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 1));\n    const rows = [];\n    let cells = [];\n    // fill blanks\n    for (let i = 0; i < startWeekday; i++) cells.push(null);\n    for (let d = 1; d <= daysInMonth; d++) {\n      cells.push(new Date(viewDate.getFullYear(), viewDate.getMonth(), d));\n    }\n    while (cells.length % 7 !== 0) cells.push(null);\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\n    const selectedObj = parseLocal(date);\n    const isSameDay = (a, b) => a && b && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n    const today = new Date();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevMonth,\n          \"aria-label\": \"Previous month\",\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-title\",\n          children: [viewDate.toLocaleString(undefined, {\n            month: 'long'\n          }), \" \", viewDate.getFullYear()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextMonth,\n          \"aria-label\": \"Next month\",\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Mo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Tu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"We\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Th\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Fr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cal-weekday\",\n          children: \"Su\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), rows.map((row, ri) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: row.map((d, ci) => {\n            const cls = d ? isSameDay(d, selectedObj) ? ' selected' : isSameDay(d, today) ? ' today' : '' : ' empty';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `cal-day${cls}`,\n              children: d ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onChange(formatLocal(d)),\n                \"aria-label\": `Select ${d.toDateString()}`,\n                children: d.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                \"aria-hidden\": true,\n                className: \"empty-cell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this)\n            }, `${ri}-${ci}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this);\n          })\n        }, ri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(formatLocal(new Date())),\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Parameter status helper (returns label and CSS class)\n  _s3(Calendar, \"G2KW8h2+pAWNaQndPxg9Et29IDo=\");\n  const getParameterStatus = (param, value) => {\n    if (value === null || value === undefined || value === '') return {\n      label: 'N/A',\n      cls: 'status-na'\n    };\n    const v = Number(value);\n    switch (param) {\n      case 'pH':\n        if (v >= 6.5 && v <= 8.5) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'DO (mg/L)':\n        if (v >= 5.0) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v >= 3.0) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'BOD (mg/L)':\n        if (v <= 3.0) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v <= 6.0) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'FC MPN/100ml':\n      case 'TC MPN/100ml':\n        if (v < 500) return {\n          label: 'Good',\n          cls: 'status-good'\n        };\n        if (v <= 1000) return {\n          label: 'Moderate',\n          cls: 'status-moderate'\n        };\n        return {\n          label: 'Poor',\n          cls: 'status-poor'\n        };\n      case 'Water Quality':\n        // normalize and check for explicit 'non' first so \"Non Complying\" doesn't match 'comp'\n        const _s = String(value).toLowerCase();\n        if (_s.includes('non')) return {\n          label: 'Non Complying',\n          cls: 'status-poor'\n        };\n        if (_s.includes('comp')) return {\n          label: 'Complying',\n          cls: 'status-good'\n        };\n        return {\n          label: String(value),\n          cls: 'status-na'\n        };\n      default:\n        return {\n          label: '',\n          cls: ''\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(FaWater, {\n          size: 28,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"RiverWatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Water quality predictions for Pune rivers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 16\n          }, this), \" Mula\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot teal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 16\n          }, this), \" Mutha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 16\n          }, this), \" Mula-Mutha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Rivers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"river-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Originates to the north \\u2014 urban stretches through western Pune with monitoring points along bridges.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot teal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mutha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Flows from Khadakvasla dam through Pune central areas; many monitoring points track water health downstream.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mula-Mutha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"river-desc\",\n              children: \"Confluence section where Mula and Mutha meet \\u2014 sensitive zone for mixing and quality changes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 12\n          },\n          children: \"Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"param-names\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"DO (mg/L)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"BOD (mg/L)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"FC MPN/100ml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"TC MPN/100ml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Water Quality (Complying / Non Complying)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [puneCenter.latitude, puneCenter.longitude],\n        zoom: puneCenter.zoom,\n        className: \"map\",\n        whenCreated: m => setMapInst(m),\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n          onMapClick: handleMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), puneLocations.map(loc => /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [loc.coordinate.latitude, loc.coordinate.longitude],\n          pathOptions: {\n            color: getRiverColor(loc.river),\n            fillColor: getRiverColor(loc.river),\n            fillOpacity: 0.9\n          },\n          radius: 10,\n          eventHandlers: {\n            click: () => handleMarkerClick(loc)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popup-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"popup-title\",\n                  children: loc.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"muted popup-sub\",\n                  children: loc.river\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), predictions[loc.id] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"param-list popup-grid\",\n                children: Object.entries(predictions[loc.id]).map(([k, v]) => {\n                  const status = getParameterStatus(k, v);\n                  if (k === 'Water Quality') {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"param-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"param-name\",\n                        children: k\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"param-value\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `badge ${status.cls}`,\n                          children: status.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 339,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 31\n                      }, this)]\n                    }, k, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 29\n                    }, this);\n                  }\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"param-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-name\",\n                      children: k\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"param-value\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"val-text\",\n                        children: v\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 59\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `badge ${status.cls}`,\n                        children: status.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 96\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 29\n                    }, this)]\n                  }, k, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading predictions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)\n        }, loc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)), startPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n          position: [startPoint.latitude, startPoint.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }, this) : null, endPoint ? /*#__PURE__*/_jsxDEV(Marker, {\n          position: [endPoint.latitude, endPoint.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 23\n        }, this) : null, interpPoints.map((pt, idx) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [pt.latitude, pt.longitude],\n          radius: 6,\n          pathOptions: {\n            color: '#000',\n            fillColor: '#00BCD4',\n            fillOpacity: 0.9\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                minWidth: 200\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Interpolated point\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"muted\",\n                children: [\"Nearest: \", pt.nearest_location || '—']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"param-list popup-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"pH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['pH']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"DO (mg/L)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['DO (mg/L)']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"BOD (mg/L)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['BOD (mg/L)']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 93\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"FC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['FC MPN/100ml']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"TC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['TC MPN/100ml']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"param-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-name\",\n                    children: \"Quality\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"param-value\",\n                    children: pt['Water Quality']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 90\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)\n        }, `ip-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-panel\",\n        style: {\n          '--river-color': getRiverColor(selected ? selected.river : 'Mula')\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-calendar\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            date: selectedDate,\n            onChange: d => setSelectedDate(d)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 8,\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode(selectMode === 'start' ? null : 'start'),\n              className: selectMode === 'start' ? 'active' : '',\n              children: \"Pick Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode(selectMode === 'end' ? null : 'end'),\n              className: selectMode === 'end' ? 'active' : '',\n              children: \"Pick End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectMode(selectMode === 'riverPoint' ? null : 'riverPoint'),\n              className: selectMode === 'riverPoint' ? 'active' : '',\n              children: \"Pick River Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectMode(null);\n                setInterpPoints([]);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                if (!startPoint || !endPoint) return alert('Pick start and end by clicking the map');\n                // find nearest indices in the pre-sampled river array and send that slice to backend\n                const nearestIndex = pt => {\n                  let best = 0;\n                  let bestD = Infinity;\n                  for (let i = 0; i < preSampledRiver.length; i++) {\n                    const dlat = preSampledRiver[i].latitude - pt.latitude;\n                    const dlng = preSampledRiver[i].longitude - pt.longitude;\n                    const d2 = dlat * dlat + dlng * dlng;\n                    if (d2 < bestD) {\n                      bestD = d2;\n                      best = i;\n                    }\n                  }\n                  return best;\n                };\n                const si = nearestIndex(startPoint);\n                const ei = nearestIndex(endPoint);\n                const a = Math.min(si, ei);\n                const b = Math.max(si, ei);\n                const sub = preSampledRiver.slice(a, b + 1);\n                const d = new Date(selectedDate);\n                const body = {\n                  locations: sub,\n                  points: sampleCount,\n                  month: d.getMonth() + 1,\n                  year: d.getFullYear(),\n                  pick_from_input: true\n                };\n                try {\n                  const res = await fetch(`${API_BASE}/interpolate_predict`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(body)\n                  });\n                  const jb = await res.json();\n                  if (jb.error) return alert('Server: ' + jb.error);\n                  setInterpPoints(jb.predictions || []);\n                } catch (err) {\n                  alert('Request failed');\n                }\n              },\n              children: \"Interpolate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: [\"Or paste a pre-sampled polyline (JSON array of \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"{latitude, longitude}\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 91\n                }, this), \") and pick k of them:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: userLocationsText,\n                onChange: e => setUserLocationsText(e.target.value),\n                placeholder: \"[{\\\"latitude\\\":18.5,\\\"longitude\\\":73.85}, ...]\",\n                style: {\n                  width: '100%',\n                  height: 120,\n                  marginTop: 6,\n                  fontSize: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: 8,\n                  alignItems: 'center',\n                  marginTop: 6\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'flex',\n                    gap: 6,\n                    alignItems: 'center'\n                  },\n                  children: [\"Pick k:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: 1,\n                    max: 50,\n                    value: sampleCount,\n                    onChange: e => setSampleCount(Number(e.target.value)),\n                    style: {\n                      width: 80,\n                      marginLeft: 6\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: async () => {\n                    let locs;\n                    try {\n                      locs = JSON.parse(userLocationsText);\n                      if (!Array.isArray(locs) || locs.length < 2) return alert('Provide a JSON array of at least 2 points');\n                    } catch (err) {\n                      return alert('Invalid JSON');\n                    }\n                    const d = new Date(selectedDate);\n                    const body = {\n                      locations: locs,\n                      points: sampleCount,\n                      month: d.getMonth() + 1,\n                      year: d.getFullYear(),\n                      pick_from_input: true\n                    };\n                    try {\n                      const res = await fetch(`${API_BASE}/interpolate_predict`, {\n                        method: 'POST',\n                        headers: {\n                          'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(body)\n                      });\n                      const jb = await res.json();\n                      if (jb.error) return alert('Server: ' + jb.error);\n                      setInterpPoints(jb.predictions || []);\n                    } catch (err) {\n                      alert('Request failed');\n                    }\n                  },\n                  children: \"Use provided points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: followRiver,\n                onChange: e => setFollowRiver(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 45\n              }, this), \" Follow river\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Start: \", startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"End: \", endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pick mode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), \" \", selectMode || 'none', \" \", selectMode ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8,\n                color: '#777'\n              },\n              children: \"Click on the map to set point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 80\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pick mode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), \" \", selectMode || 'none']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-date\",\n          children: [\"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: new Date(selectedDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selected.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"muted\",\n            children: [selected.river, \" \\u2022 \", selected.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Prediction for \", new Date(selectedDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), selected.prediction ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"param-list large\",\n            children: [Object.entries(selected.prediction).filter(([k]) => k !== 'Water Quality').map(([k, v]) => {\n              const status = getParameterStatus(k, v);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"param\",\n                  children: k\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: v\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 74\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge ${status.cls}`,\n                  children: status.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 108\n                }, this)]\n              }, k, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 28\n              }, this);\n            }), (() => {\n              const q = selected.prediction['Water Quality'];\n              const status = getParameterStatus('Water Quality', q);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"quality\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"param\",\n                  children: \"Water Quality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"param-value\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge ${status.cls}`,\n                    children: status.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"Select a location on the map or from the list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s4(App, \"3U2qZEx7MiibFaPLF170URAFcwk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","CircleMarker","useMapEvents","L","FaWater","puneLocations","puneCenter","getRiverColor","riverPaths","preSampledRiver","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","App","_s4","_s2","$RefreshSig$","_s3","predictions","setPredictions","selected","setSelected","interpPoints","setInterpPoints","userLocationsText","setUserLocationsText","sampleCount","setSampleCount","selectMode","setSelectMode","startPoint","setStartPoint","endPoint","setEndPoint","followRiver","setFollowRiver","mapInst","setMapInst","selectedDate","setSelectedDate","d","Date","getFullYear","String","getMonth","padStart","getDate","y","m","slice","split","map","Number","fetchAll","res","fetch","body","json","newPred","item","loc","find","p","name","location","id","sel","prediction","e","empty","el","getContainer","style","cursor","handleMarkerClick","handleMapClick","console","log","latlng","lat","lng","latitude","longitude","newEnd","performInterpolation","point","points","month","year","follow_river","method","headers","JSON","stringify","then","r","data","catch","MapClickHandler","onMapClick","click","toLatLngs","path","startPt","endPt","nearestIndex","pt","best","bestD","Infinity","i","length","dlat","dlng","d2","si","ei","a","Math","min","b","max","sub","locations","pick_from_input","jb","error","alert","err","Calendar","date","onChange","parseLocal","s","formatLocal","viewDate","setViewDate","startOfMonth","endOfMonth","daysInMonth","startWeekday","getDay","prevMonth","nextMonth","rows","cells","push","selectedObj","isSameDay","today","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","undefined","row","ri","Fragment","ci","cls","toDateString","getParameterStatus","param","value","label","v","_s","toLowerCase","includes","size","color","marginTop","center","zoom","whenCreated","url","coordinate","pathOptions","river","fillColor","fillOpacity","radius","eventHandlers","Object","entries","k","status","position","idx","minWidth","nearest_location","display","gap","alignItems","target","placeholder","width","height","fontSize","type","marginLeft","locs","parse","Array","isArray","checked","toFixed","toLocaleDateString","description","filter","q","_c","$RefreshReg$"],"sources":["F:/Download/pph/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, useMapEvents } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { FaWater } from 'react-icons/fa';\r\n\r\nimport { puneLocations, puneCenter, getRiverColor, riverPaths, preSampledRiver } from './locations';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n});\r\n\r\nfunction App() {\r\n  const [predictions, setPredictions] = useState({});\r\n  const [selected, setSelected] = useState(null);\r\n  const [interpPoints, setInterpPoints] = useState([]); // points returned from interpolation\r\n  const [userLocationsText, setUserLocationsText] = useState('');\r\n  const [sampleCount, setSampleCount] = useState(5);\r\n  const [selectMode, setSelectMode] = useState(null); // 'start' | 'end' | null\r\n  const [startPoint, setStartPoint] = useState(null);\r\n  const [endPoint, setEndPoint] = useState(null);\r\n  const [followRiver, setFollowRiver] = useState(true);\r\n  const [mapInst, setMapInst] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n  const d = new Date();\r\n  return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`; // local YYYY-MM-DD\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // fetch predictions for selectedDate (server needs month & year)\r\n    const [y, m] = selectedDate.slice(0, 7).split('-').map(Number); // YYYY-MM-DD -> [YYYY, MM]\r\n    const fetchAll = async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/predict_all?month=${m}&year=${y}`);\r\n        const body = await res.json();\r\n        const newPred = {};\r\n        for (const item of body.predictions) {\r\n          // match by location name to puneLocations id\r\n          const loc = puneLocations.find(p => p.name === item.location);\r\n          if (loc) newPred[loc.id] = {\r\n            'pH': item['pH'],\r\n            'DO (mg/L)': item['DO (mg/L)'],\r\n            'BOD (mg/L)': item['BOD (mg/L)'],\r\n            'FC MPN/100ml': item['FC MPN/100ml'],\r\n            'TC MPN/100ml': item['TC MPN/100ml'],\r\n            'Water Quality': item['Water Quality']\r\n          };\r\n        }\r\n        // for locations not returned, set null\r\n        for (const loc of puneLocations) if (!newPred[loc.id]) newPred[loc.id] = null;\r\n        setPredictions(newPred);\r\n        // update selected prediction if needed\r\n        if (selected) {\r\n          const sel = puneLocations.find(p => p.id === selected.id);\r\n          setSelected(sel ? { ...sel, prediction: newPred[sel.id] } : null);\r\n        }\r\n      } catch (e) {\r\n        // fallback: clear predictions\r\n        const empty = {};\r\n        for (const loc of puneLocations) empty[loc.id] = null;\r\n        setPredictions(empty);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, [selectedDate]);\r\n\r\n  // update map cursor when entering pick mode\r\n  useEffect(() => {\r\n    if (!mapInst) return;\r\n    const el = mapInst.getContainer();\r\n    if (selectMode) {\r\n      el.style.cursor = 'crosshair';\r\n    } else {\r\n      el.style.cursor = '';\r\n    }\r\n  }, [selectMode, mapInst]);\r\n\r\n  const handleMarkerClick = (loc) => {\r\n    setSelected({ ...loc, prediction: predictions[loc.id] });\r\n  };\r\n\r\n  const handleMapClick = (e) => {\r\n    console.log('map clicked', selectMode, e && e.latlng && e.latlng.lat);\r\n    if (!selectMode) return;\r\n    const { lat, lng } = e.latlng;\r\n    if (selectMode === 'start') {\r\n      setStartPoint({ latitude: lat, longitude: lng });\r\n      setSelectMode(null);\r\n    } else if (selectMode === 'end') {\r\n      const newEnd = { latitude: lat, longitude: lng };\r\n      setEndPoint(newEnd);\r\n      setSelectMode(null);\r\n      if (startPoint) {\r\n        // auto-run interpolation when both points are set\r\n        performInterpolation(startPoint, newEnd);\r\n      }\r\n    } else if (selectMode === 'riverPoint') {\r\n      // send the clicked point to backend for projection + river-follow interpolation\r\n      const point = { latitude: lat, longitude: lng };\r\n      setSelectMode(null);\r\n      const d = new Date(selectedDate);\r\n      const body = { point, points: 12, month: d.getMonth() + 1, year: d.getFullYear(), follow_river: true };\r\n      fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\r\n        .then(r => r.json())\r\n        .then(data => setInterpPoints(data.predictions || []))\r\n        .catch(() => {});\r\n    }\r\n  };\r\n\r\n  // react-leaflet hook wrapper to ensure clicks are captured reliably\r\n  const MapClickHandler = ({ onMapClick }) => {\r\n    useMapEvents({\r\n      click: (e) => onMapClick(e)\r\n    });\r\n    return null;\r\n  };\r\n\r\n  const toLatLngs = (path) => path.map(p => [p.latitude, p.longitude]);\r\n\r\n  // perform interpolation between two picked points by slicing the preSampledRiver\r\n  const performInterpolation = async (startPt, endPt) => {\r\n    if (!startPt || !endPt) return;\r\n    // find nearest indices in the pre-sampled river array and send that slice to backend\r\n    const nearestIndex = (pt) => {\r\n      let best = 0;\r\n      let bestD = Infinity;\r\n      for (let i = 0; i < preSampledRiver.length; i++) {\r\n        const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n        const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n        const d2 = dlat * dlat + dlng * dlng;\r\n        if (d2 < bestD) { bestD = d2; best = i; }\r\n      }\r\n      return best;\r\n    };\r\n    const si = nearestIndex(startPt);\r\n    const ei = nearestIndex(endPt);\r\n    const a = Math.min(si, ei);\r\n    const b = Math.max(si, ei);\r\n    const sub = preSampledRiver.slice(a, b + 1);\r\n\r\n    const d = new Date(selectedDate);\r\n    const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true };\r\n    try {\r\n      const res = await fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n      const jb = await res.json();\r\n      if (jb.error) { alert('Server: ' + jb.error); return; }\r\n      setInterpPoints(jb.predictions || []);\r\n    } catch (err) { alert('Request failed'); }\r\n  };\r\n\r\n  // Inline calendar component\r\n  const Calendar = ({ date, onChange }) => {\r\n    // helpers to ensure local-date handling (avoid UTC shifts from toISOString)\r\n    const parseLocal = (s) => new Date(s + 'T00:00:00');\r\n    const formatLocal = (d) => `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`;\r\n\r\n    const [viewDate, setViewDate] = useState(() => {\r\n      const d = parseLocal(date);\r\n      return new Date(d.getFullYear(), d.getMonth(), 1);\r\n    });\r\n\r\n    useEffect(() => {\r\n      const d = parseLocal(date);\r\n      setViewDate(new Date(d.getFullYear(), d.getMonth(), 1));\r\n    }, [date]);\r\n\r\n    const startOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth(), 1);\r\n    const endOfMonth = new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 0);\r\n    const daysInMonth = endOfMonth.getDate();\r\n    const startWeekday = (startOfMonth.getDay() + 6) % 7; // make Monday=0\r\n\r\n    const prevMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() - 1, 1));\r\n    const nextMonth = () => setViewDate(new Date(viewDate.getFullYear(), viewDate.getMonth() + 1, 1));\r\n\r\n    const rows = [];\r\n    let cells = [];\r\n    // fill blanks\r\n    for (let i = 0; i < startWeekday; i++) cells.push(null);\r\n    for (let d = 1; d <= daysInMonth; d++) {\r\n      cells.push(new Date(viewDate.getFullYear(), viewDate.getMonth(), d));\r\n    }\r\n    while (cells.length % 7 !== 0) cells.push(null);\r\n    for (let i = 0; i < cells.length; i += 7) rows.push(cells.slice(i, i + 7));\r\n\r\n  const selectedObj = parseLocal(date);\r\n  const isSameDay = (a, b) => a && b && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\r\n  const today = new Date();\r\n\r\n    return (\r\n      <div className=\"inline-calendar\">\r\n        <div className=\"cal-head\">\r\n          <button onClick={prevMonth} aria-label=\"Previous month\">‹</button>\r\n          <div className=\"cal-title\">{viewDate.toLocaleString(undefined, { month: 'long' })} {viewDate.getFullYear()}</div>\r\n          <button onClick={nextMonth} aria-label=\"Next month\">›</button>\r\n        </div>\r\n\r\n        <div className=\"cal-grid\">\r\n          <div className=\"cal-weekday\">Mo</div>\r\n          <div className=\"cal-weekday\">Tu</div>\r\n          <div className=\"cal-weekday\">We</div>\r\n          <div className=\"cal-weekday\">Th</div>\r\n          <div className=\"cal-weekday\">Fr</div>\r\n          <div className=\"cal-weekday\">Sa</div>\r\n          <div className=\"cal-weekday\">Su</div>\r\n\r\n          {rows.map((row, ri) => (\r\n            <React.Fragment key={ri}>\r\n              {row.map((d, ci) => {\r\n                const cls = d ? (isSameDay(d, selectedObj) ? ' selected' : (isSameDay(d, today) ? ' today' : '')) : ' empty';\r\n                return (\r\n                  <div key={`${ri}-${ci}`} className={`cal-day${cls}`}>\r\n                    {d ? (\r\n                        <button onClick={() => onChange(formatLocal(d))} aria-label={`Select ${d.toDateString()}`}>\r\n                          {d.getDate()}\r\n                        </button>\r\n                      ) : (\r\n                      <div aria-hidden className=\"empty-cell\" />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n          <div className=\"cal-footer\">\r\n            <button onClick={() => onChange(formatLocal(new Date()))}>Today</button>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Parameter status helper (returns label and CSS class)\r\n  const getParameterStatus = (param, value) => {\r\n    if (value === null || value === undefined || value === '') return { label: 'N/A', cls: 'status-na' };\r\n    const v = Number(value);\r\n    switch (param) {\r\n      case 'pH':\r\n        if (v >= 6.5 && v <= 8.5) return { label: 'Good', cls: 'status-good' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'DO (mg/L)':\r\n        if (v >= 5.0) return { label: 'Good', cls: 'status-good' };\r\n        if (v >= 3.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'BOD (mg/L)':\r\n        if (v <= 3.0) return { label: 'Good', cls: 'status-good' };\r\n        if (v <= 6.0) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'FC MPN/100ml':\r\n      case 'TC MPN/100ml':\r\n        if (v < 500) return { label: 'Good', cls: 'status-good' };\r\n        if (v <= 1000) return { label: 'Moderate', cls: 'status-moderate' };\r\n        return { label: 'Poor', cls: 'status-poor' };\r\n      case 'Water Quality':\r\n  // normalize and check for explicit 'non' first so \"Non Complying\" doesn't match 'comp'\r\n  const _s = String(value).toLowerCase();\r\n  if (_s.includes('non')) return { label: 'Non Complying', cls: 'status-poor' };\r\n  if (_s.includes('comp')) return { label: 'Complying', cls: 'status-good' };\r\n  return { label: String(value), cls: 'status-na' };\r\n      default:\r\n        return { label: '', cls: '' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"brand\">\r\n          <FaWater size={28} color=\"#fff\" />\r\n          <div>\r\n            <h1>RiverWatch</h1>\r\n            <p>Water quality predictions for Pune rivers</p>\r\n          </div>\r\n        </div>\r\n  <div className=\"legend\">\r\n          <div><span className=\"dot blue\"/> Mula</div>\r\n          <div><span className=\"dot teal\"/> Mutha</div>\r\n          <div><span className=\"dot orange\"/> Mula-Mutha</div>\r\n        </div>\r\n\r\n        <div className=\"sidebar-info\">\r\n          <h3>Rivers</h3>\r\n          <ul className=\"river-list\">\r\n            <li><span className=\"dot blue\"/> <strong>Mula</strong>\r\n              <div className=\"river-desc\">Originates to the north — urban stretches through western Pune with monitoring points along bridges.</div>\r\n            </li>\r\n            <li><span className=\"dot teal\"/> <strong>Mutha</strong>\r\n              <div className=\"river-desc\">Flows from Khadakvasla dam through Pune central areas; many monitoring points track water health downstream.</div>\r\n            </li>\r\n            <li><span className=\"dot orange\"/> <strong>Mula-Mutha</strong>\r\n              <div className=\"river-desc\">Confluence section where Mula and Mutha meet — sensitive zone for mixing and quality changes.</div>\r\n            </li>\r\n          </ul>\r\n\r\n          <h3 style={{marginTop:12}}>Parameters</h3>\r\n          <ul className=\"param-names\">\r\n            <li>pH</li>\r\n            <li>DO (mg/L)</li>\r\n            <li>BOD (mg/L)</li>\r\n            <li>FC MPN/100ml</li>\r\n            <li>TC MPN/100ml</li>\r\n            <li>Water Quality (Complying / Non Complying)</li>\r\n          </ul>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"main\">\r\n  <MapContainer center={[puneCenter.latitude, puneCenter.longitude]} zoom={puneCenter.zoom} className=\"map\" whenCreated={m => setMapInst(m)}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          <MapClickHandler onMapClick={handleMapClick} />\r\n\r\n          {puneLocations.map(loc => (\r\n            <CircleMarker key={loc.id}\r\n              center={[loc.coordinate.latitude, loc.coordinate.longitude]}\r\n              pathOptions={{ color: getRiverColor(loc.river), fillColor: getRiverColor(loc.river), fillOpacity: 0.9 }}\r\n              radius={10}\r\n              eventHandlers={{ click: () => handleMarkerClick(loc) }}\r\n            >\r\n              <Popup>\r\n                <div className=\"popup-card\">\r\n                  <div className=\"popup-header\">\r\n                    <strong className=\"popup-title\">{loc.name}</strong>\r\n                    <div className=\"muted popup-sub\">{loc.river}</div>\r\n                  </div>\r\n\r\n                  {predictions[loc.id] ? (\r\n                    <ul className=\"param-list popup-grid\">\r\n                      {Object.entries(predictions[loc.id]).map(([k, v]) => {\r\n                        const status = getParameterStatus(k, v);\r\n                        if (k === 'Water Quality') {\r\n                          return (\r\n                            <li className=\"param-row\" key={k}>\r\n                              <span className=\"param-name\">{k}</span>\r\n                              <span className=\"param-value\"><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                            </li>\r\n                          );\r\n                        }\r\n\r\n                        return (\r\n                          <li className=\"param-row\" key={k}>\r\n                            <span className=\"param-name\">{k}</span>\r\n                            <span className=\"param-value\"><span className=\"val-text\">{v}</span><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  ) : (\r\n                    <div>Loading predictions...</div>\r\n                  )}\r\n                </div>\r\n              </Popup>\r\n            </CircleMarker>\r\n          ))}\r\n\r\n          {/* debug: show selected start/end points */}\r\n          {startPoint ? <Marker position={[startPoint.latitude, startPoint.longitude]}><Popup>Start</Popup></Marker> : null}\r\n          {endPoint ? <Marker position={[endPoint.latitude, endPoint.longitude]}><Popup>End</Popup></Marker> : null}\r\n\r\n          {/* Render interpolated points */}\r\n          {interpPoints.map((pt, idx) => (\r\n            <CircleMarker key={`ip-${idx}`} center={[pt.latitude, pt.longitude]} radius={6} pathOptions={{ color: '#000', fillColor: '#00BCD4', fillOpacity: 0.9 }}>\r\n              <Popup>\r\n                <div style={{minWidth:200}}>\r\n                  <div><strong>Interpolated point</strong></div>\r\n                  <div className=\"muted\">Nearest: {pt.nearest_location || '—'}</div>\r\n                  <ul className=\"param-list popup-grid\">\r\n                    <li className=\"param-row\"><span className=\"param-name\">pH</span><span className=\"param-value\">{pt['pH']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">DO (mg/L)</span><span className=\"param-value\">{pt['DO (mg/L)']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">BOD (mg/L)</span><span className=\"param-value\">{pt['BOD (mg/L)']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">FC</span><span className=\"param-value\">{pt['FC MPN/100ml']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">TC</span><span className=\"param-value\">{pt['TC MPN/100ml']}</span></li>\r\n                    <li className=\"param-row\"><span className=\"param-name\">Quality</span><span className=\"param-value\">{pt['Water Quality']}</span></li>\r\n                  </ul>\r\n                </div>\r\n              </Popup>\r\n            </CircleMarker>\r\n          ))}\r\n        </MapContainer>\r\n\r\n  <div className=\"detail-panel\" style={{ '--river-color': getRiverColor(selected ? selected.river : 'Mula') }}>\r\n          <div className=\"detail-calendar\">\r\n            <Calendar date={selectedDate} onChange={d => setSelectedDate(d)} />\r\n          </div>\r\n          <div style={{marginTop:12}}>\r\n            <div style={{display:'flex', gap:8, alignItems:'center'}}>\r\n              <button onClick={() => setSelectMode(selectMode==='start' ? null : 'start')} className={selectMode==='start' ? 'active' : ''}>Pick Start</button>\r\n              <button onClick={() => setSelectMode(selectMode==='end' ? null : 'end')} className={selectMode==='end' ? 'active' : ''}>Pick End</button>\r\n              <button onClick={() => setSelectMode(selectMode==='riverPoint' ? null : 'riverPoint')} className={selectMode==='riverPoint' ? 'active' : ''}>Pick River Point</button>\r\n              <button onClick={() => { setSelectMode(null); setInterpPoints([]); }}>Cancel</button>\r\n              <button onClick={async () => {\r\n                if (!startPoint || !endPoint) return alert('Pick start and end by clicking the map');\r\n                // find nearest indices in the pre-sampled river array and send that slice to backend\r\n                const nearestIndex = (pt) => {\r\n                  let best = 0;\r\n                  let bestD = Infinity;\r\n                  for (let i = 0; i < preSampledRiver.length; i++) {\r\n                    const dlat = preSampledRiver[i].latitude - pt.latitude;\r\n                    const dlng = preSampledRiver[i].longitude - pt.longitude;\r\n                    const d2 = dlat * dlat + dlng * dlng;\r\n                    if (d2 < bestD) { bestD = d2; best = i; }\r\n                  }\r\n                  return best;\r\n                };\r\n                const si = nearestIndex(startPoint);\r\n                const ei = nearestIndex(endPoint);\r\n                const a = Math.min(si, ei);\r\n                const b = Math.max(si, ei);\r\n                const sub = preSampledRiver.slice(a, b + 1);\r\n\r\n                const d = new Date(selectedDate);\r\n                const body = { locations: sub, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true };\r\n                try {\r\n                  const res = await fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n                  const jb = await res.json();\r\n                  if (jb.error) return alert('Server: ' + jb.error);\r\n                  setInterpPoints(jb.predictions || []);\r\n                } catch (err) { alert('Request failed'); }\r\n              }}>Interpolate</button>\r\n              <div style={{marginTop:8}}>\r\n                <div style={{marginTop:8}}>Or paste a pre-sampled polyline (JSON array of <code>{\"{latitude, longitude}\"}</code>) and pick k of them:</div>\r\n                <textarea value={userLocationsText} onChange={e => setUserLocationsText(e.target.value)} placeholder='[{\"latitude\":18.5,\"longitude\":73.85}, ...]' style={{width:'100%',height:120,marginTop:6,fontSize:12}} />\r\n                <div style={{display:'flex', gap:8, alignItems:'center', marginTop:6}}>\r\n                  <label style={{display:'flex', gap:6, alignItems:'center'}}>Pick k:\r\n                    <input type=\"number\" min={1} max={50} value={sampleCount} onChange={e => setSampleCount(Number(e.target.value))} style={{width:80, marginLeft:6}} />\r\n                  </label>\r\n                  <button onClick={async () => {\r\n                    let locs;\r\n                    try {\r\n                      locs = JSON.parse(userLocationsText);\r\n                      if (!Array.isArray(locs) || locs.length < 2) return alert('Provide a JSON array of at least 2 points');\r\n                    } catch (err) {\r\n                      return alert('Invalid JSON');\r\n                    }\r\n                    const d = new Date(selectedDate);\r\n                    const body = { locations: locs, points: sampleCount, month: d.getMonth()+1, year: d.getFullYear(), pick_from_input: true };\r\n                    try {\r\n                      const res = await fetch(`${API_BASE}/interpolate_predict`, { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(body) });\r\n                      const jb = await res.json();\r\n                      if (jb.error) return alert('Server: ' + jb.error);\r\n                      setInterpPoints(jb.predictions || []);\r\n                    } catch (err) { alert('Request failed'); }\r\n                  }}>Use provided points</button>\r\n                </div>\r\n              </div>\r\n              <label style={{marginLeft:8}}><input type=\"checkbox\" checked={followRiver} onChange={e => setFollowRiver(e.target.checked)} /> Follow river</label>\r\n            </div>\r\n            <div style={{marginTop:8}}>\r\n              <div>Start: {startPoint ? `${startPoint.latitude.toFixed(5)}, ${startPoint.longitude.toFixed(5)}` : '—'}</div>\r\n              <div>End: {endPoint ? `${endPoint.latitude.toFixed(5)}, ${endPoint.longitude.toFixed(5)}` : '—'}</div>\r\n            </div>\r\n            <div style={{marginTop:8}}>\r\n              <strong>Pick mode:</strong> {selectMode || 'none'} {selectMode ? <span style={{marginLeft:8, color:'#777'}}>Click on the map to set point</span> : null}\r\n            </div>\r\n            <div style={{marginTop:8}}>\r\n              <strong>Pick mode:</strong> {selectMode || 'none'}\r\n            </div>\r\n          </div>\r\n          <div className=\"selected-date\">Selected date: <strong>{new Date(selectedDate).toLocaleDateString()}</strong></div>\r\n          {selected ? (\r\n            <div>\r\n              <h2>{selected.name}</h2>\r\n              <p className=\"muted\">{selected.river} • {selected.description}</p>\r\n              <h3>Prediction for {new Date(selectedDate).toLocaleDateString()}</h3>\r\n              {selected.prediction ? (\r\n                <ul className=\"param-list large\">\r\n                  {Object.entries(selected.prediction).filter(([k]) => k !== 'Water Quality').map(([k, v]) => {\r\n                    const status = getParameterStatus(k, v);\r\n                    return <li key={k}><span className=\"param\">{k}</span><span className=\"value\">{v}</span><span className={`badge ${status.cls}`}>{status.label}</span></li>\r\n                  })}\r\n                  {(() => {\r\n                    const q = selected.prediction['Water Quality'];\r\n                    const status = getParameterStatus('Water Quality', q);\r\n                    return (\r\n                      <li className=\"quality\">\r\n                        <span className=\"param\">Water Quality</span>\r\n                        <span className=\"param-value\"><span className={`badge ${status.cls}`}>{status.label}</span></span>\r\n                      </li>\r\n                    );\r\n                  })()}\r\n                </ul>\r\n              ) : <div>Loading...</div>}\r\n            </div>\r\n          ) : (\r\n            <div className=\"placeholder\">Select a location on the map or from the list.</div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}